package it.imolinfo.jbi4corba.test.testprovidercomplexinout;


/**
* it/imolinfo/jbi4corba/test/testprovidercomplexinout/_EchoComplexInOutStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from EchoComplexInOut.idl
* Tuesday, February 5, 2008 11:09:37 AM GMT
*/


//==================================================
public class _EchoComplexInOutStub extends org.omg.CORBA.portable.ObjectImpl implements it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoComplexInOut
{

  public String echo (org.omg.CORBA.StringHolder msg)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echo", true);
                $out.write_string (msg.value);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                msg.value = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echo (msg        );
            } finally {
                _releaseReply ($in);
            }
  } // echo

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoVT echoValueType (it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoVTHolder e)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoValueType", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoVTHelper.write ($out, e.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoVT $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoVTHelper.read ($in);
                e.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoVTHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoValueType (e        );
            } finally {
                _releaseReply ($in);
            }
  } // echoValueType

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.MyLong echoValueBoxedTypePrimitive (it.imolinfo.jbi4corba.test.testprovidercomplexinout.MyLongHolder e)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoValueBoxedTypePrimitive", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.MyLongHelper.write ($out, e.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.MyLong $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.MyLongHelper.read ($in);
                e.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.MyLongHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoValueBoxedTypePrimitive (e        );
            } finally {
                _releaseReply ($in);
            }
  } // echoValueBoxedTypePrimitive

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequence echoValueBoxedTypeComplex (it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequenceHolder e)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoValueBoxedTypeComplex", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequenceHelper.write ($out, e.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequence $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequenceHelper.read ($in);
                e.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequenceHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoValueBoxedTypeComplex (e        );
            } finally {
                _releaseReply ($in);
            }
  } // echoValueBoxedTypeComplex

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoStruct echoStruct (it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoStructHolder es)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoStruct", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoStructHelper.write ($out, es.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoStruct $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoStructHelper.read ($in);
                es.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoStructHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoStruct (es        );
            } finally {
                _releaseReply ($in);
            }
  } // echoStruct

  public int[] echoSequence (it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqLongHolder es)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoSequence", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqLongHelper.write ($out, es.value);
                $in = _invoke ($out);
                int $result[] = it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqLongHelper.read ($in);
                es.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqLongHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoSequence (es        );
            } finally {
                _releaseReply ($in);
            }
  } // echoSequence

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequence echoSequenceValueType (it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequenceHolder es)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoSequenceValueType", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequenceHelper.write ($out, es.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequence $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequenceHelper.read ($in);
                es.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequenceHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoSequenceValueType (es        );
            } finally {
                _releaseReply ($in);
            }
  } // echoSequenceValueType

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoStruct[] echoSequenceSeqEchoStruct (it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqEchoStructHolder es)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoSequenceSeqEchoStruct", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqEchoStructHelper.write ($out, es.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.EchoStruct $result[] = it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqEchoStructHelper.read ($in);
                es.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqEchoStructHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoSequenceSeqEchoStruct (es        );
            } finally {
                _releaseReply ($in);
            }
  } // echoSequenceSeqEchoStruct

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequence[] echoSequenceSeqMySequence (it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqMySequenceHolder es)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoSequenceSeqMySequence", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqMySequenceHelper.write ($out, es.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.MySequence $result[] = it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqMySequenceHelper.read ($in);
                es.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.SeqMySequenceHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoSequenceSeqMySequence (es        );
            } finally {
                _releaseReply ($in);
            }
  } // echoSequenceSeqMySequence

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfStruct echoStructOfStruct (it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfStructHolder v)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoStructOfStruct", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfStructHelper.write ($out, v.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfStruct $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfStructHelper.read ($in);
                v.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfStructHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoStructOfStruct (v        );
            } finally {
                _releaseReply ($in);
            }
  } // echoStructOfStruct

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimi echoVTPrimi (it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiHolder v)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoVTPrimi", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiHelper.write ($out, v.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimi $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiHelper.read ($in);
                v.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoVTPrimi (v        );
            } finally {
                _releaseReply ($in);
            }
  } // echoVTPrimi

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiSeq echoVTPrimiSeq (it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiSeqHolder v)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoVTPrimiSeq", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiSeqHelper.write ($out, v.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiSeq $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiSeqHelper.read ($in);
                v.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.VTPrimiSeqHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoVTPrimiSeq (v        );
            } finally {
                _releaseReply ($in);
            }
  } // echoVTPrimiSeq

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfValueType echoValueTypeOfValueType (it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfValueTypeHolder v)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoValueTypeOfValueType", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfValueTypeHelper.write ($out, v.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfValueType $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfValueTypeHelper.read ($in);
                v.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfValueTypeHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoValueTypeOfValueType (v        );
            } finally {
                _releaseReply ($in);
            }
  } // echoValueTypeOfValueType

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfStruct echoValueTypeOfStruct (it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfStructHolder v)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoValueTypeOfStruct", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfStructHelper.write ($out, v.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfStruct $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfStructHelper.read ($in);
                v.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.ValueTypeOfStructHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoValueTypeOfStruct (v        );
            } finally {
                _releaseReply ($in);
            }
  } // echoValueTypeOfStruct

  public it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfValuetype echoStructOfValuetype (it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfValuetypeHolder v)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echoStructOfValuetype", true);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfValuetypeHelper.write ($out, v.value);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfValuetype $result = it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfValuetypeHelper.read ($in);
                v.value = it.imolinfo.jbi4corba.test.testprovidercomplexinout.StructOfValuetypeHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echoStructOfValuetype (v        );
            } finally {
                _releaseReply ($in);
            }
  } // echoStructOfValuetype

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:it/imolinfo/jbi4corba/test/testprovidercomplexinout/EchoComplexInOut:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _EchoComplexInOutStub
