<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="test-provider-complex-inout" soapui-version="2.5" resourceRoot="" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="ProjectSettings@projectRoot">/home/raffaele/lavoro/Progetti/nokia/progetto/pragma_prefix/open-jbi-components/contrib-imola/corba-bc/integration-test/test-provider-complex-inout/provider-complex-inout-integration-test/src/test/etc/soapui</con:setting></con:settings><con:interface name="EchoComplexInOutOperationsCorbaBinding" bindingName="{urn:jbi4corba/test-provider-complex-inout}EchoComplexInOutOperationsCorbaBinding" soapVersion="1_1" definition="http://localhost:8192/Service/test-provider-complex-inout/?wsdl" xsi:type="con:WsdlInterface" wsaVersion="NONE" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8192/Service/test-provider-complex-inout/?wsdl"><con:part><con:url>http://localhost:8192/Service/test-provider-complex-inout/?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="EchoComplex" targetNamespace="urn:jbi4corba/test-provider-complex-inout" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:imolacorba="uri://schemas.imola.it/jbi/wsdl-extensions/corba/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="urn:jbi4corba/test-provider-complex-inout" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="urn:jbi4corba/test-provider-complex-inout" xmlns="urn:jbi4corba/test-provider-complex-inout" xmlns:ns1="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/" schemaLocation="http://localhost:8192/provider-complex-inout-http-consumer/TypeDef_testprovidercomplexinout.test.jbi4corba.imolinfo.it.xsd"/>
      <xs:element name="echo">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="msg" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="xs:string"/>
            <xs:element minOccurs="0" name="msg" type="xs:string"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoSequence">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="es" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoSequenceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:int"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="es" type="xs:int"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoSequenceSeqEchoStruct">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="es" type="ns1:echoStruct"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoSequenceSeqEchoStructResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:echoStruct"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="es" type="ns1:echoStruct"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoSequenceSeqMySequence">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="es" type="ns1:mySequence"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoSequenceSeqMySequenceResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="ns1:mySequence"/>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="es" type="ns1:mySequence"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoSequenceValueType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="es" type="ns1:mySequence"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoSequenceValueTypeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:mySequence"/>
            <xs:element minOccurs="0" name="es" type="ns1:mySequence"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoStruct">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="es" type="ns1:echoStruct"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoStructOfStruct">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="v" type="ns1:structOfStruct"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoStructOfStructResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:structOfStruct"/>
            <xs:element minOccurs="0" name="v" type="ns1:structOfStruct"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoStructOfValuetype">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="v" type="ns1:structOfValuetype"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoStructOfValuetypeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:structOfValuetype"/>
            <xs:element minOccurs="0" name="v" type="ns1:structOfValuetype"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoStructResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:echoStruct"/>
            <xs:element minOccurs="0" name="es" type="ns1:echoStruct"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoVTPrimi">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="v" type="ns1:vtPrimi"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoVTPrimiResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:vtPrimi"/>
            <xs:element minOccurs="0" name="v" type="ns1:vtPrimi"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoVTPrimiSeq">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="v" type="ns1:vtPrimiSeq"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoVTPrimiSeqResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:vtPrimiSeq"/>
            <xs:element minOccurs="0" name="v" type="ns1:vtPrimiSeq"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueBoxedTypeComplex">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="e" type="ns1:mySequence"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueBoxedTypeComplexResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:mySequence"/>
            <xs:element minOccurs="0" name="e" type="ns1:mySequence"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueBoxedTypePrimitive">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="e" type="ns1:myLong"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueBoxedTypePrimitiveResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:myLong"/>
            <xs:element minOccurs="0" name="e" type="ns1:myLong"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="e" type="ns1:echoVT"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueTypeOfStruct">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="v" type="ns1:valueTypeOfStruct"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueTypeOfStructResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:valueTypeOfStruct"/>
            <xs:element minOccurs="0" name="v" type="ns1:valueTypeOfStruct"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueTypeOfValueType">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="v" type="ns1:valueTypeOfValueType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueTypeOfValueTypeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:valueTypeOfValueType"/>
            <xs:element minOccurs="0" name="v" type="ns1:valueTypeOfValueType"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="echoValueTypeResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="return" type="ns1:echoVT"/>
            <xs:element minOccurs="0" name="e" type="ns1:echoVT"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="echoVTPrimiSeqResponse">
    <wsdl:part name="parameters" element="tns:echoVTPrimiSeqResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructOfValuetype">
    <wsdl:part name="parameters" element="tns:echoStructOfValuetype"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructOfStruct">
    <wsdl:part name="parameters" element="tns:echoStructOfStruct"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceSeqEchoStruct">
    <wsdl:part name="parameters" element="tns:echoSequenceSeqEchoStruct"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceSeqEchoStructResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceSeqEchoStructResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequence">
    <wsdl:part name="parameters" element="tns:echoSequence"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceSeqMySequence">
    <wsdl:part name="parameters" element="tns:echoSequenceSeqMySequence"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeOfStructResponse">
    <wsdl:part name="parameters" element="tns:echoValueTypeOfStructResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueType">
    <wsdl:part name="parameters" element="tns:echoValueType"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoResponse">
    <wsdl:part name="parameters" element="tns:echoResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoVTPrimi">
    <wsdl:part name="parameters" element="tns:echoVTPrimi"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypePrimitiveResponse">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypePrimitiveResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoVTPrimiSeq">
    <wsdl:part name="parameters" element="tns:echoVTPrimiSeq"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStruct">
    <wsdl:part name="parameters" element="tns:echoStruct"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeOfStruct">
    <wsdl:part name="parameters" element="tns:echoValueTypeOfStruct"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypeComplexResponse">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypeComplexResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypeComplex">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypeComplex"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeOfValueTypeResponse">
    <wsdl:part name="parameters" element="tns:echoValueTypeOfValueTypeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeOfValueType">
    <wsdl:part name="parameters" element="tns:echoValueTypeOfValueType"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceSeqMySequenceResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceSeqMySequenceResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echo">
    <wsdl:part name="parameters" element="tns:echo"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoVTPrimiResponse">
    <wsdl:part name="parameters" element="tns:echoVTPrimiResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructResponse">
    <wsdl:part name="parameters" element="tns:echoStructResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypePrimitive">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypePrimitive"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceValueType">
    <wsdl:part name="parameters" element="tns:echoSequenceValueType"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceValueTypeResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceValueTypeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructOfValuetypeResponse">
    <wsdl:part name="parameters" element="tns:echoStructOfValuetypeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeResponse">
    <wsdl:part name="parameters" element="tns:echoValueTypeResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructOfStructResponse">
    <wsdl:part name="parameters" element="tns:echoStructOfStructResponse"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="EchoComplexInOutOperations">
    <wsdl:operation name="echoValueType">
      <wsdl:input name="echoValueType" message="tns:echoValueType"></wsdl:input>
      <wsdl:output name="echoValueTypeResponse" message="tns:echoValueTypeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypeComplex">
      <wsdl:input name="echoValueBoxedTypeComplex" message="tns:echoValueBoxedTypeComplex"></wsdl:input>
      <wsdl:output name="echoValueBoxedTypeComplexResponse" message="tns:echoValueBoxedTypeComplexResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoVTPrimiSeq">
      <wsdl:input name="echoVTPrimiSeq" message="tns:echoVTPrimiSeq"></wsdl:input>
      <wsdl:output name="echoVTPrimiSeqResponse" message="tns:echoVTPrimiSeqResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo">
      <wsdl:input name="echo" message="tns:echo"></wsdl:input>
      <wsdl:output name="echoResponse" message="tns:echoResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceSeqMySequence">
      <wsdl:input name="echoSequenceSeqMySequence" message="tns:echoSequenceSeqMySequence"></wsdl:input>
      <wsdl:output name="echoSequenceSeqMySequenceResponse" message="tns:echoSequenceSeqMySequenceResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueTypeOfStruct">
      <wsdl:input name="echoValueTypeOfStruct" message="tns:echoValueTypeOfStruct"></wsdl:input>
      <wsdl:output name="echoValueTypeOfStructResponse" message="tns:echoValueTypeOfStructResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStruct">
      <wsdl:input name="echoStruct" message="tns:echoStruct"></wsdl:input>
      <wsdl:output name="echoStructResponse" message="tns:echoStructResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequence">
      <wsdl:input name="echoSequence" message="tns:echoSequence"></wsdl:input>
      <wsdl:output name="echoSequenceResponse" message="tns:echoSequenceResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoVTPrimi">
      <wsdl:input name="echoVTPrimi" message="tns:echoVTPrimi"></wsdl:input>
      <wsdl:output name="echoVTPrimiResponse" message="tns:echoVTPrimiResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypePrimitive">
      <wsdl:input name="echoValueBoxedTypePrimitive" message="tns:echoValueBoxedTypePrimitive"></wsdl:input>
      <wsdl:output name="echoValueBoxedTypePrimitiveResponse" message="tns:echoValueBoxedTypePrimitiveResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStructOfStruct">
      <wsdl:input name="echoStructOfStruct" message="tns:echoStructOfStruct"></wsdl:input>
      <wsdl:output name="echoStructOfStructResponse" message="tns:echoStructOfStructResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceSeqEchoStruct">
      <wsdl:input name="echoSequenceSeqEchoStruct" message="tns:echoSequenceSeqEchoStruct"></wsdl:input>
      <wsdl:output name="echoSequenceSeqEchoStructResponse" message="tns:echoSequenceSeqEchoStructResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceValueType">
      <wsdl:input name="echoSequenceValueType" message="tns:echoSequenceValueType"></wsdl:input>
      <wsdl:output name="echoSequenceValueTypeResponse" message="tns:echoSequenceValueTypeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStructOfValuetype">
      <wsdl:input name="echoStructOfValuetype" message="tns:echoStructOfValuetype"></wsdl:input>
      <wsdl:output name="echoStructOfValuetypeResponse" message="tns:echoStructOfValuetypeResponse"></wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueTypeOfValueType">
      <wsdl:input name="echoValueTypeOfValueType" message="tns:echoValueTypeOfValueType"></wsdl:input>
      <wsdl:output name="echoValueTypeOfValueTypeResponse" message="tns:echoValueTypeOfValueTypeResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EchoComplexInOutOperationsCorbaBinding" type="tns:EchoComplexInOutOperations">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="echoStructOfValuetype">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoStructOfValuetype">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoStructOfValuetypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueTypeOfStruct">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoValueTypeOfStruct">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoValueTypeOfStructResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStructOfStruct">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoStructOfStruct">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoStructOfStructResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueTypeOfValueType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoValueTypeOfValueType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoValueTypeOfValueTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoValueType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoValueTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceSeqEchoStruct">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoSequenceSeqEchoStruct">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoSequenceSeqEchoStructResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceValueType">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoSequenceValueType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoSequenceValueTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequence">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoSequence">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoSequenceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoVTPrimiSeq">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoVTPrimiSeq">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoVTPrimiSeqResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceSeqMySequence">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoSequenceSeqMySequence">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoSequenceSeqMySequenceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStruct">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoStruct">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoStructResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypeComplex">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoValueBoxedTypeComplex">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoValueBoxedTypeComplexResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypePrimitive">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoValueBoxedTypePrimitive">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoValueBoxedTypePrimitiveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoVTPrimi">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="echoVTPrimi">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="echoVTPrimiResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EchoComplexInOut">
    <wsdl:port name="EchoComplexInOutOperationsCorbaPort" binding="tns:EchoComplexInOutOperationsCorbaBinding">
      <soap:address location="http://localhost:8192/Service/test-provider-complex-inout/"/>
    </wsdl:port>
  </wsdl:service>
  <plnk:partnerLinkType name="EchoComplexInOutOperations">
    <plnk:role name="EchoComplexInOutOperationsPortTypeRole" portType="tns:EchoComplexInOutOperations"/>
  </plnk:partnerLinkType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:8192/provider-complex-inout-http-consumer/TypeDef_testprovidercomplexinout.test.jbi4corba.imolinfo.it.xsd</con:url><con:content><![CDATA[<xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
  <xs:complexType name="echoVT">
    <xs:sequence>
      <xs:element name="publicShort" type="xs:short"/>
      <xs:element name="privateLong" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="mySequence">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="data" nillable="true" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vtPrimiSeq">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="0" name="data" nillable="true" type="tns:vtPrimi"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="vtPrimi">
    <xs:sequence>
      <xs:element name="fieldBoolean" type="xs:boolean"/>
      <xs:element name="fieldChar" type="xs:unsignedShort"/>
      <xs:element name="fieldWChar" type="xs:unsignedShort"/>
      <xs:element name="fieldOctet" type="xs:byte"/>
      <xs:element minOccurs="0" name="fieldString" type="xs:string"/>
      <xs:element minOccurs="0" name="fieldWString" type="xs:string"/>
      <xs:element name="fieldShort" type="xs:short"/>
      <xs:element name="fieldUnsignedShort" type="xs:short"/>
      <xs:element name="fieldLong" type="xs:int"/>
      <xs:element name="fieldUnsignedLong" type="xs:int"/>
      <xs:element name="fieldLongLong" type="xs:long"/>
      <xs:element name="fieldUnsignedLongLong" type="xs:long"/>
      <xs:element name="fieldFloat" type="xs:float"/>
      <xs:element name="fieldDouble" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="valueTypeOfStruct">
    <xs:sequence>
      <xs:element minOccurs="0" name="data" type="tns:echoStruct"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="echoStruct">
    <xs:sequence>
      <xs:element name="fieldBoolean" type="xs:boolean"/>
      <xs:element name="fieldChar" type="xs:unsignedShort"/>
      <xs:element name="fieldWChar" type="xs:unsignedShort"/>
      <xs:element name="fieldOctet" type="xs:byte"/>
      <xs:element minOccurs="0" name="fieldString" type="xs:string"/>
      <xs:element minOccurs="0" name="fieldWString" type="xs:string"/>
      <xs:element name="fieldShort" type="xs:short"/>
      <xs:element name="fieldUnsignedShort" type="xs:short"/>
      <xs:element name="fieldLong" type="xs:int"/>
      <xs:element name="fieldUnsignedLong" type="xs:int"/>
      <xs:element name="fieldLongLong" type="xs:long"/>
      <xs:element name="fieldUnsignedLongLong" type="xs:long"/>
      <xs:element name="fieldFloat" type="xs:float"/>
      <xs:element name="fieldDouble" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="myLong">
    <xs:sequence>
      <xs:element name="data" type="xs:int"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="structOfStruct">
    <xs:sequence>
      <xs:element minOccurs="0" name="internalStruct" type="tns:echoStruct"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="structOfValuetype">
    <xs:sequence>
      <xs:element minOccurs="0" name="data" type="tns:vtPrimi"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="valueTypeOfValueType">
    <xs:sequence>
      <xs:element minOccurs="0" name="data" type="tns:vtPrimi"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="echo" bindingOperationName="echo" inputName="echo" outputName="echoResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echo>
         <!--Optional:-->
         <test:msg>gero et</test:msg>
      </test:echo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:call></con:operation><con:operation isOneWay="false" action="" name="echoSequence" bindingOperationName="echoSequence" inputName="echoSequence" outputName="echoSequenceResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoSequence>
         <!--Zero or more repetitions:-->
         <test:es>10</test:es>
      </test:echoSequence>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:call></con:operation><con:operation isOneWay="false" action="" name="echoSequenceSeqEchoStruct" bindingOperationName="echoSequenceSeqEchoStruct" inputName="echoSequenceSeqEchoStruct" outputName="echoSequenceSeqEchoStructResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoSequenceSeqEchoStruct>
         <!--Zero or more repetitions:-->
         <test:es>
            <tes:fieldBoolean>true</tes:fieldBoolean>
            <tes:fieldChar>2</tes:fieldChar>
            <tes:fieldDouble>2</tes:fieldDouble>
            <tes:fieldFloat>2</tes:fieldFloat>
            <tes:fieldLong>2</tes:fieldLong>
            <tes:fieldLongLong>2</tes:fieldLongLong>
            <tes:fieldOctet>2</tes:fieldOctet>
            <tes:fieldShort>2</tes:fieldShort>
            <!--Optional:-->
            <tes:fieldString>string</tes:fieldString>
            <tes:fieldUnsignedLong>2</tes:fieldUnsignedLong>
            <tes:fieldUnsignedLongLong>2</tes:fieldUnsignedLongLong>
            <tes:fieldUnsignedShort>2</tes:fieldUnsignedShort>
            <tes:fieldWChar>2</tes:fieldWChar>
            <!--Optional:-->
            <tes:fieldWString>wstring</tes:fieldWString>
         </test:es>

         <test:es>

            <tes:fieldBoolean>true</tes:fieldBoolean>
            <tes:fieldChar>4</tes:fieldChar>
            <tes:fieldDouble>4</tes:fieldDouble>
            <tes:fieldFloat>4</tes:fieldFloat>
            <tes:fieldLong>4</tes:fieldLong>
            <tes:fieldLongLong>4</tes:fieldLongLong>
            <tes:fieldOctet>4</tes:fieldOctet>
            <tes:fieldShort>4</tes:fieldShort>
            <!--Optional:-->
            <tes:fieldString>string4</tes:fieldString>
            <tes:fieldUnsignedLong>4</tes:fieldUnsignedLong>
            <tes:fieldUnsignedLongLong>4</tes:fieldUnsignedLongLong>
            <tes:fieldUnsignedShort>4</tes:fieldUnsignedShort>
            <tes:fieldWChar>4</tes:fieldWChar>
            <!--Optional:-->
            <tes:fieldWString>wstring4</tes:fieldWString>
         </test:es>

      </test:echoSequenceSeqEchoStruct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoSequenceSeqMySequence" bindingOperationName="echoSequenceSeqMySequence" inputName="echoSequenceSeqMySequence" outputName="echoSequenceSeqMySequenceResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoSequenceSeqMySequence>
         <!--Zero or more repetitions:-->
         <test:es>
            <!--Zero or more repetitions:-->
            <tes:data>1</tes:data>
            <tes:data>1</tes:data>
            <tes:data>1</tes:data>
            <tes:data>1</tes:data>
         </test:es>


      </test:echoSequenceSeqMySequence>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoSequenceValueType" bindingOperationName="echoSequenceValueType" inputName="echoSequenceValueType" outputName="echoSequenceValueTypeResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoSequenceValueType>
         <!--Optional:-->
         <test:es>
            <!--Zero or more repetitions:-->
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
         </test:es>
      </test:echoSequenceValueType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoStruct" bindingOperationName="echoStruct" inputName="echoStruct" outputName="echoStructResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoStruct>
         <!--Optional:-->
         <test:es>
            <tes:fieldBoolean>true</tes:fieldBoolean>
            <tes:fieldChar>2</tes:fieldChar>
            <tes:fieldDouble>2</tes:fieldDouble>
            <tes:fieldFloat>2</tes:fieldFloat>
            <tes:fieldLong>2</tes:fieldLong>
            <tes:fieldLongLong>2</tes:fieldLongLong>
            <tes:fieldOctet>2</tes:fieldOctet>
            <tes:fieldShort>2</tes:fieldShort>
            <!--Optional:-->
            <tes:fieldString>gero</tes:fieldString>
            <tes:fieldUnsignedLong>2</tes:fieldUnsignedLong>
            <tes:fieldUnsignedLongLong>2</tes:fieldUnsignedLongLong>
            <tes:fieldUnsignedShort>2</tes:fieldUnsignedShort>
            <tes:fieldWChar>2</tes:fieldWChar>
            <!--Optional:-->
            <tes:fieldWString>wgero</tes:fieldWString>
         </test:es>
      </test:echoStruct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:call></con:operation><con:operation isOneWay="false" action="" name="echoStructOfStruct" bindingOperationName="echoStructOfStruct" inputName="echoStructOfStruct" outputName="echoStructOfStructResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoStructOfStruct>
         <!--Optional:-->
         <test:v>
            <!--Optional:-->
            <tes:internalStruct>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>2</tes:fieldChar>
               <tes:fieldDouble>2</tes:fieldDouble>
               <tes:fieldFloat>2</tes:fieldFloat>
               <tes:fieldLong>2</tes:fieldLong>
               <tes:fieldLongLong>2</tes:fieldLongLong>
               <tes:fieldOctet>2</tes:fieldOctet>
               <tes:fieldShort>2</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>2</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>2</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>2</tes:fieldUnsignedShort>
               <tes:fieldWChar>2</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:internalStruct>
         </test:v>
      </test:echoStructOfStruct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:call></con:operation><con:operation isOneWay="false" action="" name="echoStructOfValuetype" bindingOperationName="echoStructOfValuetype" inputName="echoStructOfValuetype" outputName="echoStructOfValuetypeResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoStructOfValuetype>
         <!--Optional:-->
         <test:v>
            <!--Optional:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>1</tes:fieldChar>
               <tes:fieldDouble>1</tes:fieldDouble>
               <tes:fieldFloat>1</tes:fieldFloat>
               <tes:fieldLong>1</tes:fieldLong>
               <tes:fieldLongLong>1</tes:fieldLongLong>
               <tes:fieldOctet>1</tes:fieldOctet>
               <tes:fieldShort>1</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
               <tes:fieldWChar>1</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:data>
         </test:v>
      </test:echoStructOfValuetype>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoValueBoxedTypeComplex" bindingOperationName="echoValueBoxedTypeComplex" inputName="echoValueBoxedTypeComplex" outputName="echoValueBoxedTypeComplexResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueBoxedTypeComplex>
         <!--Optional:-->
         <test:e>
            <!--Zero or more repetitions:-->
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>

         </test:e>
      </test:echoValueBoxedTypeComplex>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoValueBoxedTypePrimitive" bindingOperationName="echoValueBoxedTypePrimitive" inputName="echoValueBoxedTypePrimitive" outputName="echoValueBoxedTypePrimitiveResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueBoxedTypePrimitive>
         <!--Optional:-->
         <test:e>
            <tes:data>10</tes:data>
         </test:e>
      </test:echoValueBoxedTypePrimitive>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoValueType" bindingOperationName="echoValueType" inputName="echoValueType" outputName="echoValueTypeResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueType>
         <!--Optional:-->
         <test:e>
            <tes:privateLong>10</tes:privateLong>
            <tes:publicShort>10</tes:publicShort>
         </test:e>
      </test:echoValueType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoValueTypeOfStruct" bindingOperationName="echoValueTypeOfStruct" inputName="echoValueTypeOfStruct" outputName="echoValueTypeOfStructResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueTypeOfStruct>
         <!--Optional:-->
         <test:v>
            <!--Optional:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>1</tes:fieldChar>
               <tes:fieldDouble>1</tes:fieldDouble>
               <tes:fieldFloat>1</tes:fieldFloat>
               <tes:fieldLong>1</tes:fieldLong>
               <tes:fieldLongLong>1</tes:fieldLongLong>
               <tes:fieldOctet>1</tes:fieldOctet>
               <tes:fieldShort>1</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
               <tes:fieldWChar>1</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:data>
         </test:v>
      </test:echoValueTypeOfStruct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoValueTypeOfValueType" bindingOperationName="echoValueTypeOfValueType" inputName="echoValueTypeOfValueType" outputName="echoValueTypeOfValueTypeResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueTypeOfValueType>
         <!--Optional:-->
         <test:v>
            <!--Optional:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>1</tes:fieldChar>
               <tes:fieldDouble>1</tes:fieldDouble>
               <tes:fieldFloat>1</tes:fieldFloat>
               <tes:fieldLong>1</tes:fieldLong>
               <tes:fieldLongLong>1</tes:fieldLongLong>
               <tes:fieldOctet>1</tes:fieldOctet>
               <tes:fieldShort>1</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
               <tes:fieldWChar>1</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:data>
         </test:v>
      </test:echoValueTypeOfValueType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoVTPrimi" bindingOperationName="echoVTPrimi" inputName="echoVTPrimi" outputName="echoVTPrimiResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoVTPrimi>
         <!--Optional:-->
         <test:v>
            <tes:fieldBoolean>true</tes:fieldBoolean>
            <tes:fieldChar>1</tes:fieldChar>
            <tes:fieldDouble>1</tes:fieldDouble>
            <tes:fieldFloat>1</tes:fieldFloat>
            <tes:fieldLong>1</tes:fieldLong>
            <tes:fieldLongLong>1</tes:fieldLongLong>
            <tes:fieldOctet>1</tes:fieldOctet>
            <tes:fieldShort>1</tes:fieldShort>
            <!--Optional:-->
            <tes:fieldString>gero</tes:fieldString>
            <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
            <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
            <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
            <tes:fieldWChar>1</tes:fieldWChar>
            <!--Optional:-->
            <tes:fieldWString>wgero</tes:fieldWString>
         </test:v>
      </test:echoVTPrimi>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation><con:operation isOneWay="false" action="" name="echoVTPrimiSeq" bindingOperationName="echoVTPrimiSeq" inputName="echoVTPrimiSeq" outputName="echoVTPrimiSeqResponse" receivesAttachments="false" sendsAttachments="false" type="Request-Response"><con:settings/><con:call name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoVTPrimiSeq>
         <!--Optional:-->
         <test:v>
            <!--Zero or more repetitions:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>1</tes:fieldChar>
               <tes:fieldDouble>1</tes:fieldDouble>
               <tes:fieldFloat>1</tes:fieldFloat>
               <tes:fieldLong>1</tes:fieldLong>
               <tes:fieldLongLong>1</tes:fieldLongLong>
               <tes:fieldOctet>1</tes:fieldOctet>
               <tes:fieldShort>1</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
               <tes:fieldWChar>1</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:data>
            <!--Zero or more repetitions:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>10</tes:fieldChar>
               <tes:fieldDouble>10</tes:fieldDouble>
               <tes:fieldFloat>10</tes:fieldFloat>
               <tes:fieldLong>10</tes:fieldLong>
               <tes:fieldLongLong>10</tes:fieldLongLong>
               <tes:fieldOctet>10</tes:fieldOctet>
               <tes:fieldShort>10</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero000</tes:fieldString>
               <tes:fieldUnsignedLong>10</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>10</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>10</tes:fieldUnsignedShort>
               <tes:fieldWChar>10</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero000</tes:fieldWString>
            </tes:data>
         </test:v>
      </test:echoVTPrimiSeq>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request></con:call></con:operation></con:interface><con:testSuite name="testsuite-provider-complex-inout"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="EchoComplexInOutOperationsCorbaBinding TestSuite" searchProperties="true" maxResults="0" id="28cd9f14-b728-49e4-9e43-d904a7c5057a"><con:settings/><con:testStep type="request" name="echo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echo</con:operation><con:request name="echo" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echo>
         <!--Optional:-->
         <test:msg>gero et</test:msg>
      </test:echo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero et changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:request></con:config></con:testStep><con:testStep type="request" name="echoSequence"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoSequence</con:operation><con:request name="echoSequence" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoSequence>
         <!--Zero or more repetitions:-->
         <test:es>10</test:es>
         <test:es>10</test:es>

      </test:echoSequence>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>10</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoSequenceSeqEchoStruct"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoSequenceSeqEchoStruct</con:operation><con:request name="echoSequenceSeqEchoStruct" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoSequenceSeqEchoStruct>
         <!--Zero or more repetitions:-->
         <test:es>
            <tes:fieldBoolean>true</tes:fieldBoolean>
            <tes:fieldChar>2</tes:fieldChar>
            <tes:fieldDouble>2</tes:fieldDouble>
            <tes:fieldFloat>2</tes:fieldFloat>
            <tes:fieldLong>2</tes:fieldLong>
            <tes:fieldLongLong>2</tes:fieldLongLong>
            <tes:fieldOctet>2</tes:fieldOctet>
            <tes:fieldShort>2</tes:fieldShort>
            <!--Optional:-->
            <tes:fieldString>gero et</tes:fieldString>
            <tes:fieldUnsignedLong>2</tes:fieldUnsignedLong>
            <tes:fieldUnsignedLongLong>2</tes:fieldUnsignedLongLong>
            <tes:fieldUnsignedShort>2</tes:fieldUnsignedShort>
            <tes:fieldWChar>2</tes:fieldWChar>
            <!--Optional:-->
            <tes:fieldWString>wgero et</tes:fieldWString>
         </test:es>
      </test:echoSequenceSeqEchoStruct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero et-changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:request></con:config></con:testStep><con:testStep type="request" name="echoSequenceSeqMySequence"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoSequenceSeqMySequence</con:operation><con:request name="echoSequenceSeqMySequence" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoSequenceSeqMySequence>
         <!--Zero or more repetitions:-->
         <test:es>
            <!--Zero or more repetitions:-->
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
         </test:es>


      </test:echoSequenceSeqMySequence>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>10</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoSequenceValueType"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoSequenceValueType</con:operation><con:request name="echoSequenceValueType" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoSequenceValueType>
         <!--Optional:-->
         <test:es>
            <!--Zero or more repetitions:-->
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
         </test:es>
      </test:echoSequenceValueType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>10</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoStruct"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoStruct</con:operation><con:request name="echoStruct" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoStruct>
         <!--Optional:-->
         <test:es>
            <tes:fieldBoolean>true</tes:fieldBoolean>
            <tes:fieldChar>2</tes:fieldChar>
            <tes:fieldDouble>2</tes:fieldDouble>
            <tes:fieldFloat>2</tes:fieldFloat>
            <tes:fieldLong>2</tes:fieldLong>
            <tes:fieldLongLong>2</tes:fieldLongLong>
            <tes:fieldOctet>2</tes:fieldOctet>
            <tes:fieldShort>2</tes:fieldShort>
            <!--Optional:-->
            <tes:fieldString>gero</tes:fieldString>
            <tes:fieldUnsignedLong>2</tes:fieldUnsignedLong>
            <tes:fieldUnsignedLongLong>2</tes:fieldUnsignedLongLong>
            <tes:fieldUnsignedShort>2</tes:fieldUnsignedShort>
            <tes:fieldWChar>2</tes:fieldWChar>
            <!--Optional:-->
            <tes:fieldWString>wgero</tes:fieldWString>
         </test:es>
      </test:echoStruct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero-changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:request></con:config></con:testStep><con:testStep type="request" name="echoStructOfStruct"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoStructOfStruct</con:operation><con:request name="echoStructOfStruct" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoStructOfStruct>
         <!--Optional:-->
         <test:v>
            <!--Optional:-->
            <tes:internalStruct>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>2</tes:fieldChar>
               <tes:fieldDouble>2</tes:fieldDouble>
               <tes:fieldFloat>2</tes:fieldFloat>
               <tes:fieldLong>2</tes:fieldLong>
               <tes:fieldLongLong>2</tes:fieldLongLong>
               <tes:fieldOctet>2</tes:fieldOctet>
               <tes:fieldShort>2</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>2</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>2</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>2</tes:fieldUnsignedShort>
               <tes:fieldWChar>2</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:internalStruct>

         </test:v>
      </test:echoStructOfStruct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero-changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:wsaConfig mustUnderstand="NONE" version="200508"/></con:request></con:config></con:testStep><con:testStep type="request" name="echoStructOfValuetype"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoStructOfValuetype</con:operation><con:request name="echoStructOfValuetype" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoStructOfValuetype>
         <!--Optional:-->
         <test:v>
            <!--Optional:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>1</tes:fieldChar>
               <tes:fieldDouble>1</tes:fieldDouble>
               <tes:fieldFloat>1</tes:fieldFloat>
               <tes:fieldLong>1</tes:fieldLong>
               <tes:fieldLongLong>1</tes:fieldLongLong>
               <tes:fieldOctet>1</tes:fieldOctet>
               <tes:fieldShort>1</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
               <tes:fieldWChar>1</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:data>
         </test:v>
      </test:echoStructOfValuetype>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero-changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoValueBoxedTypeComplex"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoValueBoxedTypeComplex</con:operation><con:request name="echoValueBoxedTypeComplex" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueBoxedTypeComplex>
         <!--Optional:-->
         <test:e>
            <!--Zero or more repetitions:-->
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>
            <tes:data>10</tes:data>

         </test:e>
      </test:echoValueBoxedTypeComplex>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>10</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoValueBoxedTypePrimitive"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoValueBoxedTypePrimitive</con:operation><con:request name="echoValueBoxedTypePrimitive" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueBoxedTypePrimitive>
         <!--Optional:-->
         <test:e>
            <tes:data>10</tes:data>
         </test:e>
      </test:echoValueBoxedTypePrimitive>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>10</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoValueType"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoValueType</con:operation><con:request name="echoValueType" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueType>
         <!--Optional:-->
         <test:e>
            <tes:privateLong>10</tes:privateLong>
            <tes:publicShort>10</tes:publicShort>
         </test:e>
      </test:echoValueType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>10</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>11</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoValueTypeOfStruct"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoValueTypeOfStruct</con:operation><con:request name="echoValueTypeOfStruct" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueTypeOfStruct>
         <!--Optional:-->
         <test:v>
            <!--Optional:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>1</tes:fieldChar>
               <tes:fieldDouble>1</tes:fieldDouble>
               <tes:fieldFloat>1</tes:fieldFloat>
               <tes:fieldLong>1</tes:fieldLong>
               <tes:fieldLongLong>1</tes:fieldLongLong>
               <tes:fieldOctet>1</tes:fieldOctet>
               <tes:fieldShort>1</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
               <tes:fieldWChar>1</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:data>
         </test:v>
      </test:echoValueTypeOfStruct>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero-changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoValueTypeOfValueType"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoValueTypeOfValueType</con:operation><con:request name="echoValueTypeOfValueType" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoValueTypeOfValueType>
         <!--Optional:-->
         <test:v>
            <!--Optional:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>1</tes:fieldChar>
               <tes:fieldDouble>1</tes:fieldDouble>
               <tes:fieldFloat>1</tes:fieldFloat>
               <tes:fieldLong>1</tes:fieldLong>
               <tes:fieldLongLong>1</tes:fieldLongLong>
               <tes:fieldOctet>1</tes:fieldOctet>
               <tes:fieldShort>1</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
               <tes:fieldWChar>1</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:data>
         </test:v>
      </test:echoValueTypeOfValueType>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero-changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoVTPrimi"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoVTPrimi</con:operation><con:request name="echoVTPrimi" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoVTPrimi>
         <!--Optional:-->
         <test:v>
            <tes:fieldBoolean>true</tes:fieldBoolean>
            <tes:fieldChar>1</tes:fieldChar>
            <tes:fieldDouble>1</tes:fieldDouble>
            <tes:fieldFloat>1</tes:fieldFloat>
            <tes:fieldLong>1</tes:fieldLong>
            <tes:fieldLongLong>1</tes:fieldLongLong>
            <tes:fieldOctet>1</tes:fieldOctet>
            <tes:fieldShort>1</tes:fieldShort>
            <!--Optional:-->
            <tes:fieldString>gero</tes:fieldString>
            <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
            <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
            <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
            <tes:fieldWChar>1</tes:fieldWChar>
            <!--Optional:-->
            <tes:fieldWString>wgero</tes:fieldWString>
         </test:v>
      </test:echoVTPrimi>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero-changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:testStep type="request" name="echoVTPrimiSeq"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>EchoComplexInOutOperationsCorbaBinding</con:interface><con:operation>echoVTPrimiSeq</con:operation><con:request name="echoVTPrimiSeq" wssPasswordType=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8192/Service/test-provider-complex-inout/</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:test="urn:jbi4corba/test-provider-complex-inout" xmlns:tes="http://testprovidercomplexinout.test.jbi4corba.imolinfo.it/">
   <soapenv:Header/>
   <soapenv:Body>
      <test:echoVTPrimiSeq>
         <!--Optional:-->
         <test:v>
            <!--Zero or more repetitions:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>1</tes:fieldChar>
               <tes:fieldDouble>1</tes:fieldDouble>
               <tes:fieldFloat>1</tes:fieldFloat>
               <tes:fieldLong>1</tes:fieldLong>
               <tes:fieldLongLong>1</tes:fieldLongLong>
               <tes:fieldOctet>1</tes:fieldOctet>
               <tes:fieldShort>1</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero</tes:fieldString>
               <tes:fieldUnsignedLong>1</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>1</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>1</tes:fieldUnsignedShort>
               <tes:fieldWChar>1</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero</tes:fieldWString>
            </tes:data>
            <!--Zero or more repetitions:-->
            <tes:data>
               <tes:fieldBoolean>true</tes:fieldBoolean>
               <tes:fieldChar>10</tes:fieldChar>
               <tes:fieldDouble>10</tes:fieldDouble>
               <tes:fieldFloat>10</tes:fieldFloat>
               <tes:fieldLong>10</tes:fieldLong>
               <tes:fieldLongLong>10</tes:fieldLongLong>
               <tes:fieldOctet>10</tes:fieldOctet>
               <tes:fieldShort>10</tes:fieldShort>
               <!--Optional:-->
               <tes:fieldString>gero000</tes:fieldString>
               <tes:fieldUnsignedLong>10</tes:fieldUnsignedLong>
               <tes:fieldUnsignedLongLong>10</tes:fieldUnsignedLongLong>
               <tes:fieldUnsignedShort>10</tes:fieldUnsignedShort>
               <tes:fieldWChar>10</tes:fieldWChar>
               <!--Optional:-->
               <tes:fieldWString>wgero000</tes:fieldWString>
            </tes:data>
         </test:v>
      </test:echoVTPrimiSeq>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="Schema Compliance"><con:configuration/></con:assertion><con:assertion type="SOAP Fault Assertion"/><con:assertion type="Simple Contains"><con:configuration><token>gero&lt;</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>gero-changed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/></con:soapui-project>