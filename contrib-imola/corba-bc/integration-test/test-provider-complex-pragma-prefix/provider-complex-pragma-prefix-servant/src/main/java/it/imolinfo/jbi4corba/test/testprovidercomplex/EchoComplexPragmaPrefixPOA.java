package it.imolinfo.jbi4corba.test.testprovidercomplex;


/**
* it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefixPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from EchoComplexPragmaPrefix.idl
* Wednesday, July 22, 2009 10:57:23 AM CEST
*/


//==================================================
public abstract class EchoComplexPragmaPrefixPOA extends org.omg.PortableServer.Servant
 implements it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplexPragmaPrefixOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("echo", new java.lang.Integer (0));
    _methods.put ("echoValueType", new java.lang.Integer (1));
    _methods.put ("echoValueBoxedTypePrimitive", new java.lang.Integer (2));
    _methods.put ("echoValueBoxedTypeComplex", new java.lang.Integer (3));
    _methods.put ("echoStruct", new java.lang.Integer (4));
    _methods.put ("echoSequence", new java.lang.Integer (5));
    _methods.put ("echoSequenceValueType", new java.lang.Integer (6));
    _methods.put ("echoSequenceSeqEchoStruct", new java.lang.Integer (7));
    _methods.put ("echoSequenceSeqMySequence", new java.lang.Integer (8));
    _methods.put ("echoExceptionThrown", new java.lang.Integer (9));
    _methods.put ("echoExceptionNotThrown", new java.lang.Integer (10));
    _methods.put ("echoStructOfStruct", new java.lang.Integer (11));
    _methods.put ("echoVTPrimi", new java.lang.Integer (12));
    _methods.put ("echoVTPrimiSeq", new java.lang.Integer (13));
    _methods.put ("echoValueTypeOfValueType", new java.lang.Integer (14));
    _methods.put ("echoValueTypeOfStruct", new java.lang.Integer (15));
    _methods.put ("echoStructOfValuetype", new java.lang.Integer (16));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echo
       {
         String msg = in.read_string ();
         String $result = null;
         $result = this.echo (msg);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoValueType
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.EchoVT e = it.imolinfo.jbi4corba.test.testprovidercomplex.EchoVTHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.EchoVT $result = null;
         $result = this.echoValueType (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.EchoVTHelper.write (out, $result);
         break;
       }

       case 2:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoValueBoxedTypePrimitive
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.MyLong e = it.imolinfo.jbi4corba.test.testprovidercomplex.MyLongHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.MyLong $result = null;
         $result = this.echoValueBoxedTypePrimitive (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.MyLongHelper.write (out, $result);
         break;
       }

       case 3:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoValueBoxedTypeComplex
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.MySequence e = it.imolinfo.jbi4corba.test.testprovidercomplex.MySequenceHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.MySequence $result = null;
         $result = this.echoValueBoxedTypeComplex (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.MySequenceHelper.write (out, $result);
         break;
       }

       case 4:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoStruct
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStruct es = it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStructHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStruct $result = null;
         $result = this.echoStruct (es);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStructHelper.write (out, $result);
         break;
       }

       case 5:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoSequence
       {
         int es[] = it.imolinfo.jbi4corba.test.testprovidercomplex.SeqLongHelper.read (in);
         int $result[] = null;
         $result = this.echoSequence (es);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.SeqLongHelper.write (out, $result);
         break;
       }

       case 6:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoSequenceValueType
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.MySequence es = it.imolinfo.jbi4corba.test.testprovidercomplex.MySequenceHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.MySequence $result = null;
         $result = this.echoSequenceValueType (es);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.MySequenceHelper.write (out, $result);
         break;
       }

       case 7:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoSequenceSeqEchoStruct
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStruct es[] = it.imolinfo.jbi4corba.test.testprovidercomplex.SeqEchoStructHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStruct $result[] = null;
         $result = this.echoSequenceSeqEchoStruct (es);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.SeqEchoStructHelper.write (out, $result);
         break;
       }

       case 8:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoSequenceSeqMySequence
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.MySequence es[] = it.imolinfo.jbi4corba.test.testprovidercomplex.SeqMySequenceHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.MySequence $result[] = null;
         $result = this.echoSequenceSeqMySequence (es);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.SeqMySequenceHelper.write (out, $result);
         break;
       }

       case 9:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoExceptionThrown
       {
         try {
           it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStruct es = it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStructHelper.read (in);
           it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStruct $result = null;
           $result = this.echoExceptionThrown (es);
           out = $rh.createReply();
           it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStructHelper.write (out, $result);
         } catch (it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplexException $ex) {
           out = $rh.createExceptionReply ();
           it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplexExceptionHelper.write (out, $ex);
         }
         break;
       }

       case 10:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoExceptionNotThrown
       {
         try {
           it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStruct es = it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStructHelper.read (in);
           it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStruct $result = null;
           $result = this.echoExceptionNotThrown (es);
           out = $rh.createReply();
           it.imolinfo.jbi4corba.test.testprovidercomplex.EchoStructHelper.write (out, $result);
         } catch (it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplexException $ex) {
           out = $rh.createExceptionReply ();
           it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplexExceptionHelper.write (out, $ex);
         }
         break;
       }


  // UNSUPPORTED : string echoAbstractValueType(in AFoo n);
       case 11:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoStructOfStruct
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.StructOfStruct v = it.imolinfo.jbi4corba.test.testprovidercomplex.StructOfStructHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.StructOfStruct $result = null;
         $result = this.echoStructOfStruct (v);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.StructOfStructHelper.write (out, $result);
         break;
       }

       case 12:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoVTPrimi
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.VTPrimi v = it.imolinfo.jbi4corba.test.testprovidercomplex.VTPrimiHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.VTPrimi $result = null;
         $result = this.echoVTPrimi (v);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.VTPrimiHelper.write (out, $result);
         break;
       }

       case 13:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoVTPrimiSeq
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.VTPrimiSeq v = it.imolinfo.jbi4corba.test.testprovidercomplex.VTPrimiSeqHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.VTPrimiSeq $result = null;
         $result = this.echoVTPrimiSeq (v);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.VTPrimiSeqHelper.write (out, $result);
         break;
       }

       case 14:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoValueTypeOfValueType
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.ValueTypeOfValueType v = it.imolinfo.jbi4corba.test.testprovidercomplex.ValueTypeOfValueTypeHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.ValueTypeOfValueType $result = null;
         $result = this.echoValueTypeOfValueType (v);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.ValueTypeOfValueTypeHelper.write (out, $result);
         break;
       }

       case 15:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoValueTypeOfStruct
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.ValueTypeOfStruct v = it.imolinfo.jbi4corba.test.testprovidercomplex.ValueTypeOfStructHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.ValueTypeOfStruct $result = null;
         $result = this.echoValueTypeOfStruct (v);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.ValueTypeOfStructHelper.write (out, $result);
         break;
       }

       case 16:  // it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix/echoStructOfValuetype
       {
         it.imolinfo.jbi4corba.test.testprovidercomplex.StructOfValuetype v = it.imolinfo.jbi4corba.test.testprovidercomplex.StructOfValuetypeHelper.read (in);
         it.imolinfo.jbi4corba.test.testprovidercomplex.StructOfValuetype $result = null;
         $result = this.echoStructOfValuetype (v);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testprovidercomplex.StructOfValuetypeHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:3yy4.321/it/imolinfo/jbi4corba/test/testprovidercomplex/EchoComplexPragmaPrefix:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public EchoComplexPragmaPrefix _this() 
  {
    return EchoComplexPragmaPrefixHelper.narrow(
    super._this_object());
  }

  public EchoComplexPragmaPrefix _this(org.omg.CORBA.ORB orb) 
  {
    return EchoComplexPragmaPrefixHelper.narrow(
    super._this_object(orb));
  }


} // class EchoComplexPragmaPrefixPOA
