<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="rtti_test" targetNamespace="http://it.imolinfo.jbi4corba.test.rtti.rtti_test" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:imolacorba="uri://schemas.imola.it/jbi/wsdl-extensions/corba/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://it.imolinfo.jbi4corba.test.rtti.rtti_test" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://it.imolinfo.jbi4corba.test.rtti.rtti_test" xmlns="http://it.imolinfo.jbi4corba.test.rtti.rtti_test" xmlns:ns1="http://rttitypes/" xmlns:ns2="http://jaxb.dev.java.net/array" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:import namespace="http://rttitypes/" schemaLocation="TypeDef_rttitypes.xsd"/>
    <xs:import namespace="http://jaxb.dev.java.net/array" schemaLocation="TypeDef_array.xsd"/>
    <xs:element name="any_echo1">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="xs:anyType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="any_echo1Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="xs:string"/>
                <xs:element name="msg" type="xs:anyType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="any_echo2">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="xs:anyType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="any_echo2Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="xs:anyType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="any_echo3">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="ns1:TempUnion1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="any_echo3Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:complexStruct2"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="any_echo4">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="ns1:complexStruct2"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="any_echo4Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="return" type="ns2:anyTypeArray"/>
                <xs:element name="msg" type="ns1:complexStruct2"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoEnum">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="e" type="ns1:echoComplexEnum"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoEnumResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:echoComplexEnum"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo1">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="ns1:ThirdUnion"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo1Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo2">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="ns1:SecondUnion"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo2Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:ThirdUnion"/>
                <xs:element name="msg" type="ns1:SecondUnion"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo3">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo3Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:complexStruct1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo4">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="ns1:complexStruct1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo4Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo5">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="ns1:complexStruct1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo5Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="xs:string"/>
                <xs:element name="msg" type="ns1:complexStruct1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo6">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo6Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:complexStruct1"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo7">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo7Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="return" type="ns1:complexStruct1Array"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo8">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo8Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:SecondUnion"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo9">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="msg" type="ns1:complexStruct1Array"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="enum_echo9Response">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="EchoUnionException" type="EchoUnionException"/>
    <xs:complexType name="EchoUnionException">
        <xs:sequence>
            <xs:element name="reason" nillable="true" type="ns1:ThirdUnion"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="EchoAnyException" type="EchoAnyException"/>
    <xs:complexType name="EchoAnyException">
        <xs:sequence>
            <xs:element name="reason" nillable="true" type="xs:anyType"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="enum_echo8Response">
    <wsdl:part name="parameters" element="tns:enum_echo8Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo2">
    <wsdl:part name="parameters" element="tns:enum_echo2">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo1">
    <wsdl:part name="parameters" element="tns:enum_echo1">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="any_echo2Response">
    <wsdl:part name="parameters" element="tns:any_echo2Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo6Response">
    <wsdl:part name="parameters" element="tns:enum_echo6Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo5Response">
    <wsdl:part name="parameters" element="tns:enum_echo5Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo3Response">
    <wsdl:part name="parameters" element="tns:enum_echo3Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo7">
    <wsdl:part name="parameters" element="tns:enum_echo7">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo8">
    <wsdl:part name="parameters" element="tns:enum_echo8">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoEnum">
    <wsdl:part name="parameters" element="tns:echoEnum">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo7Response">
    <wsdl:part name="parameters" element="tns:enum_echo7Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo9">
    <wsdl:part name="parameters" element="tns:enum_echo9">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EchoUnionException">
    <wsdl:part name="EchoUnionException" element="tns:EchoUnionException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EchoAnyException">
    <wsdl:part name="EchoAnyException" element="tns:EchoAnyException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo3">
    <wsdl:part name="parameters" element="tns:enum_echo3">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo4">
    <wsdl:part name="parameters" element="tns:enum_echo4">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo5">
    <wsdl:part name="parameters" element="tns:enum_echo5">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo6">
    <wsdl:part name="parameters" element="tns:enum_echo6">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo1Response">
    <wsdl:part name="parameters" element="tns:enum_echo1Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo4Response">
    <wsdl:part name="parameters" element="tns:enum_echo4Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="any_echo3Response">
    <wsdl:part name="parameters" element="tns:any_echo3Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="any_echo1Response">
    <wsdl:part name="parameters" element="tns:any_echo1Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo2Response">
    <wsdl:part name="parameters" element="tns:enum_echo2Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="enum_echo9Response">
    <wsdl:part name="parameters" element="tns:enum_echo9Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoEnumResponse">
    <wsdl:part name="parameters" element="tns:echoEnumResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="any_echo1">
    <wsdl:part name="parameters" element="tns:any_echo1">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="any_echo2">
    <wsdl:part name="parameters" element="tns:any_echo2">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="any_echo3">
    <wsdl:part name="parameters" element="tns:any_echo3">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="any_echo4">
    <wsdl:part name="parameters" element="tns:any_echo4">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="any_echo4Response">
    <wsdl:part name="parameters" element="tns:any_echo4Response">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="rtti_test">
    <wsdl:operation name="enum_echo7">
      <wsdl:input name="enum_echo7" message="tns:enum_echo7">
    </wsdl:input>
      <wsdl:output name="enum_echo7Response" message="tns:enum_echo7Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo2">
      <wsdl:input name="enum_echo2" message="tns:enum_echo2">
    </wsdl:input>
      <wsdl:output name="enum_echo2Response" message="tns:enum_echo2Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="any_echo4">
      <wsdl:input name="any_echo4" message="tns:any_echo4">
    </wsdl:input>
      <wsdl:output name="any_echo4Response" message="tns:any_echo4Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo8">
      <wsdl:input name="enum_echo8" message="tns:enum_echo8">
    </wsdl:input>
      <wsdl:output name="enum_echo8Response" message="tns:enum_echo8Response">
    </wsdl:output>
      <wsdl:fault name="EchoUnionException" message="tns:EchoUnionException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enum_echo9">
      <wsdl:input name="enum_echo9" message="tns:enum_echo9">
    </wsdl:input>
      <wsdl:output name="enum_echo9Response" message="tns:enum_echo9Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="any_echo1">
      <wsdl:input name="any_echo1" message="tns:any_echo1">
    </wsdl:input>
      <wsdl:output name="any_echo1Response" message="tns:any_echo1Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo6">
      <wsdl:input name="enum_echo6" message="tns:enum_echo6">
    </wsdl:input>
      <wsdl:output name="enum_echo6Response" message="tns:enum_echo6Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="any_echo2">
      <wsdl:input name="any_echo2" message="tns:any_echo2">
    </wsdl:input>
      <wsdl:output name="any_echo2Response" message="tns:any_echo2Response">
    </wsdl:output>
      <wsdl:fault name="EchoAnyException" message="tns:EchoAnyException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enum_echo3">
      <wsdl:input name="enum_echo3" message="tns:enum_echo3">
    </wsdl:input>
      <wsdl:output name="enum_echo3Response" message="tns:enum_echo3Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="any_echo3">
      <wsdl:input name="any_echo3" message="tns:any_echo3">
    </wsdl:input>
      <wsdl:output name="any_echo3Response" message="tns:any_echo3Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoEnum">
      <wsdl:input name="echoEnum" message="tns:echoEnum">
    </wsdl:input>
      <wsdl:output name="echoEnumResponse" message="tns:echoEnumResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo1">
      <wsdl:input name="enum_echo1" message="tns:enum_echo1">
    </wsdl:input>
      <wsdl:output name="enum_echo1Response" message="tns:enum_echo1Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo4">
      <wsdl:input name="enum_echo4" message="tns:enum_echo4">
    </wsdl:input>
      <wsdl:output name="enum_echo4Response" message="tns:enum_echo4Response">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo5">
      <wsdl:input name="enum_echo5" message="tns:enum_echo5">
    </wsdl:input>
      <wsdl:output name="enum_echo5Response" message="tns:enum_echo5Response">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="rtti_testCorbaBinding" type="tns:rtti_test">
<imolacorba:binding>
<imolacorba:idl root="true" filename="RttiPragmaPrefix.idl" relativepath=".">
//IDL
#include &quot;RttiPragmaPrefixIncluded.idl&quot;
#pragma prefix &quot;3yy4.321&quot;
module it{
module imolinfo{
module jbi4corba{
module test{
module rtti{

	interface rtti_test {
		//union
		string enum_echo1(in rttitypes::ThirdUnion msg);
		rttitypes::ThirdUnion enum_echo2(inout rttitypes::SecondUnion msg);
		rttitypes::ComplexStruct1 enum_echo3(in string msg);
		string enum_echo4(in rttitypes::ComplexStruct1 msg);
		string enum_echo5(inout rttitypes::ComplexStruct1 msg);
		rttitypes::ComplexStruct1 enum_echo6(in string msg);
		rttitypes::ArrayComplexStruct1 enum_echo7(in string msg);
		rttitypes::SecondUnion enum_echo8(in string msg)
		raises(rttitypes::EchoUnionException);
		string enum_echo9(in rttitypes::ArrayComplexStruct1 msg);
		//enum
		rttitypes::EchoComplexEnum echoEnum(in rttitypes::EchoComplexEnum e);
		//any
		string any_echo1(inout any msg);
		any any_echo2(in any msg) raises(rttitypes::EchoAnyException);
		rttitypes::ComplexStruct2 any_echo3(in rttitypes::TempUnion1 msg);
		rttitypes::ArrayOfAny any_echo4(inout rttitypes::ComplexStruct2 msg);
		};

};};};};}; 
</imolacorba:idl>
<imolacorba:idl root="false" filename="RttiPragmaPrefixIncluded.idl" relativepath="">

//IDL
#pragma prefix &quot;3hh4.123&quot;
module rttitypes{
	//union
	union TempUnion switch (short){
		case 1: long numeric;
		case 2: string alfanumeric;
		default: any two_format;
	};
	
	union FirstUnion switch (short){
		case 1: long numeric;
		case 2: string alfanumeric;
		case 3: TempUnion uni1;
		case 4: sequence &lt;TempUnion&gt; uni2;
		default: any two_format;
	};

	union SecondUnion switch (short){
		case 1: long numeric;
		case 2: string alfanumeric;
		default: any two_format;
	};

	union ThirdUnion switch (short) { 
		case 1: long primo; 
		case 2: short secondo; 
		case 3: sequence &lt;FirstUnion&gt; third;
		default: boolean altro; 
	}; 
	
	union ForthUnion switch (short) { 
		case 1: long primo; 
		case 2: short secondo; 
		case 3: FirstUnion third;
		default: boolean altro; 
	}; 
	
	struct ComplexStruct1 {
		boolean          fieldBoolean;
		char               fieldChar;
	        SecondUnion    fieldWChar;
	};

	// exception
        					exception EchoUnionException {
            					ThirdUnion reason;
            				};     
	
	typedef ComplexStruct1 ArrayComplexStruct1[2][3];

	//enum
	enum EchoComplexEnum {E1, E2, E3};
	
	//any
	union TempUnion1 switch (short){
		case 1: long numeric;
		case 2: string alfanumeric;
		default: any two_format;
	};
	
	struct ComplexStruct2 {
		boolean          fieldBoolean;
		char               fieldChar;
	        sequence&lt;any&gt;    fieldAny;
	};
	
	typedef any ArrayOfAny[2][3];
	// exception
	exception EchoAnyException {
	any reason;
	};

};
	

</imolacorba:idl>
</imolacorba:binding>
    <wsdl:operation name="enum_echo7">
      <wsdl:input name="enum_echo7">
      </wsdl:input>
      <wsdl:output name="enum_echo7Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="any_echo4">
      <wsdl:input name="any_echo4">
      </wsdl:input>
      <wsdl:output name="any_echo4Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo2">
      <wsdl:input name="enum_echo2">
      </wsdl:input>
      <wsdl:output name="enum_echo2Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo8">
      <wsdl:input name="enum_echo8">
      </wsdl:input>
      <wsdl:output name="enum_echo8Response">
      </wsdl:output>
      <wsdl:fault name="EchoUnionException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enum_echo9">
      <wsdl:input name="enum_echo9">
      </wsdl:input>
      <wsdl:output name="enum_echo9Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="any_echo1">
      <wsdl:input name="any_echo1">
      </wsdl:input>
      <wsdl:output name="any_echo1Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="any_echo2">
      <wsdl:input name="any_echo2">
      </wsdl:input>
      <wsdl:output name="any_echo2Response">
      </wsdl:output>
      <wsdl:fault name="EchoAnyException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="enum_echo6">
      <wsdl:input name="enum_echo6">
      </wsdl:input>
      <wsdl:output name="enum_echo6Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="any_echo3">
      <wsdl:input name="any_echo3">
      </wsdl:input>
      <wsdl:output name="any_echo3Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo3">
      <wsdl:input name="enum_echo3">
      </wsdl:input>
      <wsdl:output name="enum_echo3Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoEnum">
      <wsdl:input name="echoEnum">
      </wsdl:input>
      <wsdl:output name="echoEnumResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo1">
      <wsdl:input name="enum_echo1">
      </wsdl:input>
      <wsdl:output name="enum_echo1Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo4">
      <wsdl:input name="enum_echo4">
      </wsdl:input>
      <wsdl:output name="enum_echo4Response">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="enum_echo5">
      <wsdl:input name="enum_echo5">
      </wsdl:input>
      <wsdl:output name="enum_echo5Response">
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="rtti_test">
    <wsdl:port name="rtti_testPort" binding="tns:rtti_testCorbaBinding">
<imolacorba:address name="rtti_test" localizationType="NameService">
<imolacorba:orb>
<imolacorba:property name="org.omg.CORBA.ORBInitialPort" value="1050"/>
<imolacorba:property name="org.omg.CORBA.ORBClass" value="com.sun.corba.ee.impl.orb.ORBImpl"/>
<imolacorba:property name="org.omg.CORBA.ORBInitialHost" value="localhost"/>
</imolacorba:orb>
</imolacorba:address>
    </wsdl:port>
  </wsdl:service>
<plnk:partnerLinkType name="rtti_test">
<plnk:role name="rtti_testPortTypeRole" portType="tns:rtti_test"/>
</plnk:partnerLinkType>
</wsdl:definitions>
