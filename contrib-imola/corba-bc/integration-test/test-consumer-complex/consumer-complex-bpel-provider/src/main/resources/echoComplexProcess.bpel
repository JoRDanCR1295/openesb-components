<?xml version="1.0" encoding="UTF-8"?>
<process
    name="echoComplexProcess"
    targetNamespace="http://enterprise.netbeans.org/bpel/echoComplexProcess"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:wsdlNS="http://enterprise.netbeans.org/bpel/scProcess" xmlns:ns1="urn:jbi4corba/test-consumer-complex">
    <import namespace="urn:jbi4corba/test-consumer-complex" location="EchoComplex.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <bpws:partnerLink name="echoComplexProcess" partnerLinkType="ns1:echoComplexProcess" myRole="echoComplexProcess"/>
    </partnerLinks>
    <variables>
        <bpws:variable name="EchoSimpleIntIn" messageType="ns1:echoSimpleIntRequest"/>
        <bpws:variable name="EchoSimpleIntOut" messageType="ns1:echoSimpleIntResponse"/>
        <bpws:variable name="EchoSimpleLongOut" messageType="ns1:echoSimpleLongResponse"/>
        <bpws:variable name="EchoSimpleLongIn" messageType="ns1:echoSimpleLongRequest"/>
        <bpws:variable name="EchoSimpleAnyURIIn" messageType="ns1:echoSimpleAnyURIRequest"/>
        <bpws:variable name="EchoSimpleAnyURIOut" messageType="ns1:echoSimpleAnyURIResponse"/>
        <bpws:variable name="EchoSimpleDoubleIn" messageType="ns1:echoSimpleDoubleRequest"/>
        <bpws:variable name="EchoSimpleDoubleOut" messageType="ns1:echoSimpleDoubleResponse"/>
        <bpws:variable name="EchoSimpleFloatIn" messageType="ns1:echoSimpleFloatRequest"/>
        <bpws:variable name="EchoSimpleFloatOut" messageType="ns1:echoSimpleFloatResponse"/>
        <bpws:variable name="EchoSimpleBooleanOut" messageType="ns1:echoSimpleBooleanResponse"/>
        <bpws:variable name="EchoSimpleBooleanIn" messageType="ns1:echoSimpleBooleanRequest"/>
        <bpws:variable name="EchoSimpleStringIn" messageType="ns1:echoSimpleStringRequest"/>
        <bpws:variable name="EchoSimpleStringOut" messageType="ns1:echoSimpleStringResponse"/>
        <bpws:variable name="EchoSimpleUByteOut" messageType="ns1:echoSimpleUByteResponse"/>
        <bpws:variable name="EchoSimpleUByteIn" messageType="ns1:echoSimpleUByteRequest"/>
        <bpws:variable name="EchoSimpleUShortOut" messageType="ns1:echoSimpleUShortResponse"/>
        <bpws:variable name="EchoSimpleUShortIn" messageType="ns1:echoSimpleUShortRequest"/>
        <bpws:variable name="EchoSimpleUIntOut" messageType="ns1:echoSimpleUIntResponse"/>
        <bpws:variable name="EchoSimpleUIntIn" messageType="ns1:echoSimpleUIntRequest"/>
        <bpws:variable name="EchoSimpleENTITYOut" messageType="ns1:echoSimpleENTITYResponse"/>
        <bpws:variable name="EchoSimpleENTITYIn" messageType="ns1:echoSimpleENTITYRequest"/>
        <bpws:variable name="EchoSimpleNCNameOut" messageType="ns1:echoSimpleNCNameResponse"/>
        <bpws:variable name="EchoSimpleNCNameIn" messageType="ns1:echoSimpleNCNameRequest"/>
        <bpws:variable name="EchoSimpleNMTOKENIn" messageType="ns1:echoSimpleNMTOKENRequest"/>
        <bpws:variable name="EchoSimpleNMTOKENOut" messageType="ns1:echoSimpleNMTOKENResponse"/>
        <bpws:variable name="EchoSimpleLanguageOut" messageType="ns1:echoSimpleLanguageResponse"/>
        <bpws:variable name="EchoSimpleLanguageIn" messageType="ns1:echoSimpleLanguageRequest"/>
        <bpws:variable name="EchoSimpleTokenOut" messageType="ns1:echoSimpleTokenResponse"/>
        <bpws:variable name="EchoSimpleTokenIn" messageType="ns1:echoSimpleTokenRequest"/>
        <bpws:variable name="EchoSimpleNormalizedStringOut" messageType="ns1:echoSimpleNormalizedStringResponse"/>
        <bpws:variable name="EchoSimpleNormalizedStringIn" messageType="ns1:echoSimpleNormalizedStringRequest"/>
        <bpws:variable name="EchoSCOut" messageType="ns1:MResSC"/>
        <bpws:variable name="EchoSCIn" messageType="ns1:MReqSC"/>
        <bpws:variable name="EchoCCOut" messageType="ns1:MResCC"/>
        <bpws:variable name="EchoCCIn" messageType="ns1:MReqCC"/>
        <bpws:variable name="EchoGroupIn" messageType="ns1:MReqGroup"/>
        <bpws:variable name="EchoGroupOut" messageType="ns1:MResGroup"/>
        <bpws:variable name="EchoAllOut" messageType="ns1:MResAll"/>
        <bpws:variable name="EchoAllIn" messageType="ns1:MReqAll"/>
        <bpws:variable name="EchoSeqOut" messageType="ns1:MResSeq"/>
        <bpws:variable name="EchoSeqIn" messageType="ns1:MReqSeq"/>
        <bpws:variable name="EchoSimpleIDOut" messageType="ns1:echoSimpleIDResponse"/>
        <bpws:variable name="EchoSimpleIDIn" messageType="ns1:echoSimpleIDRequest"/>
        <bpws:variable name="EchoSimpleNameOut" messageType="ns1:echoSimpleNameResponse"/>
        <bpws:variable name="EchoSimpleNameIn" messageType="ns1:echoSimpleNameRequest"/>
    </variables>
    <sequence>
        <bpws:pick name="Pick1" createInstance="yes">
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleName" portType="ns1:EchoComplexPortType" variable="EchoSimpleNameIn">
                <bpws:sequence name="Sequence1">
                    <bpws:assign name="Assign1">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleNameIn" part="echoSimpleNameRequest"/>
                            <bpws:to variable="EchoSimpleNameOut" part="echoSimpleNameResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply1" partnerLink="echoComplexProcess" operation="echoSimpleName" portType="ns1:EchoComplexPortType" variable="EchoSimpleNameOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleID" portType="ns1:EchoComplexPortType" variable="EchoSimpleIDIn">
                <bpws:sequence name="Sequence2">
                    <bpws:assign name="Assign2">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleIDIn" part="echoSimpleIDRequest"/>
                            <bpws:to variable="EchoSimpleIDOut" part="echoSimpleIDResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply2" partnerLink="echoComplexProcess" operation="echoSimpleID" portType="ns1:EchoComplexPortType" variable="EchoSimpleIDOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSeq" portType="ns1:EchoComplexPortType" variable="EchoSeqIn">
                <bpws:sequence name="Sequence3">
                    <bpws:assign name="Assign3">
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataString</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataBoolean</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataBoolean</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataFloat</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataFloat</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataDouble</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataDouble</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataLong</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataLong</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataAnyURI</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataAnyURI</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataInt</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataNormalizedString</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataNormalizedString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataLanguage</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataLanguage</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataName</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataNMTOKEN</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataNMTOKEN</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataNCName</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataNCName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataID</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataID</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataENTITY</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataENTITY</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataUInt</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataUInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataUShort</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataUShort</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSeqIn.MReqSeq/ns1:dataUByte</bpws:from>
                            <bpws:to>$EchoSeqOut.MResSeq/ns1:dataUByte</bpws:to>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply3" partnerLink="echoComplexProcess" operation="echoSeq" portType="ns1:EchoComplexPortType" variable="EchoSeqOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoAll" portType="ns1:EchoComplexPortType" variable="EchoAllIn">
                <bpws:sequence name="Sequence4">
                    <bpws:assign name="Assign4">
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataString</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataBoolean</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataBoolean</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataFloat</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataFloat</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataDouble</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataDouble</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataAnyURI</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataAnyURI</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataLong</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataLong</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataInt</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataNormalizedString</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataNormalizedString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataLanguage</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataLanguage</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataName</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataNMTOKEN</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataNMTOKEN</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataNCName</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataNCName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataID</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataID</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataENTITY</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataENTITY</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataUInt</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataUInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataUShort</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataUShort</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoAllIn.MReqAll/ns1:dataUByte</bpws:from>
                            <bpws:to>$EchoAllOut.MResAll/ns1:dataUByte</bpws:to>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply4" partnerLink="echoComplexProcess" operation="echoAll" portType="ns1:EchoComplexPortType" variable="EchoAllOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoGroup" portType="ns1:EchoComplexPortType" variable="EchoGroupIn">
                <bpws:sequence name="Sequence5">
                    <bpws:assign name="Assign5">
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataString</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataBoolean</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataBoolean</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataFloat</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataFloat</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataDouble</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataDouble</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataAnyURI</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataAnyURI</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataLong</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataLong</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataInt</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataNormalizedString</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataNormalizedString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataLanguage</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataLanguage</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataName</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataNMTOKEN</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataNMTOKEN</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataNCName</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataNCName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataID</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataID</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataENTITY</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataENTITY</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataUInt</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataUInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataUShort</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataUShort</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoGroupIn.MReqGroup/ns1:dataUByte</bpws:from>
                            <bpws:to>$EchoGroupOut.MResGroup/ns1:dataUByte</bpws:to>
                        </bpws:copy>
                    </bpws:assign>

                    <bpws:reply name="Reply5" partnerLink="echoComplexProcess" operation="echoGroup" portType="ns1:EchoComplexPortType" variable="EchoGroupOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoCC" portType="ns1:EchoComplexPortType" variable="EchoCCIn">
                <bpws:sequence name="Sequence6">
                    <bpws:assign name="Assign6">
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataString</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataBoolean</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataBoolean</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataFloat</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataFloat</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataDouble</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataDouble</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataAnyURI</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataAnyURI</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataLong</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataLong</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataInt</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataNormalizedString</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataNormalizedString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataLanguage</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataLanguage</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataName</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataNMTOKEN</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataNMTOKEN</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataNCName</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataNCName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataID</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataID</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataENTITY</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataENTITY</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataUInt</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataUInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataUShort</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataUShort</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoCCIn.MReqCC/ns1:dataComplex/ns1:dataUByte</bpws:from>
                            <bpws:to>$EchoCCOut.MResCC/ns1:dataComplex/ns1:dataUByte</bpws:to>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply6" partnerLink="echoComplexProcess" operation="echoCC" portType="ns1:EchoComplexPortType" variable="EchoCCOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSC" portType="ns1:EchoComplexPortType" variable="EchoSCIn">
                <bpws:sequence name="Sequence7">
                    <bpws:assign name="Assign7">
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataString</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataBoolean</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataBoolean</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataFloat</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataFloat</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataDouble</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataDouble</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataAnyURI</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataAnyURI</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataLong</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataLong</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataInt</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataToken</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataToken</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataNormalizedString</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataNormalizedString</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataLanguage</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataLanguage</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataName</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataNMTOKEN</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataNMTOKEN</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataNCName</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataNCName</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataID</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataID</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataENTITY</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataENTITY</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataUInt</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataUInt</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataUShort</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataUShort</bpws:to>
                        </bpws:copy>
                        <bpws:copy>
                            <bpws:from>$EchoSCIn.MReqSC/ns1:dataUByte</bpws:from>
                            <bpws:to>$EchoSCOut.MResSC/ns1:dataUByte</bpws:to>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply7" partnerLink="echoComplexProcess" operation="echoSC" portType="ns1:EchoComplexPortType" variable="EchoSCOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleNormalizedString" portType="ns1:EchoComplexPortType" variable="EchoSimpleNormalizedStringIn">
                <bpws:sequence name="Sequence8">
                    <bpws:assign name="Assign8">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleNormalizedStringIn" part="echoSimpleNormalizedStringRequest"/>
                            <bpws:to variable="EchoSimpleNormalizedStringOut" part="echoSimpleNormalizedStringResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply8" partnerLink="echoComplexProcess" operation="echoSimpleNormalizedString" portType="ns1:EchoComplexPortType" variable="EchoSimpleNormalizedStringOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleToken" portType="ns1:EchoComplexPortType" variable="EchoSimpleTokenIn">
                <bpws:sequence name="Sequence9">
                    <bpws:assign name="Assign9">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleTokenIn" part="echoSimpleTokenRequest"/>
                            <bpws:to variable="EchoSimpleTokenOut" part="echoSimpleTokenResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply9" partnerLink="echoComplexProcess" operation="echoSimpleToken" portType="ns1:EchoComplexPortType" variable="EchoSimpleTokenOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleLanguage" portType="ns1:EchoComplexPortType" variable="EchoSimpleLanguageIn">
                <bpws:sequence name="Sequence10">
                    <bpws:assign name="Assign10">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleLanguageIn" part="echoSimpleLanguageRequest"/>
                            <bpws:to variable="EchoSimpleLanguageOut" part="echoSimpleLanguageResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply10" partnerLink="echoComplexProcess" operation="echoSimpleLanguage" portType="ns1:EchoComplexPortType" variable="EchoSimpleLanguageOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleNMTOKEN" portType="ns1:EchoComplexPortType" variable="EchoSimpleNMTOKENIn">
                <bpws:sequence name="Sequence11">
                    <bpws:assign name="Assign11">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleNMTOKENIn" part="echoSimpleNMTOKENRequest"/>
                            <bpws:to variable="EchoSimpleNMTOKENOut" part="echoSimpleNMTOKENResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply11" partnerLink="echoComplexProcess" operation="echoSimpleNMTOKEN" portType="ns1:EchoComplexPortType" variable="EchoSimpleNMTOKENOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleNCName" portType="ns1:EchoComplexPortType" variable="EchoSimpleNCNameIn">
                <bpws:sequence name="Sequence12">
                    <bpws:assign name="Assign12">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleNCNameIn" part="echoSimpleNCNameRequest"/>
                            <bpws:to variable="EchoSimpleNCNameOut" part="echoSimpleNCNameResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply12" partnerLink="echoComplexProcess" operation="echoSimpleNCName" portType="ns1:EchoComplexPortType" variable="EchoSimpleNCNameOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleENTITY" portType="ns1:EchoComplexPortType" variable="EchoSimpleENTITYIn">
                <bpws:sequence name="Sequence13">
                    <bpws:assign name="Assign13">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleENTITYIn" part="echoSimpleENTITYRequest"/>
                            <bpws:to variable="EchoSimpleENTITYOut" part="echoSimpleENTITYResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply13" partnerLink="echoComplexProcess" operation="echoSimpleENTITY" portType="ns1:EchoComplexPortType" variable="EchoSimpleENTITYOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleUInt" portType="ns1:EchoComplexPortType" variable="EchoSimpleUIntIn">
                <bpws:sequence name="Sequence14">
                    <bpws:assign name="Assign14">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleUIntIn" part="echoSimpleUIntRequest"/>
                            <bpws:to variable="EchoSimpleUIntOut" part="echoSimpleUIntResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply14" partnerLink="echoComplexProcess" operation="echoSimpleUInt" portType="ns1:EchoComplexPortType" variable="EchoSimpleUIntOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleUShort" portType="ns1:EchoComplexPortType" variable="EchoSimpleUShortIn">
                <bpws:sequence name="Sequence15">
                    <bpws:assign name="Assign15">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleUShortIn" part="echoSimpleStringRequest"/>
                            <bpws:to variable="EchoSimpleUShortOut" part="echoSimpleUShortResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply15" partnerLink="echoComplexProcess" operation="echoSimpleUShort" portType="ns1:EchoComplexPortType" variable="EchoSimpleUShortOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleUByte" portType="ns1:EchoComplexPortType" variable="EchoSimpleUByteIn">
                <bpws:sequence name="Sequence16">
                    <bpws:assign name="Assign16">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleUByteIn" part="echoSimpleUByteRequest"/>
                            <bpws:to variable="EchoSimpleUByteOut" part="echoSimpleUByteResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply16" partnerLink="echoComplexProcess" operation="echoSimpleUByte" portType="ns1:EchoComplexPortType" variable="EchoSimpleUByteOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleString" portType="ns1:EchoComplexPortType" variable="EchoSimpleStringIn">
                <bpws:sequence name="Sequence17">
                    <bpws:assign name="Assign17">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleStringIn" part="echoSimpleStringRequest"/>
                            <bpws:to variable="EchoSimpleStringOut" part="echoSimpleStringResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply17" partnerLink="echoComplexProcess" operation="echoSimpleString" portType="ns1:EchoComplexPortType" variable="EchoSimpleStringOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleBoolean" portType="ns1:EchoComplexPortType" variable="EchoSimpleBooleanIn">
                <bpws:sequence name="Sequence18">
                    <bpws:assign name="Assign18">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleBooleanIn" part="echoSimpleBooleanRequest"/>
                            <bpws:to variable="EchoSimpleBooleanOut" part="echoSimpleBooleanResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply18" partnerLink="echoComplexProcess" operation="echoSimpleBoolean" portType="ns1:EchoComplexPortType" variable="EchoSimpleBooleanOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleFloat" portType="ns1:EchoComplexPortType" variable="EchoSimpleFloatIn">
                <bpws:sequence name="Sequence19">
                    <bpws:assign name="Assign19">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleFloatIn" part="echoSimpleFloatRequest"/>
                            <bpws:to variable="EchoSimpleFloatOut" part="echoSimpleFloatResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply19" partnerLink="echoComplexProcess" operation="echoSimpleFloat" portType="ns1:EchoComplexPortType" variable="EchoSimpleFloatOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleDouble" portType="ns1:EchoComplexPortType" variable="EchoSimpleDoubleIn">
                <bpws:sequence name="Sequence20">
                    <bpws:assign name="Assign20">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleDoubleIn" part="echoSimpleDoubleRequest"/>
                            <bpws:to variable="EchoSimpleDoubleOut" part="echoSimpleDoubleResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply20" partnerLink="echoComplexProcess" operation="echoSimpleDouble" portType="ns1:EchoComplexPortType" variable="EchoSimpleDoubleOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleAnyURI" portType="ns1:EchoComplexPortType" variable="EchoSimpleAnyURIIn">
                <bpws:sequence name="Sequence21">
                    <bpws:assign name="Assign21">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleAnyURIIn" part="echoSimpleAnyURIRequest"/>
                            <bpws:to variable="EchoSimpleAnyURIOut" part="echoSimpleAnyURIResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply21" partnerLink="echoComplexProcess" operation="echoSimpleAnyURI" portType="ns1:EchoComplexPortType" variable="EchoSimpleAnyURIOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleLong" portType="ns1:EchoComplexPortType" variable="EchoSimpleLongIn">
                <bpws:sequence name="Sequence22">
                    <bpws:assign name="Assign22">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleLongIn" part="echoSimpleLongRequest"/>
                            <bpws:to variable="EchoSimpleLongOut" part="echoSimpleLongResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply22" partnerLink="echoComplexProcess" operation="echoSimpleLong" portType="ns1:EchoComplexPortType" variable="EchoSimpleLongOut"/>
                </bpws:sequence>
            </bpws:onMessage>
            <bpws:onMessage partnerLink="echoComplexProcess" operation="echoSimpleInt" portType="ns1:EchoComplexPortType" variable="EchoSimpleIntIn">
                <bpws:sequence name="Sequence23">
                    <bpws:assign name="Assign23">
                        <bpws:copy>
                            <bpws:from variable="EchoSimpleIntIn" part="echoSimpleIntRequest"/>
                            <bpws:to variable="EchoSimpleIntOut" part="echoSimpleIntResponse"/>
                        </bpws:copy>
                    </bpws:assign>
                    <bpws:reply name="Reply23" partnerLink="echoComplexProcess" operation="echoSimpleInt" portType="ns1:EchoComplexPortType" variable="EchoSimpleIntOut"/>
                </bpws:sequence>
            </bpws:onMessage>
        </bpws:pick>
    </sequence>
</process>


