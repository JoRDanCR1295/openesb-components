package it.imolinfo.jbi4corba.test.testproviderarray;


/**
* it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterfacePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from EchoArray.idl
* venerdì 20 febbraio 2009 12.20.53 CET
*/

public abstract class ArrayInterfacePOA extends org.omg.PortableServer.Servant
 implements it.imolinfo.jbi4corba.test.testproviderarray.ArrayInterfaceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("echoArrayBoolean", new java.lang.Integer (0));
    _methods.put ("echoArrayChar", new java.lang.Integer (1));
    _methods.put ("echoArrayWChar", new java.lang.Integer (2));
    _methods.put ("echoArrayOctet", new java.lang.Integer (3));
    _methods.put ("echoArrayString", new java.lang.Integer (4));
    _methods.put ("echoArrayWString", new java.lang.Integer (5));
    _methods.put ("echoArrayShort", new java.lang.Integer (6));
    _methods.put ("echoArrayUnsignedShort", new java.lang.Integer (7));
    _methods.put ("echoArrayLong", new java.lang.Integer (8));
    _methods.put ("echoArrayUnsignedLong", new java.lang.Integer (9));
    _methods.put ("echoArrayLongLong", new java.lang.Integer (10));
    _methods.put ("echoArrayUnsignedLongLong", new java.lang.Integer (11));
    _methods.put ("echoArrayFloat", new java.lang.Integer (12));
    _methods.put ("echoArrayDouble", new java.lang.Integer (13));
    _methods.put ("echoArrayComplexStruct", new java.lang.Integer (14));
    _methods.put ("echoMatrixString", new java.lang.Integer (15));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayBoolean
       {
         boolean e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayBooleanHelper.read (in);
         boolean $result[] = null;
         $result = this.echoArrayBoolean (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayBooleanHelper.write (out, $result);
         break;
       }

       case 1:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayChar
       {
         char e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayCharHelper.read (in);
         char $result[] = null;
         $result = this.echoArrayChar (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayCharHelper.write (out, $result);
         break;
       }

       case 2:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayWChar
       {
         char e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayWCharHelper.read (in);
         char $result[] = null;
         $result = this.echoArrayWChar (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayWCharHelper.write (out, $result);
         break;
       }

       case 3:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayOctet
       {
         byte e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayOctetHelper.read (in);
         byte $result[] = null;
         $result = this.echoArrayOctet (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayOctetHelper.write (out, $result);
         break;
       }

       case 4:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayString
       {
         String e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayStringHelper.read (in);
         String $result[] = null;
         $result = this.echoArrayString (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayStringHelper.write (out, $result);
         break;
       }

       case 5:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayWString
       {
         String e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayWStringHelper.read (in);
         String $result[] = null;
         $result = this.echoArrayWString (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayWStringHelper.write (out, $result);
         break;
       }

       case 6:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayShort
       {
         short e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayShortHelper.read (in);
         short $result[] = null;
         $result = this.echoArrayShort (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayShortHelper.write (out, $result);
         break;
       }

       case 7:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayUnsignedShort
       {
         short e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayUnsignedShortHelper.read (in);
         short $result[] = null;
         $result = this.echoArrayUnsignedShort (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayUnsignedShortHelper.write (out, $result);
         break;
       }

       case 8:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayLong
       {
         int e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayLongHelper.read (in);
         int $result[] = null;
         $result = this.echoArrayLong (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayLongHelper.write (out, $result);
         break;
       }

       case 9:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayUnsignedLong
       {
         int e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayUnsignedLongHelper.read (in);
         int $result[] = null;
         $result = this.echoArrayUnsignedLong (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayUnsignedLongHelper.write (out, $result);
         break;
       }

       case 10:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayLongLong
       {
         long e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayLongLongHelper.read (in);
         long $result[] = null;
         $result = this.echoArrayLongLong (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayLongLongHelper.write (out, $result);
         break;
       }

       case 11:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayUnsignedLongLong
       {
         long e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayUnsignedLongLongHelper.read (in);
         long $result[] = null;
         $result = this.echoArrayUnsignedLongLong (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayUnsignedLongLongHelper.write (out, $result);
         break;
       }

       case 12:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayFloat
       {
         float e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayFloatHelper.read (in);
         float $result[] = null;
         $result = this.echoArrayFloat (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayFloatHelper.write (out, $result);
         break;
       }

       case 13:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayDouble
       {
         double e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayDoubleHelper.read (in);
         double $result[] = null;
         $result = this.echoArrayDouble (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayDoubleHelper.write (out, $result);
         break;
       }

       case 14:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoArrayComplexStruct
       {
         it.imolinfo.jbi4corba.test.testproviderarray.ComplexStruct e[] = it.imolinfo.jbi4corba.test.testproviderarray.ArrayComplexStructHelper.read (in);
         it.imolinfo.jbi4corba.test.testproviderarray.ComplexStruct $result[] = null;
         $result = this.echoArrayComplexStruct (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.ArrayComplexStructHelper.write (out, $result);
         break;
       }

       case 15:  // it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface/echoMatrixString
       {
         String e[][] = it.imolinfo.jbi4corba.test.testproviderarray.MatrixStringHelper.read (in);
         String $result[][] = null;
         $result = this.echoMatrixString (e);
         out = $rh.createReply();
         it.imolinfo.jbi4corba.test.testproviderarray.MatrixStringHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:it/imolinfo/jbi4corba/test/testproviderarray/ArrayInterface:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public ArrayInterface _this() 
  {
    return ArrayInterfaceHelper.narrow(
    super._this_object());
  }

  public ArrayInterface _this(org.omg.CORBA.ORB orb) 
  {
    return ArrayInterfaceHelper.narrow(
    super._this_object(orb));
  }


} // class ArrayInterfacePOA
