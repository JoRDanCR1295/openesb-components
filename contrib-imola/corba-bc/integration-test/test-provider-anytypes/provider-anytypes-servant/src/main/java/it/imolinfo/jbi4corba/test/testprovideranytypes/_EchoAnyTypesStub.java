package it.imolinfo.jbi4corba.test.testprovideranytypes;


/**
* it/imolinfo/jbi4corba/test/testprovideranytypes/_EchoAnyTypesStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from F:/imolaCSV/nokia/open-jbi-components/contrib-imola/corba-bc/integration-test/test-provider-anytypes/provider-anytypes-jbi4corba-provider/src/main/resources/AnyTypes.idl
* lunedì 2 febbraio 2009 12.26.09 EET
*/

public class _EchoAnyTypesStub extends org.omg.CORBA.portable.ObjectImpl implements it.imolinfo.jbi4corba.test.testprovideranytypes.EchoAnyTypes
{

  public String echo1 (org.omg.CORBA.AnyHolder msg)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echo1", true);
                $out.write_any (msg.value);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                msg.value = $in.read_any ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echo1 (msg        );
            } finally {
                _releaseReply ($in);
            }
  } // echo1

  public org.omg.CORBA.Any echo2 (org.omg.CORBA.Any msg) throws it.imolinfo.jbi4corba.test.testprovideranytypes.EchoAnyException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echo2", true);
                $out.write_any (msg);
                $in = _invoke ($out);
                org.omg.CORBA.Any $result = $in.read_any ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:it/imolinfo/jbi4corba/test/testprovideranytypes/EchoAnyException:1.0"))
                    throw it.imolinfo.jbi4corba.test.testprovideranytypes.EchoAnyExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echo2 (msg        );
            } finally {
                _releaseReply ($in);
            }
  } // echo2

  public it.imolinfo.jbi4corba.test.testprovideranytypes.ComplexStruct1 echo3 (it.imolinfo.jbi4corba.test.testprovideranytypes.TempUnion msg)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echo3", true);
                it.imolinfo.jbi4corba.test.testprovideranytypes.TempUnionHelper.write ($out, msg);
                $in = _invoke ($out);
                it.imolinfo.jbi4corba.test.testprovideranytypes.ComplexStruct1 $result = it.imolinfo.jbi4corba.test.testprovideranytypes.ComplexStruct1Helper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echo3 (msg        );
            } finally {
                _releaseReply ($in);
            }
  } // echo3

  public org.omg.CORBA.Any[][] echo4 (it.imolinfo.jbi4corba.test.testprovideranytypes.ComplexStruct1Holder msg)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("echo4", true);
                it.imolinfo.jbi4corba.test.testprovideranytypes.ComplexStruct1Helper.write ($out, msg.value);
                $in = _invoke ($out);
                org.omg.CORBA.Any $result[][] = it.imolinfo.jbi4corba.test.testprovideranytypes.ArrayOfAnyHelper.read ($in);
                msg.value = it.imolinfo.jbi4corba.test.testprovideranytypes.ComplexStruct1Helper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return echo4 (msg        );
            } finally {
                _releaseReply ($in);
            }
  } // echo4

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:it/imolinfo/jbi4corba/test/testprovideranytypes/EchoAnyTypes:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _EchoAnyTypesStub
