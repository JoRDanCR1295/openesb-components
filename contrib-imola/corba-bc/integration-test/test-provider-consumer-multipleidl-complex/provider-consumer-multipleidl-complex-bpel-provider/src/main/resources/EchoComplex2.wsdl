<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="EchoComplex2" targetNamespace="http://it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplex2" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:imolacorba="uri://schemas.imola.it/jbi/wsdl-extensions/corba/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplex2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplex2" xmlns="http://it.imolinfo.jbi4corba.test.testprovidercomplex.EchoComplex2" xmlns:ns1="http://testprovidercomplex.test.jbi4corba.imolinfo.it/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:import namespace="http://testprovidercomplex.test.jbi4corba.imolinfo.it/" schemaLocation="TypeDef_testprovidercomplex.test.jbi4corba.imolinfo.it.xsd"/>
    <xs:element name="echo">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="msg" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoExceptionNotThrown">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="es" type="ns1:echoStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoExceptionNotThrownResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:echoStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoExceptionThrown">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="es" type="ns1:echoStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoExceptionThrownResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:echoStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoSequence">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="es" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoSequenceResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="return" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoSequenceSeqEchoStruct">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="es" type="ns1:echoStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoSequenceSeqEchoStructResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="return" type="ns1:echoStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoSequenceSeqMySequence">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="es" type="ns1:mySequence"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoSequenceSeqMySequenceResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" name="return" type="ns1:mySequence"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoSequenceValueType">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="es" type="ns1:mySequence"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoSequenceValueTypeResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:mySequence"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoStruct">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="es" type="ns1:echoStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoStructOfStruct">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="v" type="ns1:structOfStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoStructOfStructResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:structOfStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoStructOfValuetype">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="v" type="ns1:structOfValuetype"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoStructOfValuetypeResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:structOfValuetype"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoStructResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:echoStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoVTPrimi">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="v" type="ns1:vtPrimi"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoVTPrimiResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:vtPrimi"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoVTPrimiSeq">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="v" type="ns1:vtPrimiSeq"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoVTPrimiSeqResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:vtPrimiSeq"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueBoxedTypeComplex">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="e" type="ns1:mySequence"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueBoxedTypeComplexResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:mySequence"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueBoxedTypePrimitive">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="e" type="ns1:myLong"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueBoxedTypePrimitiveResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:myLong"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueType">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="e" type="ns1:echoVT"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueTypeOfStruct">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="v" type="ns1:valueTypeOfStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueTypeOfStructResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:valueTypeOfStruct"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueTypeOfValueType">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="v" type="ns1:valueTypeOfValueType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueTypeOfValueTypeResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:valueTypeOfValueType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="echoValueTypeResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="return" type="ns1:echoVT"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="EchoComplexException" type="EchoComplexException"/>
    <xs:complexType name="EchoComplexException">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="reason" type="ns1:echoStruct"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="echoVTPrimiSeqResponse">
    <wsdl:part name="parameters" element="tns:echoVTPrimiSeqResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructOfValuetype">
    <wsdl:part name="parameters" element="tns:echoStructOfValuetype">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructOfStruct">
    <wsdl:part name="parameters" element="tns:echoStructOfStruct">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoExceptionNotThrownResponse">
    <wsdl:part name="parameters" element="tns:echoExceptionNotThrownResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceSeqEchoStructResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceSeqEchoStructResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceSeqEchoStruct">
    <wsdl:part name="parameters" element="tns:echoSequenceSeqEchoStruct">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequence">
    <wsdl:part name="parameters" element="tns:echoSequence">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceSeqMySequence">
    <wsdl:part name="parameters" element="tns:echoSequenceSeqMySequence">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueType">
    <wsdl:part name="parameters" element="tns:echoValueType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeOfStructResponse">
    <wsdl:part name="parameters" element="tns:echoValueTypeOfStructResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoVTPrimiSeq">
    <wsdl:part name="parameters" element="tns:echoVTPrimiSeq">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypePrimitiveResponse">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypePrimitiveResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoVTPrimi">
    <wsdl:part name="parameters" element="tns:echoVTPrimi">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoResponse">
    <wsdl:part name="parameters" element="tns:echoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStruct">
    <wsdl:part name="parameters" element="tns:echoStruct">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeOfStruct">
    <wsdl:part name="parameters" element="tns:echoValueTypeOfStruct">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypeComplexResponse">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypeComplexResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypeComplex">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypeComplex">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeOfValueTypeResponse">
    <wsdl:part name="parameters" element="tns:echoValueTypeOfValueTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceSeqMySequenceResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceSeqMySequenceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeOfValueType">
    <wsdl:part name="parameters" element="tns:echoValueTypeOfValueType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoExceptionNotThrown">
    <wsdl:part name="parameters" element="tns:echoExceptionNotThrown">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echo">
    <wsdl:part name="parameters" element="tns:echo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoExceptionThrownResponse">
    <wsdl:part name="parameters" element="tns:echoExceptionThrownResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructResponse">
    <wsdl:part name="parameters" element="tns:echoStructResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoVTPrimiResponse">
    <wsdl:part name="parameters" element="tns:echoVTPrimiResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceValueTypeResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceValueTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceValueType">
    <wsdl:part name="parameters" element="tns:echoSequenceValueType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypePrimitive">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypePrimitive">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="EchoComplexException">
    <wsdl:part name="EchoComplexException" element="tns:EchoComplexException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoExceptionThrown">
    <wsdl:part name="parameters" element="tns:echoExceptionThrown">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructOfValuetypeResponse">
    <wsdl:part name="parameters" element="tns:echoStructOfValuetypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeResponse">
    <wsdl:part name="parameters" element="tns:echoValueTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructOfStructResponse">
    <wsdl:part name="parameters" element="tns:echoStructOfStructResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="EchoComplex2">
    <wsdl:operation name="echoValueType">
      <wsdl:input name="echoValueType" message="tns:echoValueType">
    </wsdl:input>
      <wsdl:output name="echoValueTypeResponse" message="tns:echoValueTypeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoExceptionThrown">
      <wsdl:input name="echoExceptionThrown" message="tns:echoExceptionThrown">
    </wsdl:input>
      <wsdl:output name="echoExceptionThrownResponse" message="tns:echoExceptionThrownResponse">
    </wsdl:output>
      <wsdl:fault name="EchoComplexException" message="tns:EchoComplexException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="echoStructOfStruct">
      <wsdl:input name="echoStructOfStruct" message="tns:echoStructOfStruct">
    </wsdl:input>
      <wsdl:output name="echoStructOfStructResponse" message="tns:echoStructOfStructResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStructOfValuetype">
      <wsdl:input name="echoStructOfValuetype" message="tns:echoStructOfValuetype">
    </wsdl:input>
      <wsdl:output name="echoStructOfValuetypeResponse" message="tns:echoStructOfValuetypeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceSeqMySequence">
      <wsdl:input name="echoSequenceSeqMySequence" message="tns:echoSequenceSeqMySequence">
    </wsdl:input>
      <wsdl:output name="echoSequenceSeqMySequenceResponse" message="tns:echoSequenceSeqMySequenceResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoExceptionNotThrown">
      <wsdl:input name="echoExceptionNotThrown" message="tns:echoExceptionNotThrown">
    </wsdl:input>
      <wsdl:output name="echoExceptionNotThrownResponse" message="tns:echoExceptionNotThrownResponse">
    </wsdl:output>
      <wsdl:fault name="EchoComplexException" message="tns:EchoComplexException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypePrimitive">
      <wsdl:input name="echoValueBoxedTypePrimitive" message="tns:echoValueBoxedTypePrimitive">
    </wsdl:input>
      <wsdl:output name="echoValueBoxedTypePrimitiveResponse" message="tns:echoValueBoxedTypePrimitiveResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceSeqEchoStruct">
      <wsdl:input name="echoSequenceSeqEchoStruct" message="tns:echoSequenceSeqEchoStruct">
    </wsdl:input>
      <wsdl:output name="echoSequenceSeqEchoStructResponse" message="tns:echoSequenceSeqEchoStructResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueTypeOfValueType">
      <wsdl:input name="echoValueTypeOfValueType" message="tns:echoValueTypeOfValueType">
    </wsdl:input>
      <wsdl:output name="echoValueTypeOfValueTypeResponse" message="tns:echoValueTypeOfValueTypeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceValueType">
      <wsdl:input name="echoSequenceValueType" message="tns:echoSequenceValueType">
    </wsdl:input>
      <wsdl:output name="echoSequenceValueTypeResponse" message="tns:echoSequenceValueTypeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequence">
      <wsdl:input name="echoSequence" message="tns:echoSequence">
    </wsdl:input>
      <wsdl:output name="echoSequenceResponse" message="tns:echoSequenceResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoVTPrimiSeq">
      <wsdl:input name="echoVTPrimiSeq" message="tns:echoVTPrimiSeq">
    </wsdl:input>
      <wsdl:output name="echoVTPrimiSeqResponse" message="tns:echoVTPrimiSeqResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoVTPrimi">
      <wsdl:input name="echoVTPrimi" message="tns:echoVTPrimi">
    </wsdl:input>
      <wsdl:output name="echoVTPrimiResponse" message="tns:echoVTPrimiResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypeComplex">
      <wsdl:input name="echoValueBoxedTypeComplex" message="tns:echoValueBoxedTypeComplex">
    </wsdl:input>
      <wsdl:output name="echoValueBoxedTypeComplexResponse" message="tns:echoValueBoxedTypeComplexResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStruct">
      <wsdl:input name="echoStruct" message="tns:echoStruct">
    </wsdl:input>
      <wsdl:output name="echoStructResponse" message="tns:echoStructResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo">
      <wsdl:input name="echo" message="tns:echo">
    </wsdl:input>
      <wsdl:output name="echoResponse" message="tns:echoResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueTypeOfStruct">
      <wsdl:input name="echoValueTypeOfStruct" message="tns:echoValueTypeOfStruct">
    </wsdl:input>
      <wsdl:output name="echoValueTypeOfStructResponse" message="tns:echoValueTypeOfStructResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EchoComplex2CorbaBinding" type="tns:EchoComplex2">
<imolacorba:binding>
<imolacorba:idl root="true" filename="EchoComplex2.idl" relativepath=".">
//IDL
#include &quot;SharedIdl.idl&quot;
#include &quot;ComplexStruct.idl&quot;
module it{
	module imolinfo{
		module jbi4corba{
			module test{
				module testprovidercomplex{
                                            
                                           
 
        					// value type
        					valuetype EchoVT {
        						public  short publicShort;
        						private long  privateLong;
        				    };

                                            // value type (boxed) - primitive
        					valuetype MyLong {
            					public long data;
        				    };
    
                                            // value type (boxed) - complex
        					valuetype MySequence {
            					public sequence&lt;long&gt; data;
        				    };

            				// abstract value type
            				// UNSUPPORTED : abstract valuetype AFoo {};
    

                                       
    
               				// sequence + typedef
               				typedef sequence&lt;long&gt; SeqLong;

               				// sequence + typedef
               				typedef sequence&lt;MySequence&gt; SeqMySequence;

               				// sequence + typedef
               				typedef sequence&lt;EchoStruct&gt; SeqEchoStruct;

    
               				// exception
        					exception EchoComplexException {
            					SeqEchoStruct reason;
            				};           				

            				// enum
            				// FIXME: enum is unsupported
            				// enum EchoComplexEnum {E1, E2, E3};
    
            				// FIXME: array is unsupported
            				// array
            				//typedef long ArrayLong[10];
    
               				// array of struct
        					//typedef long ArrayOfEchoStruct[10];


                            // StructOfStruct
           					struct StructOfStruct {
               					EchoStruct internalStruct;
               				};

        					// value type
        					valuetype VTPrimi {
                                public boolean            fieldBoolean;
                                public char               fieldChar;
                                public wchar              fieldWChar;

                                // http://jira.codehaus.org/browse/XFIRE-462
                                public octet              fieldOctet;

                                public string             fieldString;
                                public wstring            fieldWString;
                                public short              fieldShort;
                                public unsigned short     fieldUnsignedShort;
                                public long               fieldLong;
                                public unsigned long      fieldUnsignedLong;
                                public long long          fieldLongLong;
                                public unsigned long long fieldUnsignedLongLong;
                                public float              fieldFloat;
                                public double             fieldDouble;
        				    };

        					valuetype VTPrimiSeq {
            					public sequence&lt;VTPrimi&gt; data;
        				    };

        					valuetype ValueTypeOfValueType {
            					public VTPrimi data;
        				    };

        					valuetype ValueTypeOfStruct {
            					public EchoStruct data;
        				    };

                            // StructOfStruct
           					struct StructOfValuetype {
               					VTPrimi data;
               				};


        					//==================================================
        					//                                         INTERFACE
        					//==================================================
    						interface EchoComplex2 {

    							string echo(in string msg);
    
    							EchoVT echoValueType(in EchoVT e);
    
    							MyLong echoValueBoxedTypePrimitive(in MyLong e);

    							MySequence echoValueBoxedTypeComplex(in MySequence e);
    
    							EchoStruct echoStruct(in EchoStruct es);
    
    							SeqLong echoSequence(in SeqLong es);

    							MySequence echoSequenceValueType(in MySequence es);

    							SeqEchoStruct echoSequenceSeqEchoStruct(in SeqEchoStruct es);

    							SeqMySequence echoSequenceSeqMySequence(in SeqMySequence es);
    
    							EchoStruct echoExceptionThrown(in EchoStruct es)
    							    raises (EchoComplexException);

    							EchoStruct echoExceptionNotThrown(in EchoStruct es)
    							    raises (EchoComplexException);

    							// FIXME: enum is unsupported
    							//string echoEnum(in EchoComplexEnum e);
    
    							// FIME: array is unsupported
    							// string echoArray(in ArrayLong e);
    
    							// UNSUPPORTED : string echoAbstractValueType(in AFoo n);


    							StructOfStruct echoStructOfStruct(in StructOfStruct v);

    							VTPrimi echoVTPrimi(in VTPrimi v);

    							VTPrimiSeq echoVTPrimiSeq(in VTPrimiSeq v);

    							ValueTypeOfValueType echoValueTypeOfValueType(in ValueTypeOfValueType v);

    							ValueTypeOfStruct echoValueTypeOfStruct(in ValueTypeOfStruct v);

    							StructOfValuetype echoStructOfValuetype(in StructOfValuetype v);
					};
				};
			};
		};
	};
};
</imolacorba:idl>
<imolacorba:idl root="false" filename="SharedIdl.idl" relativepath="">
module it{
	module imolinfo{
		module jbi4corba{
			module test{
				module testsharedprovidercomplex{

                                struct  SharedStruct {
                                string            fieldName;
                                string            fieldSName;
                                };

                                 interface EchoShared {

    							SharedStruct echo(in string name,in string sname);
                                   
                                                        };
                         };
                    };
               };
        };
};
</imolacorba:idl>
<imolacorba:idl root="false" filename="ComplexStruct.idl" relativepath="">
module it{
	module imolinfo{
		module jbi4corba{
			module test{
				module testprovidercomplex{
// =============================================================================
// IDL Type            | Java type                  | Exceptions
// =============================================================================
// boolean             | boolean                    |
// char                | char                       | CORBA::DATA_CONVERSION
// wchar               | char                       | CORBA::DATA_CONVERSION
// octet               | byte                       |
// -----------------------------------------------------------------------------
// string              | String                     | CORBA::MARSHAL
//                     |                            | CORBA::DATA_CONVERSION
// -----------------------------------------------------------------------------
// wstring             | String                     | CORBA::MARSHAL
//                     |                            | CORBA::DATA_CONVERSION
// -----------------------------------------------------------------------------
// short               | short                      |
// unsigned short      | short                      |
// long                | int                        |
// unsigned long       | int                        |
// long long           | long                       |
// unsigned long  long | long                       |
// float               | float                      |
// double              | double                     |
// fixed               | java.math.BigDecimal       |CORBA::DATA_CONVERSION
// =============================================================================
// long double         | not available at this time |
// =============================================================================

                                // struct
           					struct EchoStruct {
                                boolean            fieldBoolean;
                                char               fieldChar;
                                wchar              fieldWChar;

                               
                                string             fieldString;
                                wstring            fieldWString;
                                short              fieldShort;
                                unsigned short     fieldUnsignedShort;
                                long               fieldLong;
                                unsigned long      fieldUnsignedLong;
                                long long          fieldLongLong;
                                unsigned long long fieldUnsignedLongLong;
                                float              fieldFloat;
                                double             fieldDouble;
                                                                   };
                                };
            };                    
        };             				
    };
};
</imolacorba:idl>
</imolacorba:binding>
    <wsdl:operation name="echoExceptionThrown">
      <wsdl:input name="echoExceptionThrown">
      </wsdl:input>
      <wsdl:output name="echoExceptionThrownResponse">
      </wsdl:output>
      <wsdl:fault name="EchoComplexException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="echoValueType">
      <wsdl:input name="echoValueType">
      </wsdl:input>
      <wsdl:output name="echoValueTypeResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStructOfStruct">
      <wsdl:input name="echoStructOfStruct">
      </wsdl:input>
      <wsdl:output name="echoStructOfStructResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceSeqMySequence">
      <wsdl:input name="echoSequenceSeqMySequence">
      </wsdl:input>
      <wsdl:output name="echoSequenceSeqMySequenceResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStructOfValuetype">
      <wsdl:input name="echoStructOfValuetype">
      </wsdl:input>
      <wsdl:output name="echoStructOfValuetypeResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoExceptionNotThrown">
      <wsdl:input name="echoExceptionNotThrown">
      </wsdl:input>
      <wsdl:output name="echoExceptionNotThrownResponse">
      </wsdl:output>
      <wsdl:fault name="EchoComplexException">
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypePrimitive">
      <wsdl:input name="echoValueBoxedTypePrimitive">
      </wsdl:input>
      <wsdl:output name="echoValueBoxedTypePrimitiveResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceSeqEchoStruct">
      <wsdl:input name="echoSequenceSeqEchoStruct">
      </wsdl:input>
      <wsdl:output name="echoSequenceSeqEchoStructResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueTypeOfValueType">
      <wsdl:input name="echoValueTypeOfValueType">
      </wsdl:input>
      <wsdl:output name="echoValueTypeOfValueTypeResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequence">
      <wsdl:input name="echoSequence">
      </wsdl:input>
      <wsdl:output name="echoSequenceResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequenceValueType">
      <wsdl:input name="echoSequenceValueType">
      </wsdl:input>
      <wsdl:output name="echoSequenceValueTypeResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoVTPrimiSeq">
      <wsdl:input name="echoVTPrimiSeq">
      </wsdl:input>
      <wsdl:output name="echoVTPrimiSeqResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoVTPrimi">
      <wsdl:input name="echoVTPrimi">
      </wsdl:input>
      <wsdl:output name="echoVTPrimiResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypeComplex">
      <wsdl:input name="echoValueBoxedTypeComplex">
      </wsdl:input>
      <wsdl:output name="echoValueBoxedTypeComplexResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStruct">
      <wsdl:input name="echoStruct">
      </wsdl:input>
      <wsdl:output name="echoStructResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo">
      <wsdl:input name="echo">
      </wsdl:input>
      <wsdl:output name="echoResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueTypeOfStruct">
      <wsdl:input name="echoValueTypeOfStruct">
      </wsdl:input>
      <wsdl:output name="echoValueTypeOfStructResponse">
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EchoComplex2">
    <wsdl:port name="EchoComplex2CorbaPort" binding="tns:EchoComplex2CorbaBinding">
<imolacorba:address name="EchoComplex2" localizationType="NameService">
<imolacorba:orb>
<imolacorba:property name="org.omg.CORBA.ORBInitialPort" value="1050"/>
<imolacorba:property name="org.omg.CORBA.ORBClass" value="com.sun.corba.ee.impl.orb.ORBImpl"/>
<imolacorba:property name="org.omg.CORBA.ORBInitialHost" value="localhost"/>
</imolacorba:orb>
</imolacorba:address>
    </wsdl:port>
  </wsdl:service>
<plnk:partnerLinkType name="EchoComplex2">
<plnk:role name="EchoComplex2PortTypeRole" portType="tns:EchoComplex2"/>
</plnk:partnerLinkType>
</wsdl:definitions>
