																			---
																			Documentation
																			---
																			Raffaele Spazzoli
																			---
																			04/09/2006

User Guide


* {Interoperability and orb implementation}

	<Theorically> given corba inter-orb interoperability, it should be possible to use just one orb in Jbi4Corba to talk with different orb running the corba servants.
	This however would not be possibile in reality in many situations so in Jbi4Corba it is possibile to use different orb even simultaneously. At the moment Jbi4Corba is tested with the Sun, Glassfish and {{{http://www.jacorb.org}jacORB}} implementations, but, as it uses only standard Corba API, it <should> support any orb implementation (in the {{{UserGuide/ORBConfiguration.html}ORB Configuration's page}} is shown how to configure a different orb). 
      The orb is specified per IDL so every service defined inside a single idl will use the same orb implementation, it will have though its own orb to allow different endpoint to be managed (activated/deactivated) independently.
	The localization mode is specified per IDL too, so every service defined inside the same IDL will share the localization mode.
	It's the user responsability to make orb classes available to Jbi4Corba. The easiest way would be to copy orb jars into an extension directory (jre extension or your JBI ESB extension/optional directory). 
	Another cleaner possibility is to create a shared library with your orb jars (and possibly configuration files) and then deploy it into the JBI ESB. 
	In this case you will need to tweak Jbi4Corba's jbi.xml and declare its dependency to the orb shared library.

* How to configure the component

  Jbi4Corba may work either in provider mode either in consumer mode. The service unit configuration however is slightly different in the two mode. Here we describe the configuration separately:

    {{{UserGuide/RoleProvider.html}Configuring the SU as provider}}

    {{{UserGuide/RoleConsumer.html}Configuring the SU as consumer}}

* Inout IDL parameters
    
   {{{UserGuide/INOUTSynchronousCommunication.html}Using Jbi4Corba with inout and out IDL parameters.}}

* Asyncronous Communication

    {{{UserGuide/AsynchronousCommunitation.html}Using Jbi4Corba with oneway/inonly MEP.}}
    
* Dynamic Interfaces
    
   {{{UserGuide/dynamicInterfaces.html}Support for Dynamic Interfaces}}

* Any Types 

    {{{UserGuide/anySupport.html}Support for Any Types}}    
