<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="EchoComplex" targetNamespace="http://it.imolinfo.jbi4corba.test.webservice.generator.echocomplex.EchoComplex" xmlns:imolacorba="uri://schemas.imola.it/jbi/wsdl-extensions/corba/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://it.imolinfo.jbi4corba.test.webservice.generator.echocomplex.EchoComplex" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
    <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://echocomplex.generator.webservice.test.jbi4corba.imolinfo.it/" xmlns:tns="http://echocomplex.generator.webservice.test.jbi4corba.imolinfo.it/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:complexType name="myLong">
<xs:sequence>
<xs:element name="data" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="echoVT">
<xs:sequence>
<xs:element name="publicShort" type="xs:short"/>
<xs:element name="privateLong" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="echoStruct">
<xs:sequence>
<xs:element name="fieldBoolean" type="xs:boolean"/>
<xs:element name="fieldChar" type="xs:unsignedShort"/>
<xs:element name="fieldWChar" type="xs:unsignedShort"/>
<xs:element name="fieldOctet" type="xs:byte"/>
<xs:element name="fieldString" type="xs:string"/>
<xs:element name="fieldWString" type="xs:string"/>
<xs:element name="fieldShort" type="xs:short"/>
<xs:element name="fieldUnsignedShort" type="xs:short"/>
<xs:element name="fieldLong" type="xs:int"/>
<xs:element name="fieldUnsignedLong" type="xs:int"/>
<xs:element name="fieldLongLong" type="xs:long"/>
<xs:element name="fieldUnsignedLongLong" type="xs:long"/>
<xs:element name="fieldFloat" type="xs:float"/>
<xs:element name="fieldDouble" type="xs:double"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="mySequence">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="data" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="valueTypeOfValueType">
<xs:sequence>
<xs:element name="data" type="tns:vtPrimi"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="vtPrimi">
<xs:sequence>
<xs:element name="fieldBoolean" type="xs:boolean"/>
<xs:element name="fieldChar" type="xs:unsignedShort"/>
<xs:element name="fieldWChar" type="xs:unsignedShort"/>
<xs:element name="fieldOctet" type="xs:byte"/>
<xs:element name="fieldString" type="xs:string"/>
<xs:element name="fieldWString" type="xs:string"/>
<xs:element name="fieldShort" type="xs:short"/>
<xs:element name="fieldUnsignedShort" type="xs:short"/>
<xs:element name="fieldLong" type="xs:int"/>
<xs:element name="fieldUnsignedLong" type="xs:int"/>
<xs:element name="fieldLongLong" type="xs:long"/>
<xs:element name="fieldUnsignedLongLong" type="xs:long"/>
<xs:element name="fieldFloat" type="xs:float"/>
<xs:element name="fieldDouble" type="xs:double"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="structOfValuetype">
<xs:sequence>
<xs:element name="data" type="tns:vtPrimi"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="structOfStruct">
<xs:sequence>
<xs:element name="internalStruct" type="tns:echoStruct"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="valueTypeOfStruct">
<xs:sequence>
<xs:element name="data" type="tns:echoStruct"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="vtPrimiSeq">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="data" type="tns:vtPrimi"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://it.imolinfo.jbi4corba.test.webservice.generator.echocomplex.EchoComplex" xmlns="http://it.imolinfo.jbi4corba.test.webservice.generator.echocomplex.EchoComplex" xmlns:ns1="http://echocomplex.generator.webservice.test.jbi4corba.imolinfo.it/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:import namespace="http://echocomplex.generator.webservice.test.jbi4corba.imolinfo.it/"/>
<xs:element name="echo">
<xs:complexType>
<xs:sequence>
<xs:element name="msg" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoResponse">
<xs:complexType>
<xs:sequence>
<xs:element name="return" type="xs:string"/>
<xs:element name="msg" type="xs:string"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoSequence">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" name="es" type="xs:int"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoSequenceResponse">
<xs:complexType>
<xs:sequence>
<xs:element maxOccurs="unbounded" name="return" type="xs:int"/>
<xs:element maxOccurs="unbounded" name="es" type="xs:int"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoStruct">
<xs:complexType>
<xs:sequence>
<xs:element name="es" type="ns1:echoStruct"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoStructResponse">
<xs:complexType>
<xs:sequence>
<xs:element name="return" type="ns1:echoStruct"/>
<xs:element name="es" type="ns1:echoStruct"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoValueBoxedTypeComplex">
<xs:complexType>
<xs:sequence>
<xs:element name="e" type="ns1:mySequence"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoValueBoxedTypeComplexResponse">
<xs:complexType>
<xs:sequence>
<xs:element name="return" type="ns1:mySequence"/>
<xs:element name="e" type="ns1:mySequence"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoValueBoxedTypePrimitive">
<xs:complexType>
<xs:sequence>
<xs:element name="e" type="ns1:myLong"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoValueBoxedTypePrimitiveResponse">
<xs:complexType>
<xs:sequence>
<xs:element name="return" type="ns1:myLong"/>
<xs:element name="e" type="ns1:myLong"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoValueType">
<xs:complexType>
<xs:sequence>
<xs:element name="e" type="ns1:echoVT"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoValueTypeResponse">
<xs:complexType>
<xs:sequence>
<xs:element name="return" type="ns1:echoVT"/>
<xs:element name="e" type="ns1:echoVT"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echobolean">
<xs:complexType>
<xs:sequence>
<xs:element name="es" type="xs:short"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:element name="echoboleanResponse">
<xs:complexType>
<xs:sequence>
<xs:element name="return" type="xs:short"/>
<xs:element name="es" type="xs:short"/>
</xs:sequence>
</xs:complexType>
</xs:element>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="echoSequence">
    <wsdl:part name="parameters" element="tns:echoSequence">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echo">
    <wsdl:part name="parameters" element="tns:echo">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypePrimitive">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypePrimitive">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueType">
    <wsdl:part name="parameters" element="tns:echoValueType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStructResponse">
    <wsdl:part name="parameters" element="tns:echoStructResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueTypeResponse">
    <wsdl:part name="parameters" element="tns:echoValueTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoSequenceResponse">
    <wsdl:part name="parameters" element="tns:echoSequenceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoStruct">
    <wsdl:part name="parameters" element="tns:echoStruct">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypePrimitiveResponse">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypePrimitiveResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoResponse">
    <wsdl:part name="parameters" element="tns:echoResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoboleanResponse">
    <wsdl:part name="parameters" element="tns:echoboleanResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypeComplex">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypeComplex">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echoValueBoxedTypeComplexResponse">
    <wsdl:part name="parameters" element="tns:echoValueBoxedTypeComplexResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="echobolean">
    <wsdl:part name="parameters" element="tns:echobolean">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="EchoComplex">
    <wsdl:operation name="echoValueBoxedTypePrimitive">
      <wsdl:input name="echoValueBoxedTypePrimitive" message="tns:echoValueBoxedTypePrimitive">
    </wsdl:input>
      <wsdl:output name="echoValueBoxedTypePrimitiveResponse" message="tns:echoValueBoxedTypePrimitiveResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequence">
      <wsdl:input name="echoSequence" message="tns:echoSequence">
    </wsdl:input>
      <wsdl:output name="echoSequenceResponse" message="tns:echoSequenceResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echobolean">
      <wsdl:input name="echobolean" message="tns:echobolean">
    </wsdl:input>
      <wsdl:output name="echoboleanResponse" message="tns:echoboleanResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo">
      <wsdl:input name="echo" message="tns:echo">
    </wsdl:input>
      <wsdl:output name="echoResponse" message="tns:echoResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueType">
      <wsdl:input name="echoValueType" message="tns:echoValueType">
    </wsdl:input>
      <wsdl:output name="echoValueTypeResponse" message="tns:echoValueTypeResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStruct">
      <wsdl:input name="echoStruct" message="tns:echoStruct">
    </wsdl:input>
      <wsdl:output name="echoStructResponse" message="tns:echoStructResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypeComplex">
      <wsdl:input name="echoValueBoxedTypeComplex" message="tns:echoValueBoxedTypeComplex">
    </wsdl:input>
      <wsdl:output name="echoValueBoxedTypeComplexResponse" message="tns:echoValueBoxedTypeComplexResponse">
    </wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EchoComplexCorbaBinding" type="tns:EchoComplex">
<imolacorba:binding>
<imolacorba:idl root="true" filename="EchoComplexInOut.idl" relativepath=".">
//IDL
module it{
module imolinfo{
module jbi4corba{
module test{
module webservice{
module generator{
module echocomplex{

  // value type
  valuetype EchoVT {
    public  short publicShort;
    private long  privateLong;
  };

  // value type (boxed) - primitive
  valuetype MyLong {
    public long data;
  };
    
  // value type (boxed) - complex
  valuetype MySequence {
    public sequence&lt;long&gt; data;
  };

  // abstract value type
  // UNSUPPORTED : abstract valuetype AFoo {};
    

  // ===========================================================================
  // IDL Type            | Java type                  | Exceptions
  // ===========================================================================
  // boolean             | boolean                    |
  // char                | char                       | CORBA::DATA_CONVERSION
  // wchar               | char                       | CORBA::DATA_CONVERSION
  // octet               | byte                       |
  // ---------------------------------------------------------------------------
  // string              | String                     | CORBA::MARSHAL
  //                     |                            | CORBA::DATA_CONVERSION
  // ---------------------------------------------------------------------------
  // wstring             | String                     | CORBA::MARSHAL
  //                     |                            | CORBA::DATA_CONVERSION
  // ---------------------------------------------------------------------------
  // short               | short                      |
  // unsigned short      | short                      |
  // long                | int                        |
  // unsigned long       | int                        |
  // long long           | long                       |
  // unsigned long  long | long                       |
  // float               | float                      |
  // double              | double                     |
  // fixed               | java.math.BigDecimal       |CORBA::DATA_CONVERSION
  // ===========================================================================
  // long double         | not available at this time |
  // ===========================================================================

  // struct
  struct EchoStruct {
    boolean            fieldBoolean;
    char               fieldChar;
    wchar              fieldWChar;

    // http://jira.codehaus.org/browse/XFIRE-462
    octet              fieldOctet;

    string             fieldString;
    wstring            fieldWString;
    short              fieldShort;
    unsigned short     fieldUnsignedShort;
    long               fieldLong;
    unsigned long      fieldUnsignedLong;
    long long          fieldLongLong;
    unsigned long long fieldUnsignedLongLong;
    float              fieldFloat;
    double             fieldDouble;

    // UNSUPPORTED
    // The fixed IDL type is not supported by idlj
    // http://java.sun.com/j2se/1.4.2/docs/guide/rmi-iiop/toJavaPortableUG.html
    //fixed              fieldFixed;
  };
    
  // sequence + typedef
  typedef sequence&lt;long&gt; SeqLong;

  // sequence + typedef
  typedef sequence&lt;MySequence&gt; SeqMySequence;

  // sequence + typedef
  typedef sequence&lt;EchoStruct&gt; SeqEchoStruct;


  // exception
  exception EchoComplexException {
    SeqEchoStruct reason;
  };           				

  // enum
  // enum EchoComplexEnum {E1, E2, E3};

  // FIXME: array is unsupported
  // array
  //typedef long ArrayLong[10];

  // array of struct
  //typedef long ArrayOfEchoStruct[10];


  // StructOfStruct
  struct StructOfStruct {
    EchoStruct internalStruct;
  };

  // value type
  valuetype VTPrimi {
    public boolean            fieldBoolean;
    public char               fieldChar;
    public wchar              fieldWChar;

    // http://jira.codehaus.org/browse/XFIRE-462
    public octet              fieldOctet;

    public string             fieldString;
    public wstring            fieldWString;
    public short              fieldShort;
    public unsigned short     fieldUnsignedShort;
    public long               fieldLong;
    public unsigned long      fieldUnsignedLong;
    public long long          fieldLongLong;
    public unsigned long long fieldUnsignedLongLong;
    public float              fieldFloat;
    public double             fieldDouble;
  };

  valuetype VTPrimiSeq {
    public sequence&lt;VTPrimi&gt; data;
  };

  valuetype ValueTypeOfValueType {
    public VTPrimi data;
  };

  valuetype ValueTypeOfStruct {
    public EchoStruct data;
  };

  // StructOfStruct
  struct StructOfValuetype {
    VTPrimi data;
  };

  //==================================================
  //                                         INTERFACE
  //==================================================
  interface EchoComplex {
    string echo(inout string msg);
    EchoVT echoValueType(out EchoVT e);
    MyLong echoValueBoxedTypePrimitive(inout MyLong e);
    MySequence echoValueBoxedTypeComplex(inout MySequence e);
    EchoStruct echoStruct(inout EchoStruct es);
    SeqLong echoSequence(inout SeqLong es);
    short echobolean(inout short es);
  };

};
};
};
};
};
};
};
</imolacorba:idl>
</imolacorba:binding>
    <wsdl:operation name="echoValueBoxedTypePrimitive">
      <wsdl:input name="echoValueBoxedTypePrimitive">
      </wsdl:input>
      <wsdl:output name="echoValueBoxedTypePrimitiveResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoSequence">
      <wsdl:input name="echoSequence">
      </wsdl:input>
      <wsdl:output name="echoSequenceResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echo">
      <wsdl:input name="echo">
      </wsdl:input>
      <wsdl:output name="echoResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echobolean">
      <wsdl:input name="echobolean">
      </wsdl:input>
      <wsdl:output name="echoboleanResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueType">
      <wsdl:input name="echoValueType">
      </wsdl:input>
      <wsdl:output name="echoValueTypeResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoStruct">
      <wsdl:input name="echoStruct">
      </wsdl:input>
      <wsdl:output name="echoStructResponse">
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="echoValueBoxedTypeComplex">
      <wsdl:input name="echoValueBoxedTypeComplex">
      </wsdl:input>
      <wsdl:output name="echoValueBoxedTypeComplexResponse">
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EchoComplex">
    <wsdl:port name="EchoComplexCorbaPort" binding="tns:EchoComplexCorbaBinding">
<imolacorba:address name="EchoComplex" localizationType="NameService">
<imolacorba:orb>
<imolacorba:property name="org.omg.CORBA.ORBInitialPort" value="1050"/>
<imolacorba:property name="org.omg.CORBA.ORBClass" value="com.sun.corba.ee.impl.orb.ORBImpl"/>
<imolacorba:property name="org.omg.CORBA.ORBInitialHost" value="localhost"/>
</imolacorba:orb>
</imolacorba:address>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
