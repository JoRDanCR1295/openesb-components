 /****************************************************************************
 * Copyright (c) 2005, 2006, 2007, 2008, 2009 Imola Informatica.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the LGPL License v2.1
 * which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl.html
 ****************************************************************************/
package it.imolinfo.jbi4corba.test.bytecodemanipulation;



/**
* generator/webservice/test/jbi4corba/imolinfo/it/TReqSeq.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /home/marco/SUNWappserver5.5.1/domains/domain1/jbi/service-assemblies/CompositeApp1/CompositeApp1-com.sun.httpsoapbc-1.0-2/jbi4corba/1522517/wsdl.0.tmp/EchoSCServicePortTypeCorbaInterface.idl
* Wednesday, 11 April 2007 06:46:20 PM CEST
*/

public abstract class TReqSeq implements org.omg.CORBA.portable.StreamableValue
{
  public boolean dataBoolean = false;
  public double dataDouble = (double)0;
  public float dataFloat = (float)0;
  public int dataInt = (int)0;
  public long dataLong = (long)0;
  public short dataUByte = (short)0;
  public long dataUInt = (long)0;
  public int dataUShort = (int)0;
  public String dataAnyURI = null;
  public String dataENTITY = null;
  public String dataID = null;
  public String dataLanguage = null;
  public String dataNCName = null;
  public String dataNMTOKEN = null;
  public String dataName = null;
  public String dataNormalizedString = null;
  public String dataString = null;

  public static String[] _truncatable_ids = {
    "1.0"
  };

  public String[] _truncatable_ids() {
    return _truncatable_ids;
  }

  public void _read (org.omg.CORBA.portable.InputStream istream)
  {
    this.dataBoolean = istream.read_boolean ();
    this.dataDouble = istream.read_double ();
    this.dataFloat = istream.read_float ();
    this.dataInt = istream.read_long ();
    this.dataLong = istream.read_longlong ();
    this.dataUByte = istream.read_short ();
    this.dataUInt = istream.read_longlong ();
    this.dataUShort = istream.read_long ();
    this.dataAnyURI = org.omg.CORBA.WStringValueHelper.read (istream);
    this.dataENTITY = org.omg.CORBA.WStringValueHelper.read (istream);
    this.dataID = org.omg.CORBA.WStringValueHelper.read (istream);
    this.dataLanguage = org.omg.CORBA.WStringValueHelper.read (istream);
    this.dataNCName = org.omg.CORBA.WStringValueHelper.read (istream);
    this.dataNMTOKEN = org.omg.CORBA.WStringValueHelper.read (istream);
    this.dataName = org.omg.CORBA.WStringValueHelper.read (istream);
    this.dataNormalizedString = org.omg.CORBA.WStringValueHelper.read (istream);
    this.dataString = org.omg.CORBA.WStringValueHelper.read (istream);
  }

  //public void _write (org.omg.CORBA.portable.OutputStream ostream)
  public void _write (org.omg.CORBA.portable.OutputStream ostream)
  {
    ostream.write_boolean (this.dataBoolean);
    ostream.write_double (this.dataDouble);
    ostream.write_float (this.dataFloat);
    ostream.write_long (this.dataInt);
    ostream.write_longlong (this.dataLong);
    ostream.write_short (this.dataUByte);
    ostream.write_longlong (this.dataUInt);
    ostream.write_long (this.dataUShort);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataAnyURI);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataENTITY);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataID);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataLanguage);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataNCName);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataNMTOKEN);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataName);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataNormalizedString);
    org.omg.CORBA.WStringValueHelper.write (ostream, this.dataString);
  }

  public org.omg.CORBA.TypeCode _type ()
  {
    return null;
  }

} // class TReqSeq