                                ---
								The Netbeans plug-in
								---
								Antonella Belllettini
								---
								16/07/2007

The NetBeans Plugin
 
  This guide shows you how to install and use the Jbi4EJB netbeans plugin.
  To see the plugin in action, {{{demoJBI4EJB.swf}watch the demo}}.
	
    {{{netbeansplugin.html#Description}Description}}

	{{{netbeansplugin.html#Installation}Installation}}
	
	{{{netbeansplugin.html#How to create a Jbi4Ejb WSDL from an EAR file}How to create a Jbi4Ejb WSDL from an EAR file}}
	
	{{{netbeansplugin.html#Editing the WSDL}Editing the WSDL}}

*{Description}

  With the Jbi4EJB Netbeans plugin, you can create a Jbi4Ejb extended WSDL file starting from 
  an J2EE Enterprise Application file (EAR).

  In addition, you can also modify a WSDL file adding a binding to 
  the Jbi4Ejb component, so the WSDL will be suitable to be deployed inside a 
  JBI service unit. This feature is available using the NetBeans WSDL editor.

  The plugin is tested with NetBeans IDE 5.5 and NetBeans IDE 6 beta, with
  Enterprise Pack installed.
 
*{Installation}

  To install the plugin, follow these steps:

  * {{{http://sourceforge.net/projects/Jbi4Ejb}Download the latest netbeans-plugin zip}} 

  * Unzip the netbeans plugin in a temporary directory. Some .nbm files should be unpacked

  * Start the Netbeans IDE and then select:

	* Tools -> Plugins -> Downloaded (.nbm files) 

	* Selects the unpacked nbm files -> Install -> next

	* Accept the License Agreement -> Install -> Continue

	* The plugin installation is finish -> Finish

      []
  
  []

	After these operations, you should be able to see the Jbi4Ejb plugins installed


[images/InstPlugin.jpg] The Jbi4Ejb plugins installed


*{How to create a Jbi4Ejb WSDL from an EAR file}

	After the plugin installation, you are ready to create a new WSDL from an EAR file. 
	You can use this WSDL to integrate the component in Composite Applications. For example, you can
	add the servant as a partner-link in a BPEL process. 

      Select your project, right-click and select New -> Other

[images/AddWSDL.jpg] 


	Select the SOA folder and then the WSDL From EJB File type
  	

[images/Wsdl2EJB.jpg] WSDL From EJB
	
	
	Then, the wizard asks you for the ear file containing the EJB


[images/selectEar.jpg]	


	The Wizard extracts the Session Stateless EJB remote interfaces and asks for the interface to use to create the WSDL.
	

[images/selectInterface.jpg]

	The next step asks for the configuration parameters nedded to connect with the EJB:
	 
		* The ORB configuration
		
		* The corbaname to obtain a EJB reference. See {{{applicationServerConfiguration.html} here}} to see how these parameters 
		  	should be configured for the different Application Servers
		
	
[images/BCConfiguration.jpg]


	In the last step, the wizard asks for the file name and position for the new WSDL created 

	
	
[images/NewWSDLCreated.jpg]


	Now, you are ready to fully integrate the ejb in OpenESB using the Netbeans tools.
	For example, you can use it in a BPEL orchestration exposed
	with SOAP. 	



[images/casaWithEJB.jpg] A Jbi4Ejb Service Unit managed by the Netbeans CASA editor


*{Editing the WSDL}

	The WSDL can be modified using the Netbeans WSDL editor. See the {{{wsdlExtensions.html} WSDL Extensions guide}} for the meaning of the extensions.
	
[images/addEJBBinding.jpg] A Jbi4Ejb Binding can be added or modified using the NEtbeans WSDL editor		
	
	