# properties will be used to find the xslt file that will be used for invoking a 
# service operation.
#  The "xacmlmap.properties" file should contain two types of properties
#  1. for namespace prefix to namespaceURI map that starts with "xmlns." prefix like
#    "xmlns.tns-prefix=http://www.sun.com/jbi/examples/sample-service/echo"
#  2. a service description to xslt file properties with syntax like
#    "{tns-prefix}service-name=xslt_file_name"  and
#    "{tns-prefix}service-name.{tns-prefix}operation-name=xslt_file_name" and
#    "{tns-prefix}service-name.{tns-prefix}interface-name.operation-name=xslt_file_name" .
#  the service description property is a "." delimited tokens that represents
#  a serive or interface qname and a operation name. To locate xslt file either with 
#  service qname or service qname and operaton or serivice qname and interface qname 
#  and operation, all the three properties specified above should be there for each xslt file.
#

xmlns.xacml1=http://www.sun.com/jbi/test/sample-xacml/developer/
xmlns.xacml2=http://www.sun.com/jbi/test/sample-xacml/developer/
xmlns.xacmltypes=http://www.sun.com/jbi/test/sample-xacml/developer/types
# just service level default settings
{xacml2}XACMLService=developerPolicy.xml
# service and operation
{xacml2}XACMLService.{xacml1}read=developerPolicy.xml
# service, interface, operation
{xacml2}XACMLService.{xacml1}policy.read=developerPolicy.xml
# service and operation
{xacml2}XACMLService.{xacml1}write=developerPolicy.xml
# service, interface, operation
{xacml2}XACMLService.{xacml1}policy.write=developerPolicy.xml
