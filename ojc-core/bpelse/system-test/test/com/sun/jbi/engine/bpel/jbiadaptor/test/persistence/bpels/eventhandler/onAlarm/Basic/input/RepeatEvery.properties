#Information used to construct the input message and make a call to the engine.
# service and endpoint values are from the jbi.xml's connection portion.
SERVICE={http://enterprise.netbeans.org/bpel/onAlarmRepeatEveryOnlyBPEL}PartnerLink1
ENDPOINT=onAlarmRepeatEveryOnlyWSDLPortTypeRole_myRole

OPERATION=onAlarmRepeatEveryOnlyWSDLOperation
IP_MESG_TYPE={http://j2ee.netbeans.org/wsdl/onAlarmRepeatEveryOnlyWSDL}onAlarmRepeatEveryOnlyWSDLOperationRequest
OP_MESG_TYPE=
######

#Input file that will have the input message that will instantiate the BPEL instance
INPUT=bpels/eventhandler/onAlarm/Basic/input/RepeatEveryInput.xml

#Output file that will be obatined at the end of the BPEL, most likely 
# due to the one-way invoke at the end of the BPEL.
OUTPUT=bpels/eventhandler/onAlarm/Basic/output/RepeatEveryOutput.xml
DBSTEPS=RepeatEvery.out
######

#Class and methods that help the simultor drive the testing and recovery. 
# Custom functionality can be acheived by user defined classes and methods
CLASS=com.sun.jbi.engine.bpel.jbiadaptor.test.persistence.EventHandlerUtility
METHOD=initiateBPInstance_RepeatEvery
CHANNEL_METHOD=associateReplyChannel
RECOVERY_METHOD=recover_RepeatEvery
######

#Recovery related. Recovery property hints at the stage of recovery development 
# for the specific feature being test
RECOVERY=In Development
# Specify a single, comma-delimited or a range (e.g 1-4). If unspecified, then by 
# default, recovery will be tested for all possible CRASHPOINTS (see the .out files) 
# ** Crash points 1, 2 and 3 is not so important. This is a timer based test, 
# ** in order to save time and keep the recovery simple some crash points are ignored
# ** Recovery is put in development, since I couldn't make use of a receive inside the 
# ** onAlarm, which would have given me more control on the recovery test.
CRASHPOINTS=4
######

# custom properties
FIRST_WAIT_TIME=6
SECOND_WAIT_TIME=6
THIRD_WAIT_TIME=1

# debug settings
DEBUG=false
DEBUG_PORT=10001
SUSPEND_CRASH_ONLY=false

# developmental flags, a value of yes will skip persistence and just try to run 
# the recover test runs
NO_PERSISTENCE_RUN=no