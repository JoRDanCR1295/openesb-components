#Information used to construct the input message and make a call to the engine.
# service and endpoint values are from the jbi.xml's connection portion.
SERVICE={http://enterprise.netbeans.org/bpel/TestScopeProj/DefaultCompensation}InboundPL
ENDPOINT=InboundPTRole_myRole

OPERATION=InboundOper
IP_MESG_TYPE={http://j2ee.netbeans.org/wsdl/ScopeInterface}InputMsg
OP_MESG_TYPE=
######

#Input file that will have the input message that will instantiate the BPEL instance
INPUT=bpels/compensation/defaultcompensation/input/input.xml

#Output file that will be obatined at the end of the BPEL, most likely 
# due to the one-way invoke at the end of the BPEL.
OUTPUT=bpels/compensation/defaultcompensation/output/output.xml
DBSTEPS=InboundOper.out
######

#Class and methods that help the simultor drive the testing and recovery. 
# Custom functionality can be acheived by user defined classes and methods
CLASS=com.sun.jbi.engine.bpel.jbiadaptor.test.persistence.UtilityClass
METHOD=initiateBPInstance
CHANNEL_METHOD=associateCompensationEngineChannel
RECOVERY_METHOD=recover
######

# Recovery related properties
# This property hints at the stage of recovery development for the specific 
# feature being tested.  If commented out, recovery will not be tested.
#RECOVERY=In Development
# Specify a single, comma-delimited or a range (e.g 1-4). If unspecified, then by 
# default, recovery will be tested for all possible CRASHPOINTS (see the .out files) 
#CRASHPOINTS=
######

# custom properties
#WAIT_TIME_IN_BPEL=60

# debug settings
DEBUG=false
DEBUG_PORT=10001
SUSPEND=false
#SUSPEND_CRASH_ONLY=true

# developmental flags, a value of yes will skip persistence and just try to run 
# the recover test runs
#NO_PERSISTENCE_RUN=yes

