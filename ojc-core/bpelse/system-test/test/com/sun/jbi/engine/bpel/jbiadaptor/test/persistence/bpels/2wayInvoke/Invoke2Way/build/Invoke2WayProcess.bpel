<?xml version="1.0" encoding="UTF-8"?>
<process 
    name="Invoke2WayProcess" 
    targetNamespace="http://enterprise.netbeans.org/bpel/Invoke2WayProcess"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:wsdlNS="http://enterprise.netbeans.org/bpel/Invoke2WayProcess" xmlns:ns1="http://localhost/Invoke2Way/Invoke2Way">
    <import location="Invoke2Way.wsdl" importType="http://schemas.xmlsoap.org/wsdl/" namespace="http://localhost/Invoke2Way/Invoke2Way"/>
    <partnerLinks>
        <partnerLink name="PartnerLink3" partnerLinkType="ns1:partnerlinktype1" partnerRole="partnerlinktyperole1"/>
        <partnerLink name="PartnerLink1" partnerLinkType="ns1:twoWayPLinkType" partnerRole="myRole"/>
        <partnerLink name="PartnerLink2" partnerLinkType="ns1:oneWayPLinkType" myRole="myRole"/>
    </partnerLinks>
    <variables>
        <variable name="CallbackIn1" messageType="ns1:Invoke1WayResponse"/>
        <variable name="Invoke2WayOperationOut1" messageType="ns1:Invoke2WayResponse"/>
        <variable name="Invoke2WayOperationIn1" messageType="ns1:Invoke2WayRequest"/>
        <variable name="OneWayOperIn1" messageType="ns1:Invoke1WayRequest"/>
    </variables>
    <sequence>
        <receive name="Receive1" partnerLink="PartnerLink2" operation="oneWayOper" portType="ns1:Invoke1WayRequestPortType" variable="OneWayOperIn1" createInstance="yes"/>
        <assign name="Assign1">
            <copy>
            <from>concat($OneWayOperIn1.requestMsgPart, '  Before 2way invoke  ')</from><to part="requestMsgPart" variable="Invoke2WayOperationIn1"/>
            </copy>
        </assign>
        <invoke name="Invoke1" partnerLink="PartnerLink1" operation="Invoke2WayOperation" portType="ns1:Invoke2WayPortType" inputVariable="Invoke2WayOperationIn1" outputVariable="Invoke2WayOperationOut1"/>
        <assign name="Assign2">
            <copy>
            <from>concat($Invoke2WayOperationOut1.responseMsgPart, '  after 2 way invoke  ')</from><to part="responseMsgPart" variable="CallbackIn1"/>
            </copy>
        </assign>
        <invoke name="Invoke2" partnerLink="PartnerLink3" operation="callback" portType="ns1:Invoke1WayCallBackPortType" inputVariable="CallbackIn1"/>
    </sequence>
   
</process>
