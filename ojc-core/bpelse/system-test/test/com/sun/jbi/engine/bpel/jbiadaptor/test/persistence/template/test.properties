#Information used to construct the input message and make a call to the engine.
# service and endpoint values are from the jbi.xml's connection portion.
SERVICE={TO_BE_FILLED_BY_USER_namespace}TO_BE_FILLED_BY_USER_servicename
ENDPOINT=TO_BE_FILLED_BY_USER_namespace_endpointname

OPERATION=waitOperation
IP_MESG_TYPE={TO_BE_FILLED_BY_USER_namespace}TO_BE_FILLED_BY_USER_IP_MESG_TYPE
OP_MESG_TYPE=
######

#Input file that will have the input message that will instantiate the BPEL instance
INPUT=bpels/simpleWait/input/input.xml

#Output file that will be obatined at the end of the BPEL, most likely 
# due to the one-way invoke at the end of the BPEL.
OUTPUT=bpels/simpleWait/output/output.xml
DBSTEPS=test.out
######

#Class and methods that help the simultor drive the testing and recovery. 
# Custom functionality can be acheived by user defined classes and methods
CLASS=com.sun.jbi.engine.bpel.jbiadaptor.test.persistence.UtilityClass
METHOD=initiateBPInstance
CHANNEL_METHOD=associateInvokeChannel
RECOVERY_METHOD=recover
######

#Recovery related. Recovery property hints at the stage of recovery development 
# for the specific feature being test
#RECOVERY=In Development
CRASHPOINTS=3
MIN_CRASHPOINT=3
######

# custom properties
#WAIT_TIME_IN_BPEL=60
#INVOKE_2WAY_RESPONSE=ns1:Invoke2WayResponse

# debug settings
DEBUG=false
DEBUG_PORT=10001
SUSPEND_CRASH_ONLY=false

# developmental flags, a value of yes will skip persistence and just try to run 
# the recover test runs
NO_PERSISTENCE_RUN=no