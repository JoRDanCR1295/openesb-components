<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xalan="http://xml.apache.org/xslt" xmlns:ejbjarproject2="http://www.netbeans.org/ns/j2ee-ejbjarproject/2" xmlns:jaxws="http://www.netbeans.org/ns/jax-ws/1">
    <!--
                ===================
                JAX-WS WSGEN SECTION
                ===================
            -->
    <!--
                ===================
                JAX-WS WSIMPORT SECTION
                ===================
            -->
    <target name="wsimport-init" depends="init">
        <mkdir dir="${build.generated.dir}/wsimport/client"/>
        <mkdir dir="${build.generated.dir}/wsimport/service"/>
        <mkdir dir="${build.generated.dir}/wsimport/binaries"/>
        <mkdir dir="${classes.dir}"/>
        <taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
            <classpath path="${j2ee.platform.wsimport.classpath}"/>
        </taskdef>
    </target>
    <target name="wsimport-client-check-SmtpInbound" depends="wsimport-init">
        <condition property="wsimport-client-SmtpInbound.notRequired">
            <available file="${build.generated.dir}/wsimport/client/org/netbeans/j2ee/xsd/tableschema" type="dir"/>
        </condition>
    </target>
    <target name="wsimport-client-SmtpInbound" depends="wsimport-init,wsimport-client-check-SmtpInbound" unless="wsimport-client-SmtpInbound.notRequired">
        <wsimport xendorsed="true" sourcedestdir="${build.generated.dir}/wsimport/client" extension="true" package="org.netbeans.j2ee.xsd.tableschema" destdir="${build.generated.dir}/wsimport/binaries" wsdl="${basedir}/${meta.inf}/xml-resources/web-service-references/SmtpInbound/wsdl/SmtpInbound.wsdl" wsdlLocation="file:/D:/NetbeansProjects/SMTPOutbound/src/java/SmtpInbound.wsdl" catalog="catalog.xml"/>
        <copy todir="${classes.dir}">
            <fileset dir="${build.generated.dir}/wsimport/binaries" includes="**/*.xml"/>
        </copy>
    </target>
    <target name="wsimport-client-clean-SmtpInbound" depends="-init-project">
        <delete dir="${build.generated.dir}/wsimport/client/org/netbeans/j2ee/xsd/tableschema"/>
    </target>
    <target name="wsimport-service-check-NewWebServiceFromWSDL" depends="wsimport-init">
        <condition property="wsimport-service-NewWebServiceFromWSDL.notRequired">
            <available file="${build.generated.dir}/wsimport/service/org/netbeans/j2ee/wsdl/smtpinboundtest" type="dir"/>
        </condition>
    </target>
    <target name="wsimport-service-NewWebServiceFromWSDL" depends="wsimport-init,wsimport-service-check-NewWebServiceFromWSDL" unless="wsimport-service-NewWebServiceFromWSDL.notRequired">
        <wsimport xendorsed="true" sourcedestdir="${build.generated.dir}/wsimport/service" extension="true" verbose="true" destdir="${classes.dir}" wsdl="${basedir}/${meta.inf}/xml-resources/web-services/NewWebServiceFromWSDL/wsdl/SmtpInboundTest.wsdl" catalog="catalog.xml"/>
        <copy todir="${basedir}/${meta.inf}/wsdl/NewWebServiceFromWSDL">
            <fileset dir="${basedir}/${meta.inf}/xml-resources/web-services/NewWebServiceFromWSDL/wsdl/"/>
        </copy>
    </target>
    <target name="wsimport-service-clean-NewWebServiceFromWSDL" depends="-init-project">
        <delete dir="${build.generated.dir}/wsimport/service/org/netbeans/j2ee/wsdl/smtpinboundtest"/>
    </target>
    <target name="wsimport-client-generate" depends="wsimport-client-SmtpInbound"/>
    <target name="wsimport-client-compile" depends="wsimport-client-generate">
        <ejbjarproject2:javac srcdir="${build.generated.dir}/wsimport/client" classpath="${j2ee.platform.wsimport.classpath}:${javac.classpath}" destdir="${classes.dir}" javac.compilerargs.jaxws="-Djava.endorsed.dirs='${jaxws.endorsed.dir}'"/>
    </target>
    <target name="wsimport-service-generate" depends="wsimport-service-NewWebServiceFromWSDL"/>
    <target name="wsimport-service-compile" depends="wsimport-service-generate">
        <ejbjarproject2:javac srcdir="${build.generated.dir}/wsimport/service" classpath="${j2ee.platform.wsimport.classpath}:${javac.classpath}" destdir="${classes.dir}" javac.compilerargs.jaxws="-Djava.endorsed.dirs='${jaxws.endorsed.dir}'"/>
    </target>
</project>
