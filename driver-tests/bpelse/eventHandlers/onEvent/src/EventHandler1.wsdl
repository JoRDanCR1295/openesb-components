<definitions targetNamespace="EventHandler1"
    name="EventHandler1"
    xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop"
    xmlns:tns="EventHandler1"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    xmlns:slnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
             
    <plnk:partnerLinkType name="EventHandler1NormalServiceLinkType"
        xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
        <plnk:role name="Server"
        portType="tns:NormalOperationPortType"></plnk:role>
    </plnk:partnerLinkType>
    
    <plnk:partnerLinkType name="EventHandler1NormalServiceLinkType2"
        xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
        <plnk:role name="Server"
        portType="tns:NormalOperationPortType2"></plnk:role>
    </plnk:partnerLinkType>
    
    <plnk:partnerLinkType name="EventHandler1OnEventOnScopeServiceLinkType"
        xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
        <plnk:role name="Server"
        portType="tns:OnEventOnScope1PortType"></plnk:role>
    </plnk:partnerLinkType>
    
  
    <vprop:property name="property"
    type="xsd:string"/>
    <vprop:propertyAlias propertyName="tns:property"
        messageType="tns:OnEventMessage"
        part="EventHandler1Part2">
        <vprop:query>/EventHandler1Element2/string2</vprop:query>
    </vprop:propertyAlias>
    <vprop:propertyAlias propertyName="tns:property"
        messageType="tns:EventHandler1Message"
        part="EventHandler1Part">
        <vprop:query>/EventHandler1Element/string</vprop:query>
    </vprop:propertyAlias>
    <vprop:propertyAlias propertyName="tns:property"
        messageType="tns:EventHandler1Message2"
        part="EventHandler1Part">
        <vprop:query>/EventHandler1Element/string</vprop:query>
    </vprop:propertyAlias>
    
    
    
    
    <vprop:property type="xsd:string"
    name="Invoke1childProp"></vprop:property>
    <vprop:propertyAlias part="Invoke1childPart"
        propertyName="tns:Invoke1childProp"
        messageType="tns:Invoke1childMessage">
        <vprop:query>string</vprop:query>
    </vprop:propertyAlias>    
    
    <types>
        <xsd:schema targetNamespace="EventHandler1"
            attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop"
            xmlns:tns="EventHandler1"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns="http://schemas.xmlsoap.org/wsdl/"
            xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
            xmlns:slnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
            
            <xsd:element type="tns:EventHandler1Type"
            name="EventHandler1Element"></xsd:element>
                         
            <xsd:element type="tns:EventHandler1Type2"            
            name="EventHandler1Element2"></xsd:element>   
            
            <xsd:element type="tns:Invoke1childType"            
            name="Invoke1childElement"></xsd:element>
            
            <xsd:element name="item">
	                    <xsd:complexType>
	                        <xsd:sequence>
	                            <xsd:element name="value" type="xsd:decimal"/>
	                        </xsd:sequence>
	                    </xsd:complexType>
            </xsd:element>
            
            
            <xsd:complexType name="EventHandler1Type">
                <xsd:sequence>
                    <xsd:element type="xsd:string"
                    name="string"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="Invoke1childType">
                <xsd:sequence>
                    <xsd:element type="xsd:string"
                    name="string"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>            
            
            <xsd:complexType name="EventHandler1Type2">
                <xsd:sequence>
                    <xsd:element type="xsd:string"
                    name="string2"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>            
        </xsd:schema>
    </types>
    
    <message name="EventHandler1Message">
        <part name="EventHandler1Part"
        element="tns:EventHandler1Element"></part>
    </message>
    
    <message name="EventHandler1Message2">
        <part name="EventHandler1Part"
        element="tns:EventHandler1Element"></part>
    </message>
    
    <message name="EventHandler1Message3">
        <part name="EventHandler3Part"
        element="tns:item"></part>
    </message>    
    
    
    <message name="OnEventMessage">
        <part name="EventHandler1Part2"
        element="tns:EventHandler1Element2"></part>
    </message>
    
    <message name="Invoke1childMessage">
        <part name="Invoke1childPart"
        type="tns:Invoke1childType"></part>
    </message>
    
    
    <portType name="NormalOperationPortType">
        <operation name="NormalOperation">
            <input message="tns:EventHandler1Message"></input>
            <output message="tns:EventHandler1Message"></output>
        </operation>
    </portType>
    
    <portType name="NormalOperationPortType2">
        <operation name="NormalOperation2">
            <input message="tns:EventHandler1Message2"></input>
            <output message="tns:EventHandler1Message2"></output>
        </operation>
    </portType>
   
    <portType name="OnEventOnScope1PortType">
        <operation name="OnEventOnScope1">
            <input message="tns:OnEventMessage"></input>
            <output message="tns:OnEventMessage"></output>
        </operation>
    </portType>
    
   
    <binding name="NormalOperationPortTypeBinding"
        type="tns:NormalOperationPortType">
        <soap:binding style="document"
        transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="NormalOperation">
            <soap:operation soapAction="NormalOperation"/>
            <input>
                <soap:body parts="EventHandler1Part"
                use="literal"/>
            </input>
            <output>
                <soap:body parts="EventHandler1Part"
                use="literal"/>
            </output>
        </operation>
    </binding>
    
    <binding name="NormalOperationPortTypeBinding2"
        type="tns:NormalOperationPortType2">
        <soap:binding style="document"
        transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="NormalOperation2">
            <soap:operation soapAction="NormalOperation2"/>
            <input>
                <soap:body parts="EventHandler1Part"
                use="literal"/>
            </input>
            <output>
                <soap:body parts="EventHandler1Part"
                use="literal"/>
            </output>            
        </operation>
    </binding>    
    
   
    <binding name="OnEventOnScope1PortTypeBinding"
        type="tns:OnEventOnScope1PortType">
        <soap:binding style="document"
        transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="OnEventOnScope1">
            <soap:operation soapAction="OnEventOnScope1"/>
            <input>
                <soap:body parts="EventHandler1Part2"
                use="literal"/>
            </input>
            <output>
                <soap:body parts="EventHandler1Part2"
                use="literal"/>
            </output>                  
        </operation>
    </binding>
    
    <service name="EventHandler1Service">
        <port name="EventHandlerNormalPort"
            binding="tns:NormalOperationPortTypeBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/service/EventHandlerNormal1Service"/>
        </port>
        <port name="EventHandlerNormalPort2"
            binding="tns:NormalOperationPortTypeBinding2">
            <soap:address location="http://localhost:${HttpDefaultPort}/service/EventHandlerNormal1Service2"/>
        </port>
        <port name="OnEventOnScope1Port"
            binding="tns:OnEventOnScope1PortTypeBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/service/EventHandler1OnEventOnScope1Service"/>
        </port>
    </service>
</definitions>
