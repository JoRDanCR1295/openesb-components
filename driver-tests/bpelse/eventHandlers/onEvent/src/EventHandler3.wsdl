<definitions targetNamespace="EventHandler3"
    name="EventHandler3"
    xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop"
    xmlns:tns="EventHandler3"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    xmlns:slnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
             
    <plnk:partnerLinkType name="EventHandler3NormalServiceLinkType"
        xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
        <plnk:role name="Server"
        portType="tns:NormalOperation3PortType"></plnk:role>
    </plnk:partnerLinkType>
    
    <plnk:partnerLinkType name="EventHandler3NormalServiceLinkType2"
        xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
        <plnk:role name="Server"
        portType="tns:NormalOperation3PortType2"></plnk:role>
    </plnk:partnerLinkType>
    
    <plnk:partnerLinkType name="EventHandler3OnEventonProcessServiceLinkType"
    xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
    <plnk:role name="Server"
    portType="tns:OnEventOnProcess3PortType"></plnk:role>
    </plnk:partnerLinkType>
 
    <vprop:property name="property"
    type="xsd:string"/>
    <vprop:propertyAlias propertyName="tns:property"
        messageType="tns:EventHandler3Message"
        part="EventHandler3Part">
        <vprop:query>/EventHandler3Element/string</vprop:query>
    </vprop:propertyAlias>        
	<vprop:propertyAlias propertyName="tns:property"
        messageType="tns:EventHandler3Message2"
        part="EventHandler3Part">
        <vprop:query>/EventHandler3Element/string</vprop:query>
    </vprop:propertyAlias>
    
    <vprop:propertyAlias propertyName="tns:property"
        messageType="tns:OnEventMessage"
        part="EventHandler3Part2">
        <vprop:query>/EventHandler3Element2/string2</vprop:query>
    </vprop:propertyAlias>


    <types>
        <xsd:schema targetNamespace="EventHandler3"
            attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            xmlns:vprop="http://docs.oasis-open.org/wsbpel/2.0/varprop"
            xmlns:tns="EventHandler3"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns="http://schemas.xmlsoap.org/wsdl/"
            xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
            xmlns:slnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype">
            
            <xsd:element type="tns:EventHandler3Type"
            name="EventHandler3Element"></xsd:element>
                         
            <xsd:element type="tns:EventHandler3Type2"            
            name="EventHandler3Element2"></xsd:element>   
            
            <xsd:element type="tns:Invoke1childType"            
            name="Invoke1childElement"></xsd:element>
            
            <xsd:element name="item">
	                    <xsd:complexType>
	                        <xsd:sequence>
	                            <xsd:element name="value" type="xsd:decimal"/>
	                        </xsd:sequence>
	                    </xsd:complexType>
            </xsd:element>
            
            
            <xsd:complexType name="EventHandler3Type">
                <xsd:sequence>
                    <xsd:element type="xsd:string"
                    name="string"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            
            <xsd:complexType name="Invoke1childType">
                <xsd:sequence>
                    <xsd:element type="xsd:string"
                    name="string"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>            
            
            <xsd:complexType name="EventHandler3Type2">
                <xsd:sequence>
                    <xsd:element type="xsd:string"
                    name="string2"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>
            <xsd:complexType name="DriverMessageType">
                <xsd:sequence>
                    <xsd:element name="FirstMessage" type="xsd:string"></xsd:element>
                    <xsd:element name="CorrelatedMessage" type="xsd:string"></xsd:element>
                    <xsd:element name="OnEventMessage" type="xsd:string"></xsd:element>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:schema>
    </types>
    
    <message name="EventHandler3Message">
        <part name="EventHandler3Part"
        element="tns:EventHandler3Element"></part>
    </message>
    
    
    <message name="EventHandler3Message2">
        <part name="EventHandler3Part" element="tns:EventHandler3Element"></part>
    </message>
    
    <message name="OnEventMessage">
        <part name="EventHandler3Part2"
        element="tns:EventHandler3Element2"></part>
    </message>
    <message name="DriverMessage">
        <part name="part1" type="tns:DriverMessageType"/>
    </message>
    <portType name="NormalOperation3PortType">
        <operation name="NormalOperation">
            <input message="tns:EventHandler3Message"></input>
            <output message="tns:EventHandler3Message"></output>
        </operation>
    </portType>
    
    <portType name="NormalOperation3PortType2">
        <operation name="NormalOperation2">
            <input message="tns:EventHandler3Message2"></input>
            <output message="tns:EventHandler3Message2"></output>
        </operation>
    </portType>

    <portType name="OnEventOnProcess3PortType">
        <operation name="OnEventOnProcess3">
            <input message="tns:OnEventMessage"></input>
            <output message="tns:OnEventMessage"></output>
        </operation>
    </portType>
    <portType name="DriverPortType">
        <operation name="EventHandler3Operation">
            <input name="input1" message="tns:DriverMessage"/>
            <output name="output1" message="tns:DriverMessage"/>
        </operation>
    </portType>
    <binding name="NormalOperation3PortTypeBinding"
        type="tns:NormalOperation3PortType">
        <soap:binding style="document"
        transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="NormalOperation">
            <soap:operation soapAction="NormalOperation"/>
            <input>
                <soap:body parts="EventHandler3Part"
                use="literal"/>
            </input>
            <output>
                <soap:body parts="EventHandler3Part"
                use="literal"/>
            </output>
        </operation>
    </binding>
    
    <binding name="NormalOperation3PortTypeBinding2"
        type="tns:NormalOperation3PortType2">
        <soap:binding style="document"
        transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="NormalOperation2">
            <soap:operation soapAction="NormalOperation2"/>
            <input>
                <soap:body parts="EventHandler3Part"
                use="literal"/>
            </input>
            <output>
                <soap:body parts="EventHandler3Part"
                use="literal"/>
            </output>            
        </operation>
    </binding>    
    
    <binding name="OnEventOnProcess3PortTypeBinding"
        type="tns:OnEventOnProcess3PortType">
        <soap:binding style="document"
        transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="OnEventOnProcess3">
            <soap:operation soapAction="OnEventOnProcess3"/>
            <input>
                <soap:body parts="EventHandler3Part2"
                use="literal"/>
            </input>
            <output>
                <soap:body parts="EventHandler3Part2"
                use="literal"/>
            </output>            
        </operation>
    </binding>
    <binding name="DriverPortTypeBinding" type="tns:DriverPortType">
        <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="EventHandler3Operation">
            <soap:operation/>
            <input name="input1">
                <soap:body use="literal" namespace="EventHandler3"/>
            </input>
            <output name="output1">
                <soap:body use="literal" namespace="EventHandler3"/>
            </output>
        </operation>
    </binding>
    <service name="EventHandler3Service">
        <port name="EventHandler3NormalPort"
            binding="tns:NormalOperation3PortTypeBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/service/EventHandler3Normal1Service"/>
        </port>
        <port name="EventHandler3NormalPort2"
            binding="tns:NormalOperation3PortTypeBinding2">
            <soap:address location="http://localhost:${HttpDefaultPort}/service/EventHandler3Normal1Service2"/>
        </port>
        <port name="OnEventOnProcess3Port"
            binding="tns:OnEventOnProcess3PortTypeBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/service/EventHandler3OnEventOnProcess3Service"/>
        </port>
        <port name="DriverPortTypeBindingPort" binding="tns:DriverPortTypeBinding">
            <soap:address location="http://localhost:${HttpDefaultPort}/EventHandler3Service/DriverPortTypeBindingPort"/>
        </port>
    </service>
    <slnk:partnerLinkType name="EventHandler3">
        <!-- A partner link type is automatically generated when a new port type is added. Partner link types are used by BPEL processes. 
In a BPEL process, a partner link represents the interaction between the BPEL process and a partner service. Each partner link is associated with a partner link type.
A partner link type characterizes the conversational relationship between two services. The partner link type can have one or two roles.-->
        <slnk:role name="DriverPortTypeRole" portType="tns:DriverPortType"/>
    </slnk:partnerLinkType>
    <slnk:partnerLinkType name="testProxyLT">
        <slnk:role name="testProxy" portType="tns:DriverPortType"/>
    </slnk:partnerLinkType>
</definitions>
