<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2007, Sun Microsystems, Inc. All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.

  * Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  * Neither the name of Sun Microsystems, Inc. nor the names of its contributors
    may be used to endorse or promote products derived from this software without
    specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
  THE POSSIBILITY OF SUCH DAMAGE.
-->
<process name="Synchronous"
         targetNamespace="http://enterprise.netbeans.org/bpel/Synchronous/Synchronous"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
         xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor"
         xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
         xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling"
         xmlns:wsdlNS="http://enterprise.netbeans.org/bpel/Synchronous/Synchronous"
         xmlns:ns1="http://localhost/Synchronous/Synchronous"
         xmlns:ns2="http://xml.netbeans.org/schema/Synchronous" xmlns:sunxd="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/DataHandling">
    <documentation>
        The synchronous BPEL process illustrates a simple synchronous flow. The process receives an input message and sends it back synchronously. A client starts the synchronous process by invoking a request-response operation. After invoking a synchronous process, the client is blocked until the process finishes and returns the result.
    </documentation>
    <import namespace="http://localhost/Synchronous/Synchronous"
            location="Synchronous.wsdl"
            importType="http://schemas.xmlsoap.org/wsdl/"/>
    <partnerLinks>
        <partnerLink
            name="Synchronous"
            partnerLinkType="ns1:partnerlinktype1"
            myRole="partnerlinktyperole1">
            <documentation>
                This partner link represents the client who sends an input message to the process and receives the response.
            </documentation>
        </partnerLink>
    </partnerLinks>
    <variables>
        <variable name="outputVar" messageType="ns1:responseMessage">
            <documentation>Output variable.</documentation>
            <sxed:editor>
                <sxed:predicate path="$outputVar.expensiveItems/ns2:item[$expItemCount]" source="to"/>
            </sxed:editor>
        </variable>
        <variable name="inputVar" messageType="ns1:requestMessage">
            <documentation>Input variable.</documentation>
            <sxed:editor>
                <sxed:predicate path="$inputVar.po/ns2:item[$ForEach1Counter]" source="from"/>
            </sxed:editor>
        </variable>
        <variable name="expItemCount" type="xsd:int"/>
    </variables>
    <sequence>
        <documentation>
            The sequence includes several activities which are executed in lexical order.
        </documentation>
        <receive
            name="start"
            partnerLink="Synchronous"
            operation="operation1"
            portType="ns1:portType1"
            variable="inputVar"
            createInstance="yes">
            <documentation>
                The Receive activity makes the process to wait for the incoming message to arrive.
            </documentation>
        </receive>
        <if name="If1">
            <condition>$inputVar.po/@id = 100</condition>
            <sequence name="Sequence1">
                <assign name="Assign1">
                    <copy ignoreMissingFromData="yes">
                        <from>0</from>
                        <to variable="expItemCount"/>
                    </copy>
                </assign>
                <forEach name="ForEach1" parallel="no" counterName="ForEach1Counter">
                    <!--sxt:trace>
                            <sxt:log level="info" location="onStart">
                                <bpws:from>'JXPath'</bpws:from>
                            </sxt:log>
                    </sxt:trace-->
                    <startCounterValue>1</startCounterValue>
                    <finalCounterValue>count($inputVar.po/ns2:item)</finalCounterValue>
                    <scope name="Scope1">
                        <if name="If2">
                            <condition>$inputVar.po/ns2:item[$ForEach1Counter]/ns2:qty &gt; 5 and $inputVar.po/ns2:item[$ForEach1Counter]/ns2:price &gt; 99
                                
                            </condition>
                            <sequence>
                                <assign name="Assign2">
                                    <copy>
                                        <from>$expItemCount + 1</from>
                                        <to variable="expItemCount"/>
                                    </copy>
                                </assign>
                                <assign name="Assign3">
                                    <copy>
                                        <from>$inputVar.po/ns2:item[$ForEach1Counter]
                                            <sxed:editor>
                                                <sxed:predicate path="$inputVar.po/ns2:item[$ForEach1Counter]" source="from"/>
                                            </sxed:editor>
                                        </from>
                                        <to>$outputVar.expensiveItems/ns2:item[$expItemCount]
                                            <sxed:editor>
                                                <sxed:predicate path="$outputVar.expensiveItems/ns2:item[$expItemCount]" source="to"/>
                                            </sxed:editor>
                                        </to>
                                    </copy>
                                </assign>
                            </sequence>
                        </if>
                    </scope>
                </forEach>
            </sequence>
            <elseif>
                <condition>$inputVar.po/@id = 200</condition>
                <sequence name="Sequence2">
                    <assign name="Assign4">
                        <!--sxt:trace>
                            <sxt:log level="info" location="onStart">
                                <bpws:from>'Javascript Assign'</bpws:from>
                            </sxt:log>
                        </sxt:trace-->
                        <extensionAssignOperation><sunxd:Expression xmlns:sunxd="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/DataHandling"
                            expressionLanguage="urn:sun:bpel:JavaScript"
                            inputVars="order=inputVar.po"
                            outputVars="outputVar.expensiveItems=expensiveItems">
                            <![CDATA[var order1 = new XML(order);
default xml namespace = "http://xml.netbeans.org/schema/Synchronous";

var expensiveItems = <items/>;
expensiveItems.item = 0;
var rIndex=0;

for each (item in order1.item) {
    if ((item.qty > 5) & (item.price > 99)) {
        expensiveItems.item[rIndex++] = item;
    }
}]]>
                            </sunxd:Expression></extensionAssignOperation>
                    </assign>
                </sequence>
            </elseif>
            <else>
                <sequence name="Sequence3">
                    <assign name="Assign5">
                        <!--sxt:trace>
                            <sxt:log level="info" location="onStart">
                                <bpws:from>'XSLT Assign'</bpws:from>
                            </sxt:log>
                        </sxt:trace-->
                        <copy>
                            <from>bpws:doXslTransform('urn:stylesheets:ExpensiveItems.xsl', $inputVar.po)</from>
                            <to variable="outputVar" part="expensiveItems"/>
                        </copy>
                    </assign>
                </sequence>
            </else>
        </if>
        <reply
            name="end"
            partnerLink="Synchronous"
            operation="operation1"
            portType="ns1:portType1"
            variable="outputVar">
            <documentation>
                The Reply activity returns a message from the process to the  partner which initiated the communication.
            </documentation>
        </reply>
    </sequence>
</process>
