<?xml version="1.0" encoding="UTF-8"?>
<definitions name="SayHelloEncoderService" targetNamespace="http://j2ee.netbeans.org/wsdl/SayHelloEncoderService"
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://j2ee.netbeans.org/wsdl/SayHelloEncoderService" xmlns:ns="http://xml.netbeans.org/schema/Greeting" xmlns:plnk="http://docs.oasis-open.org/wsbpel/2.0/plnktype" xmlns:file="http://schemas.sun.com/jbi/wsdl-extensions/file/">
    <types>
        <xsd:schema targetNamespace="http://j2ee.netbeans.org/wsdl/SayHelloEncoderService">
            <xsd:import namespace="http://xml.netbeans.org/schema/Greeting" schemaLocation="Greeting.xsd"/>
        </xsd:schema>
    </types>
    <message name="SayHelloEncoderServiceOperationRequest">
        <part name="part1" element="ns:root"/>
    </message>
    <message name="SayHelloEncoderServiceOperationReply">
        <part name="part1" element="ns:root"/>
    </message>
    <portType name="SayHelloEncoderServicePortType">
        <wsdl:operation name="SayHelloEncoderServiceOperation">
            <wsdl:input name="input1" message="tns:SayHelloEncoderServiceOperationRequest"/>
            <wsdl:output name="output1" message="tns:SayHelloEncoderServiceOperationReply"/>
        </wsdl:operation>
    </portType>
    <binding name="SayHelloEncoderServiceBinding" type="tns:SayHelloEncoderServicePortType">
        <file:binding/>
        <wsdl:operation name="SayHelloEncoderServiceOperation">
            <file:operation/>
            <wsdl:input name="input1">
                <file:message use="encoded" fileName="hello%d.txt" pollingInterval="1000" encodingStyle="customencoder-1.0" part="part1" fileNameIsPattern="true"/>
            </wsdl:input>
            <wsdl:output name="output1">
                <file:message use="encoded" fileName="reply%d.txt" encodingStyle="customencoder-1.0" part="part1" fileNameIsPattern="true"/>
            </wsdl:output>
        </wsdl:operation>
    </binding>
    <service name="SayHelloEncoderServiceService">
        <wsdl:port name="SayHelloEncoderServicePort" binding="tns:SayHelloEncoderServiceBinding">
            <file:address fileDirectory="${ojc-root}/driver-tests/ftpbc/FTPBCTests/HelloDukeUsingEncoderCompApp/test/HelloDukeUsingEncoderTest/in_out"/>
        </wsdl:port>
    </service>
    <plnk:partnerLinkType name="SayHelloEncoderService1">
        <!-- A partner link type is automatically generated when a new port type is added. Partner link types are used by BPEL processes. 
In a BPEL process, a partner link represents the interaction between the BPEL process and a partner service. Each partner link is associated with a partner link type.
A partner link type characterizes the conversational relationship between two services. The partner link type can have one or two roles.-->
        <plnk:role name="SayHelloEncoderServicePortTypeRole" portType="tns:SayHelloEncoderServicePortType"/>
    </plnk:partnerLinkType>
</definitions>
