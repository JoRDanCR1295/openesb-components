/*
 * @(#)RulesEnginePanel.java        $Revision: 1.1 $ $Date: 2008/11/12 08:26:24 $
 * 
 * Copyright (c) 2008 Milan Fort (http://www.milanfort.com/). All rights reserved.
 * 
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the "License"). You may not use this file except
 * in compliance with the License.
 * 
 * You can obtain a copy of the license at http://www.sun.com/cddl/cddl.html.
 * See the License for the specific language governing permissions and limitations
 * under the License.
 */

package org.openesb.components.rules4jbi.netbeans.project.customizer;

import javax.swing.DefaultComboBoxModel;

import org.openide.nodes.Node;

/**
 *
 * @author Milan Fort (http://www.milanfort.com/)
 * @version $Revision: 1.1 $ $Date: 2008/11/12 08:26:24 $
 * 
 * @since 0.1
 */
class RulesEnginePanel extends javax.swing.JPanel {
    
    private static final long serialVersionUID = -2449366228226639442L;
    
    private final CustomizerController controller;
    
    /** Creates new form RuleEnginePanel */
    RulesEnginePanel(CustomizerController controller) {
        this.controller = controller;
        
        initComponents();
        
        librariesList.setCellRenderer(new NodeRenderer());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uriLabel = new javax.swing.JLabel();
        classLabel = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        fileTextField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        uriComboBox = new javax.swing.JComboBox();
        classComboBox = new javax.swing.JComboBox();
        librariesLabel = new javax.swing.JLabel();
        librariesScrollPane = new javax.swing.JScrollPane();
        librariesList = new javax.swing.JList();
        importButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        uriLabel.setLabelFor(uriComboBox);
        uriLabel.setText(org.openide.util.NbBundle.getMessage(RulesEnginePanel.class, "RuleEnginePanel.uriLabel.text")); // NOI18N

        classLabel.setLabelFor(classComboBox);
        classLabel.setText(org.openide.util.NbBundle.getMessage(RulesEnginePanel.class, "RuleEnginePanel.classLabel.text")); // NOI18N

        fileLabel.setLabelFor(fileTextField);
        fileLabel.setText(org.openide.util.NbBundle.getMessage(RulesEnginePanel.class, "RuleEnginePanel.fileLabel.text")); // NOI18N

        fileTextField.setEditable(false);
        fileTextField.setText(org.openide.util.NbBundle.getMessage(RulesEnginePanel.class, "RuleEnginePanel.fileTextField.text")); // NOI18N
        fileTextField.setFocusable(false);

        browseButton.setText(org.openide.util.NbBundle.getMessage(RulesEnginePanel.class, "RuleEnginePanel.browseButton.text")); // NOI18N
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        uriComboBox.setEditable(true);

        classComboBox.setEditable(true);

        librariesLabel.setText(org.openide.util.NbBundle.getMessage(RulesEnginePanel.class, "RuleEnginePanel.librariesLabel.text")); // NOI18N

        librariesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        librariesScrollPane.setViewportView(librariesList);

        importButton.setText(org.openide.util.NbBundle.getMessage(RulesEnginePanel.class, "RuleEnginePanel.importButton.text")); // NOI18N
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        removeButton.setText(org.openide.util.NbBundle.getMessage(RulesEnginePanel.class, "RuleEnginePanel.removeButton.text")); // NOI18N
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(librariesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(removeButton)
                            .addComponent(importButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uriLabel)
                            .addComponent(classLabel)
                            .addComponent(fileLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(browseButton))
                            .addComponent(uriComboBox, 0, 272, Short.MAX_VALUE)
                            .addComponent(classComboBox, 0, 272, Short.MAX_VALUE)))
                    .addComponent(librariesLabel, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {browseButton, importButton, removeButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uriLabel)
                    .addComponent(uriComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(classLabel)
                    .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLabel)
                    .addComponent(browseButton)
                    .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(librariesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(librariesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(importButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        controller.handleBrowseButtonPressed();
    }//GEN-LAST:event_browseButtonActionPerformed

private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
    controller.handleImportButtonPressed();
    
}//GEN-LAST:event_importButtonActionPerformed

private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
    controller.handleRemoveButtonPressed();
}//GEN-LAST:event_removeButtonActionPerformed
    
    void clearSelectedItems() {
        uriComboBox.setSelectedIndex(-1);
        classComboBox.setSelectedIndex(-1);
    }
    
    void setProviderURIs(String[] uris) {
        uriComboBox.setModel(new DefaultComboBoxModel(uris));
    }

    void setProviderClassNames(String[] classNames) {
        classComboBox.setModel(new DefaultComboBoxModel(classNames));
    }
    
    String getSelectedProvider() {
        return (String) uriComboBox.getSelectedItem();
    }

    String getSelectedProviderClass() {
        return (String) classComboBox.getSelectedItem();
    }
    
    String getRulesetFileName() {
        return fileTextField.getText();
    }
    
    void selectProvider(String uri) {
        uriComboBox.setSelectedItem(uri);
    }

    void selectProviderClass(String className) {
        classComboBox.setSelectedItem(className);
    }

    void setRulesetFileName(String name) {
        fileTextField.setText(name);
    }
    
    void disableRemoveButton() {
        removeButton.setEnabled(false);
    }
    
    void enableRemoveButton() {
        removeButton.setEnabled(true);
    }
    
    void setLibraries(Node[] libraries) {
        librariesList.setListData(libraries);
    }
    
    void selectFirstLibrary() {
        librariesList.setSelectedIndex(0);
        librariesList.ensureIndexIsVisible(0);
    }
    
    Node getSelectedLibrary() {
        return (Node) librariesList.getSelectedValue();
    }

    void selectLibrary(Node library) {
        librariesList.setSelectedValue(library, true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JComboBox classComboBox;
    private javax.swing.JLabel classLabel;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JButton importButton;
    private javax.swing.JLabel librariesLabel;
    private javax.swing.JList librariesList;
    private javax.swing.JScrollPane librariesScrollPane;
    private javax.swing.JButton removeButton;
    private javax.swing.JComboBox uriComboBox;
    private javax.swing.JLabel uriLabel;
    // End of variables declaration//GEN-END:variables
    
}
