/*
 * @(#)GeneralPanel.java        $Revision: 1.1.1.1 $ $Date: 2008/06/30 08:53:20 $
 * 
 * Copyright (c) 2008 Milan Fort (http://www.milanfort.com/). All rights reserved.
 * 
 * The contents of this file are subject to the terms of the Common Development
 * and Distribution License (the "License"). You may not use this file except
 * in compliance with the License.
 * 
 * You can obtain a copy of the license at http://www.sun.com/cddl/cddl.html.
 * See the License for the specific language governing permissions and limitations
 * under the License.
 */

package org.openesb.components.rules4jbi.netbeans.project.customizer;

/**
 *
 * @author Milan Fort (http://www.milanfort.com/)
 * @version $Revision: 1.1.1.1 $ $Date: 2008/06/30 08:53:20 $
 * 
 * @since 0.1
 */
class GeneralPanel extends javax.swing.JPanel {
    
    private static final long serialVersionUID = -2449366228226639442L;
    
    /** Creates new form GeneralPanel */
    GeneralPanel() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        folderLabel = new javax.swing.JLabel();
        folderTextField = new javax.swing.JTextField();
        seTypeLabel = new javax.swing.JLabel();
        seTypeTextField = new javax.swing.JTextField();
        suDescriptionLabel = new javax.swing.JLabel();
        suDescriptionTextField = new javax.swing.JTextField();

        folderLabel.setLabelFor(folderTextField);
        folderLabel.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.folderLabel.text")); // NOI18N

        folderTextField.setEditable(false);
        folderTextField.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.folderTextField.text")); // NOI18N
        folderTextField.setFocusable(false);

        seTypeLabel.setLabelFor(seTypeTextField);
        seTypeLabel.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.seTypeLabel.text")); // NOI18N

        seTypeTextField.setEditable(false);
        seTypeTextField.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.seTypeTextField.text")); // NOI18N
        seTypeTextField.setFocusable(false);

        suDescriptionLabel.setLabelFor(suDescriptionTextField);
        suDescriptionLabel.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.suDescriptionLabel.text")); // NOI18N

        suDescriptionTextField.setText(org.openide.util.NbBundle.getMessage(GeneralPanel.class, "GeneralPanel.suDescriptionTextField.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(folderLabel)
                    .addComponent(seTypeLabel)
                    .addComponent(suDescriptionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seTypeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(folderTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(suDescriptionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(folderLabel)
                    .addComponent(folderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seTypeLabel)
                    .addComponent(seTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suDescriptionLabel)
                    .addComponent(suDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(207, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    void setProjectFolder(String projectFolderName) {
        folderTextField.setText(projectFolderName);
    }
    
    void setServiceEngineType(String serviceEngineType) {
        seTypeTextField.setText(serviceEngineType);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel folderLabel;
    private javax.swing.JTextField folderTextField;
    private javax.swing.JLabel seTypeLabel;
    private javax.swing.JTextField seTypeTextField;
    private javax.swing.JLabel suDescriptionLabel;
    private javax.swing.JTextField suDescriptionTextField;
    // End of variables declaration//GEN-END:variables
    
}
