#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<!--
*** GENERATED FROM project.xml - DO NOT EDIT  ***
***         EDIT ../build.xml INSTEAD         ***

For the purpose of easier reading the script
is divided into following sections:

  - initialization
  - compilation
  - jar
  - execution
  - debugging
  - javadoc
  - junit compilation
  - junit execution
  - junit debugging
  - cleanup

-->
<project name="${artifactId}-impl" default="default" basedir=".." xmlns:jbiproject="http://www.netbeans.org/ns/jbi-component-project/1">
    <import file="jbiadmin-impl.xml"/>
    <target name="default" depends="test,jar,javadoc" description="Build and test whole project."/>
    <!-- 
    ======================
    INITIALIZATION SECTION 
    ======================
    -->
    <target name="-pre-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-init-private" depends="-pre-init">
        <property file="nbproject/private/private.properties"/>
    </target>
    <target name="-init-user" depends="-pre-init,-init-private">
        <property file="${symbol_dollar}{user.properties.file}"/>
        <!-- The two properties below are usually overridden -->
        <!-- by the active platform. Just a fallback. -->
        <property name="default.javac.source" value="1.4"/>
        <property name="default.javac.target" value="1.4"/>
    </target>
    <target name="-init-project" depends="-pre-init,-init-private,-init-user">
        <property file="nbproject/project.properties"/>
    </target>
    <target name="-do-init" depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property">
        <available file="${symbol_dollar}{manifest.file}" property="manifest.available"/>
        <condition property="manifest.available+main.class">
            <and>
                <isset property="manifest.available"/>
                <isset property="main.class"/>
                <not>
                    <equals arg1="${symbol_dollar}{main.class}" arg2="" trim="true"/>
                </not>
            </and>
        </condition>
        <condition property="manifest.available+main.class+mkdist.available">
            <and>
                <istrue value="${symbol_dollar}{manifest.available+main.class}"/>
                <isset property="libs.CopyLibs.classpath"/>
            </and>
        </condition>
        <condition property="have.tests">
            <or>
                <available file="${symbol_dollar}{test.src.dir}"/>
            </or>
        </condition>
        <condition property="have.sources">
            <or>
                <available file="${symbol_dollar}{src.dir}"/>
            </or>
        </condition>
        <condition property="netbeans.home+have.tests">
            <and>
                <isset property="netbeans.home"/>
                <isset property="have.tests"/>
            </and>
        </condition>
        <condition property="no.javadoc.preview">
            <isfalse value="${symbol_dollar}{javadoc.preview}"/>
        </condition>
        <property name="run.jvmargs" value=""/>
        <property name="javac.compilerargs" value=""/>
        <property name="work.dir" value="${symbol_dollar}{basedir}"/>
        <condition property="no.deps">
            <and>
                <istrue value="${symbol_dollar}{no.dependencies}"/>
            </and>
        </condition>
        <property name="javac.debug" value="true"/>
        <property name="javadoc.preview" value="true"/>
    </target>
    <target name="-post-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-init-check" depends="-pre-init,-init-private,-init-user,-init-project,-do-init">
        <fail unless="src.dir">Must set src.dir</fail>
        <fail unless="test.src.dir">Must set test.src.dir</fail>
        <fail unless="build.dir">Must set build.dir</fail>
        <fail unless="dist.dir">Must set dist.dir</fail>
        <fail unless="build.classes.dir">Must set build.classes.dir</fail>
        <fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>
        <fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>
        <fail unless="build.test.results.dir">Must set build.test.results.dir</fail>
        <fail unless="build.classes.excludes">Must set build.classes.excludes</fail>
        <fail unless="dist.jar">Must set dist.jar</fail>
    </target>
    <target name="-init-macrodef-property">
        <macrodef name="property" uri="http://www.netbeans.org/ns/jbi-component-project/1">
            <attribute name="name"/>
            <attribute name="value"/>
            <sequential>
                <property name="@{name}" value="${symbol_dollar}{@{value}}"/>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-javac">
        <macrodef name="javac" uri="http://www.netbeans.org/ns/jbi-component-project/1">
            <attribute name="srcdir" default="${symbol_dollar}{src.dir}"/>
            <attribute name="destdir" default="${symbol_dollar}{build.classes.dir}"/>
            <attribute name="classpath" default="${symbol_dollar}{javac.classpath}"/>
            <attribute name="debug" default="${symbol_dollar}{javac.debug}"/>
            <element name="customize" optional="true"/>
            <sequential>
                <javac srcdir="@{srcdir}" destdir="@{destdir}" debug="@{debug}" deprecation="${symbol_dollar}{javac.deprecation}" source="${symbol_dollar}{javac.source}" target="${symbol_dollar}{javac.target}" fork="yes" includeantruntime="false">
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                    <compilerarg line="${symbol_dollar}{javac.compilerargs}"/>
                    <customize/>
                </javac>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-junit">
        <macrodef name="junit" uri="http://www.netbeans.org/ns/jbi-component-project/1">
            <attribute name="includes" default="**/*Test.java"/>
            <sequential>
                <junit showoutput="true" fork="true" dir="${symbol_dollar}{basedir}" failureproperty="tests.failed" errorproperty="tests.failed">
                    <batchtest todir="${symbol_dollar}{build.test.results.dir}">
                        <fileset dir="${symbol_dollar}{test.src.dir}" includes="@{includes}"/>
                    </batchtest>
                    <classpath>
                        <path path="${symbol_dollar}{run.test.classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="test-sys-prop."/>
                        <mapper type="glob" from="test-sys-prop.*" to="*"/>
                    </syspropertyset>
                    <formatter type="brief" usefile="false"/>
                    <formatter type="xml"/>
                    <jvmarg line="${symbol_dollar}{run.jvmargs}"/>
                </junit>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-nbjpda">
        <macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/jbi-component-project/1">
            <attribute name="name" default="${symbol_dollar}{main.class}"/>
            <attribute name="classpath" default="${symbol_dollar}{debug.classpath}"/>
            <attribute name="stopclassname" default=""/>
            <sequential>
                <nbjpdastart transport="dt_socket" addressproperty="jpda.address" name="@{name}" stopclassname="@{stopclassname}">
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                </nbjpdastart>
            </sequential>
        </macrodef>
        <macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/jbi-component-project/1">
            <attribute name="dir" default="${symbol_dollar}{build.classes.dir}"/>
            <sequential>
                <nbjpdareload>
                    <fileset includes="${symbol_dollar}{fix.includes}*.class" dir="@{dir}"/>
                </nbjpdareload>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-debug">
        <macrodef name="debug" uri="http://www.netbeans.org/ns/jbi-component-project/1">
            <attribute name="classname" default="${symbol_dollar}{main.class}"/>
            <attribute name="classpath" default="${symbol_dollar}{debug.classpath}"/>
            <element name="customize" optional="true"/>
            <sequential>
                <java fork="true" classname="@{classname}" dir="${symbol_dollar}{work.dir}">
                    <jvmarg value="-Xdebug"/>
                    <jvmarg value="-Xnoagent"/>
                    <jvmarg value="-Djava.compiler=none"/>
                    <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${symbol_dollar}{jpda.address}"/>
                    <jvmarg line="${symbol_dollar}{run.jvmargs}"/>
                    <classpath>
                        <path path="@{classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="run-sys-prop."/>
                        <mapper type="glob" from="run-sys-prop.*" to="*"/>
                    </syspropertyset>
                    <customize/>
                </java>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-macrodef-java">
        <macrodef name="java" uri="http://www.netbeans.org/ns/jbi-component-project/1">
            <attribute name="classname" default="${symbol_dollar}{main.class}"/>
            <element name="customize" optional="true"/>
            <sequential>
                <java fork="true" classname="@{classname}" dir="${symbol_dollar}{work.dir}">
                    <jvmarg line="${symbol_dollar}{run.jvmargs}"/>
                    <classpath>
                        <path path="${symbol_dollar}{run.classpath}"/>
                    </classpath>
                    <syspropertyset>
                        <propertyref prefix="run-sys-prop."/>
                        <mapper type="glob" from="run-sys-prop.*" to="*"/>
                    </syspropertyset>
                    <customize/>
                </java>
            </sequential>
        </macrodef>
    </target>
    <target name="-init-presetdef-jar">
        <presetdef name="jar" uri="http://www.netbeans.org/ns/jbi-component-project/1">
            <jar jarfile="${symbol_dollar}{dist.jar}" compress="${symbol_dollar}{jar.compress}">
                <jbiproject:fileset dir="${symbol_dollar}{build.classes.dir}"/>
            </jar>
        </presetdef>
    </target>
    <target name="init" depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-junit,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar"/>
    <!--
    ===================
    COMPILATION SECTION
    ===================
    -->
    <target name="deps-jar" depends="init" unless="no.deps"/>
    <target name="-pre-pre-compile" depends="init,deps-jar">
        <mkdir dir="${symbol_dollar}{build.classes.dir}"/>
    </target>
    <target name="-pre-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-compile" depends="init,deps-jar,-pre-pre-compile,-pre-compile" if="have.sources">
        <jbiproject:javac/>
        <copy todir="${symbol_dollar}{build.classes.dir}">
            <fileset dir="${symbol_dollar}{src.dir}" excludes="${symbol_dollar}{build.classes.excludes}"/>
        </copy>
    </target>
    <target name="-post-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile" depends="init,deps-jar,-pre-pre-compile,-pre-compile,-do-compile,-post-compile" description="Compile project."/>
    <target name="-pre-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-compile-single" depends="init,deps-jar,-pre-pre-compile">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
        <jbiproject:javac>
            <customize>
                <patternset includes="${symbol_dollar}{javac.includes}"/>
            </customize>
        </jbiproject:javac>
    </target>
    <target name="-post-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile-single" depends="init,deps-jar,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single"/>
    <!--
    ====================
    JAR BUILDING SECTION
    ====================
    -->
    <target name="-pre-pre-jar" depends="init">
        <dirname property="dist.jar.dir" file="${symbol_dollar}{dist.jar}"/>
        <mkdir dir="${symbol_dollar}{dist.jar.dir}"/>
        <dirname property="build.predist.jar.dir" file="${symbol_dollar}{build.predist.jar}"/>
        <mkdir dir="${symbol_dollar}{build.predist.dir}"/>
    </target>
    <target name="-pre-jar">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-jar-with-libraries" depends="init,compile,-pre-pre-jar,-pre-jar">
        <property name="build.classes.dir.resolved" location="${symbol_dollar}{build.classes.dir}"/>
        <property name="libs.jbi.classpath.resolved" location="${symbol_dollar}{libs.jbi.classpath}"/>
        <pathconvert property="run.classpath.without.build.classes.dir">
            <path path="${symbol_dollar}{run.classpath}"/>
            <map from="${symbol_dollar}{build.classes.dir.resolved}" to=""/>
            <map from="${symbol_dollar}{libs.jbi.classpath.resolved}" to=""/>
        </pathconvert>
        <jar destfile="${symbol_dollar}{build.predist.jar}">
            <fileset dir="${symbol_dollar}{build.classes.dir}"/>
        </jar>
        <taskdef classname="com.sun.jbi.cdk.ant.CopyFiles" name="copyfiles" classpath="${symbol_dollar}{libs.jbi-cdk-ant-tasks.classpath}"/>
        <copyfiles todir="${symbol_dollar}{build.predist.dir}/lib" files="${symbol_dollar}{jbi.component.lib.classpath}"/>
    </target>
    <target name="-do-jbi-comp-zip" depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-with-libraries">
        <zip destfile="${symbol_dollar}{dist.jar}">
            <zipfileset dir="${symbol_dollar}{conf.dir}"/>
            <zipfileset file="${symbol_dollar}{build.predist.jar}"/>
            <zipfileset dir="${symbol_dollar}{build.predist.dir}/lib" prefix="lib"/>
        </zip>
    </target>
    <target name="-post-jar">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="jar" depends="init,compile,-pre-jar,-do-jar-with-libraries,-do-jbi-comp-zip,-post-jar" description="Build JAR."/>
    <!--
    =================
    EXECUTION SECTION
    =================
    -->
    <target name="run" depends="init,compile" description="Run a main class.">
        <jbiproject:java>
            <customize>
                <arg line="${symbol_dollar}{application.args}"/>
            </customize>
        </jbiproject:java>
    </target>
    <target name="run-single" depends="init,compile-single">
        <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
        <jbiproject:java classname="${symbol_dollar}{run.class}"/>
    </target>
    <!--
    =================
    DEBUGGING SECTION
    =================
    -->
    <target name="-debug-start-debugger" if="netbeans.home" depends="init">
        <jbiproject:nbjpdastart name="${symbol_dollar}{debug.class}"/>
    </target>
    <target name="-debug-start-debuggee" depends="init,compile">
        <jbiproject:debug>
            <customize>
                <arg line="${symbol_dollar}{application.args}"/>
            </customize>
        </jbiproject:debug>
    </target>
    <target name="debug" if="netbeans.home" depends="init,compile,-debug-start-debugger,-debug-start-debuggee" description="Debug project in IDE."/>
    <target name="-debug-start-debugger-stepinto" if="netbeans.home" depends="init">
        <jbiproject:nbjpdastart stopclassname="${symbol_dollar}{main.class}"/>
    </target>
    <target name="debug-stepinto" if="netbeans.home" depends="init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee"/>
    <target name="-debug-start-debuggee-single" if="netbeans.home" depends="init,compile-single">
        <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
        <jbiproject:debug classname="${symbol_dollar}{debug.class}"/>
    </target>
    <target name="debug-single" if="netbeans.home" depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-single"/>
    <target name="-pre-debug-fix" depends="init">
        <fail unless="fix.includes">Must set fix.includes</fail>
        <property name="javac.includes" value="${symbol_dollar}{fix.includes}.java"/>
    </target>
    <target name="-do-debug-fix" if="netbeans.home" depends="init,-pre-debug-fix,compile-single">
        <jbiproject:nbjpdareload/>
    </target>
    <target name="debug-fix" if="netbeans.home" depends="init,-pre-debug-fix,-do-debug-fix"/>
    <target name="connect-debugger" unless="is.debugged">
        <nbjpdaconnect address="${symbol_dollar}{jpda.address}" host="${symbol_dollar}{jpda.host}" name="${symbol_dollar}{name}" transport="${symbol_dollar}{jpda.transport}">
            <classpath>
                <path path="${symbol_dollar}{debug.classpath}"/>
            </classpath>
            <sourcepath>
                <path path="${symbol_dollar}{web.docbase.dir}"/>
            </sourcepath>
        </nbjpdaconnect>
    </target>
    <!--
    ===============
    JAVADOC SECTION
    ===============
    -->
    <target name="-javadoc-build" depends="init">
        <mkdir dir="${symbol_dollar}{dist.javadoc.dir}"/>
        <javadoc destdir="${symbol_dollar}{dist.javadoc.dir}" source="${symbol_dollar}{javac.source}" notree="${symbol_dollar}{javadoc.notree}" use="${symbol_dollar}{javadoc.use}" nonavbar="${symbol_dollar}{javadoc.nonavbar}" noindex="${symbol_dollar}{javadoc.noindex}" splitindex="${symbol_dollar}{javadoc.splitindex}" author="${symbol_dollar}{javadoc.author}" version="${symbol_dollar}{javadoc.version}" windowtitle="${symbol_dollar}{javadoc.windowtitle}" private="${symbol_dollar}{javadoc.private}" additionalparam="${symbol_dollar}{javadoc.additionalparam}" failonerror="true" useexternalfile="true">
            <classpath>
                <path path="${symbol_dollar}{javac.classpath}"/>
            </classpath>
            <sourcepath>
                <pathelement location="${symbol_dollar}{src.dir}"/>
            </sourcepath>
            <packageset dir="${symbol_dollar}{src.dir}" includes="*/**"/>
            <fileset dir="${symbol_dollar}{src.dir}" includes="*.java"/>
        </javadoc>
    </target>
    <target name="-javadoc-browse" if="netbeans.home" unless="no.javadoc.preview" depends="init,-javadoc-build">
        <nbbrowse file="${symbol_dollar}{dist.javadoc.dir}/index.html"/>
    </target>
    <target name="javadoc" depends="init,-javadoc-build,-javadoc-browse" description="Build Javadoc."/>
    <!--
    =========================
    JUNIT COMPILATION SECTION
    =========================
    -->
    <target name="-pre-pre-compile-test" if="have.tests" depends="init,compile">
        <mkdir dir="${symbol_dollar}{build.test.classes.dir}"/>
    </target>
    <target name="-pre-compile-test">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-compile-test" if="have.tests" depends="init,compile,-pre-pre-compile-test,-pre-compile-test">
        <jbiproject:javac srcdir="${symbol_dollar}{test.src.dir}" destdir="${symbol_dollar}{build.test.classes.dir}" debug="true" classpath="${symbol_dollar}{javac.test.classpath}"/>
        <copy todir="${symbol_dollar}{build.test.classes.dir}">
            <fileset dir="${symbol_dollar}{test.src.dir}" excludes="**/*.java"/>
        </copy>
    </target>
    <target name="-post-compile-test">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile-test" depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test"/>
    <target name="-pre-compile-test-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="-do-compile-test-single" if="have.tests" depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
        <jbiproject:javac srcdir="${symbol_dollar}{test.src.dir}" destdir="${symbol_dollar}{build.test.classes.dir}" debug="true" classpath="${symbol_dollar}{javac.test.classpath}">
            <customize>
                <patternset includes="${symbol_dollar}{javac.includes}"/>
            </customize>
        </jbiproject:javac>
        <copy todir="${symbol_dollar}{build.test.classes.dir}">
            <fileset dir="${symbol_dollar}{test.src.dir}" excludes="**/*.java"/>
        </copy>
    </target>
    <target name="-post-compile-test-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile-test-single" depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single"/>
    <!--
    =======================
    JUNIT EXECUTION SECTION
    =======================
    -->
    <target name="-pre-test-run" if="have.tests" depends="init">
        <mkdir dir="${symbol_dollar}{build.test.results.dir}"/>
        <antcall inheritall="true" target="run-deploy-test-sa"/>
    </target>
    <target name="-do-test-run" if="have.tests" depends="init,compile-test,-pre-test-run">
        <jbiproject:junit/>
    </target>
    <target name="-post-test-run" if="have.tests" depends="init,compile-test,-pre-test-run,-do-test-run">
        <antcall inheritall="true" target="run-undeploy-test-sa"/>
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    <target name="test-report" if="have.tests" depends="init"/>
    <target name="-test-browse" if="netbeans.home+have.tests" depends="init"/>
    <target name="test" depends="init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse" description="Run unit tests."/>
    <target name="-pre-test-run-single" if="have.tests" depends="init">
        <mkdir dir="${symbol_dollar}{build.test.results.dir}"/>
    </target>
    <target name="-do-test-run-single" if="have.tests" depends="init,compile-test-single,-pre-test-run-single">
        <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
        <jbiproject:junit includes="${symbol_dollar}{test.includes}"/>
    </target>
    <target name="-post-test-run-single" if="have.tests" depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single">
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    <target name="test-single" depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single" description="Run single unit test."/>
    <!--
    =======================
    JUNIT DEBUGGING SECTION
    =======================
    -->
    <target name="-debug-start-debuggee-test" if="have.tests" depends="init,compile-test">
        <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
        <jbiproject:debug classname="junit.textui.TestRunner" classpath="${symbol_dollar}{debug.test.classpath}">
            <customize>
                <arg line="${symbol_dollar}{test.class}"/>
            </customize>
        </jbiproject:debug>
    </target>
    <target name="-debug-start-debugger-test" if="netbeans.home+have.tests" depends="init,compile-test">
        <jbiproject:nbjpdastart name="${symbol_dollar}{test.class}" classpath="${symbol_dollar}{debug.test.classpath}"/>
    </target>
    <target name="debug-test" depends="init,compile-test,-debug-start-debugger-test,-debug-start-debuggee-test"/>
    <target name="-do-debug-fix-test" if="netbeans.home" depends="init,-pre-debug-fix,compile-test-single">
        <jbiproject:nbjpdareload dir="${symbol_dollar}{build.test.classes.dir}"/>
    </target>
    <target name="debug-fix-test" if="netbeans.home" depends="init,-pre-debug-fix,-do-debug-fix-test"/>
    <!--
    ===============
    CLEANUP SECTION
    ===============
    -->
    <target name="deps-clean" depends="init" unless="no.deps"/>
    <target name="-do-clean" depends="init">
        <delete dir="${symbol_dollar}{build.dir}"/>
        <delete dir="${symbol_dollar}{dist.dir}"/>
    </target>
    <target name="-post-clean">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="clean" depends="init,deps-clean,-do-clean,-post-clean" description="Clean build products."/>
    
    <target name="postArchTypeGen" description="Post task after archtype Gen">
        <echo>Inside: postArchTypeGen - Post task is getting executed!</echo>
        <!--<mkdir dir="src/java/${artifactId}" />-->
        <mkdir dir="src/java/net/openesb/component/${artifactId}" />
        <mkdir dir="src/java/net/openesb/component/${artifactId}/common" />
        <mkdir dir="src/java/net/openesb/component/${artifactId}/common/wsdl" />
        <mkdir dir="src/java/net/openesb/component/${artifactId}/common/deployment" />
		
        <mkdir dir="test/java/net/openesb/component/${artifactId}/test" />
		
        <copy todir="test/java/net/openesb/component/${artifactId}/test">
            <fileset dir="test/java/net/openesb/component/cname/test">
                <include name="*"/>
            </fileset>
        </copy>
        
        <copy todir="src/java/net/openesb/component/${artifactId}">
            <fileset dir="src/java/net/openesb/component/cname">
                <include name="*"/>
            </fileset>
        </copy>
        
        <copy todir="src/java/net/openesb/component/${artifactId}/common">
            <fileset dir="src/java/net/openesb/component/cname/common">
                <include name="*"/>
            </fileset>
        </copy>
        
        <copy todir="src/java/net/openesb/component/${artifactId}/common/wsdl">
            <fileset dir="src/java/net/openesb/component/cname/common/wsdl">
                <include name="*"/>
            </fileset>
        </copy>
        
        <copy todir="src/java/net/openesb/component/${artifactId}/common/deployment">
            <fileset dir="src/java/net/openesb/component/cname/common/deployment">
                <include name="*"/>
            </fileset>
        </copy>
        
        <delete dir="src/java/cname" />
        <delete dir="src/java/net/openesb/component/cname" />
        <delete dir="test/java/net/openesb/component/cname/" />
        <echo>Inside: postArchTypeGen - Post task executed successfully!</echo>
    </target>
    
    
</project>
